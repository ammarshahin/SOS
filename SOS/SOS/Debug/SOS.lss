
SOS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000114a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  0000114a  000011de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000035  0080006e  0080006e  000011ec  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000011ec  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000121c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b8  00000000  00000000  00001258  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d3c  00000000  00000000  00001510  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b3e  00000000  00000000  0000324c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001c8d  00000000  00000000  00003d8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b88  00000000  00000000  00005a18  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000112e  00000000  00000000  000065a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000018d0  00000000  00000000  000076ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000240  00000000  00000000  00008f9e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 00 08 	jmp	0x1000	; 0x1000 <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e4       	ldi	r30, 0x4A	; 74
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ae 36       	cpi	r26, 0x6E	; 110
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	ae e6       	ldi	r26, 0x6E	; 110
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a3 3a       	cpi	r26, 0xA3	; 163
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 75 00 	call	0xea	; 0xea <main>
      8a:	0c 94 a3 08 	jmp	0x1146	; 0x1146 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Task1>:
#include "SOS.h"
#include "Led.h"


void Task1(void)
{
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	cd b7       	in	r28, 0x3d	; 61
      98:	de b7       	in	r29, 0x3e	; 62
	Led_Tog(LED0);
      9a:	80 e1       	ldi	r24, 0x10	; 16
      9c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <Led_Tog>
}
      a0:	00 00       	nop
      a2:	df 91       	pop	r29
      a4:	cf 91       	pop	r28
      a6:	08 95       	ret

000000a8 <Task2>:

void Task2(void)
{
      a8:	cf 93       	push	r28
      aa:	df 93       	push	r29
      ac:	cd b7       	in	r28, 0x3d	; 61
      ae:	de b7       	in	r29, 0x3e	; 62
	Led_Tog(LED1);
      b0:	80 e2       	ldi	r24, 0x20	; 32
      b2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <Led_Tog>
}
      b6:	00 00       	nop
      b8:	df 91       	pop	r29
      ba:	cf 91       	pop	r28
      bc:	08 95       	ret

000000be <Task3>:

void Task3(void)
{
      be:	cf 93       	push	r28
      c0:	df 93       	push	r29
      c2:	cd b7       	in	r28, 0x3d	; 61
      c4:	de b7       	in	r29, 0x3e	; 62
	Led_Tog(LED2);
      c6:	80 e4       	ldi	r24, 0x40	; 64
      c8:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <Led_Tog>
}
      cc:	00 00       	nop
      ce:	df 91       	pop	r29
      d0:	cf 91       	pop	r28
      d2:	08 95       	ret

000000d4 <Task4>:

void Task4(void)
{
      d4:	cf 93       	push	r28
      d6:	df 93       	push	r29
      d8:	cd b7       	in	r28, 0x3d	; 61
      da:	de b7       	in	r29, 0x3e	; 62
	
	Led_Tog(LED3);
      dc:	80 e8       	ldi	r24, 0x80	; 128
      de:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <Led_Tog>
}
      e2:	00 00       	nop
      e4:	df 91       	pop	r29
      e6:	cf 91       	pop	r28
      e8:	08 95       	ret

000000ea <main>:


int main(void)
{
      ea:	cf 93       	push	r28
      ec:	df 93       	push	r29
      ee:	cd b7       	in	r28, 0x3d	; 61
      f0:	de b7       	in	r29, 0x3e	; 62
	/* Initializing the Led To indicate The Tasks */
	Led_Init(LED0);
      f2:	80 e1       	ldi	r24, 0x10	; 16
      f4:	0e 94 aa 00 	call	0x154	; 0x154 <Led_Init>
	Led_Init(LED1);
      f8:	80 e2       	ldi	r24, 0x20	; 32
      fa:	0e 94 aa 00 	call	0x154	; 0x154 <Led_Init>
	Led_Init(LED2);
      fe:	80 e4       	ldi	r24, 0x40	; 64
     100:	0e 94 aa 00 	call	0x154	; 0x154 <Led_Init>
	Led_Init(LED3);
     104:	80 e8       	ldi	r24, 0x80	; 128
     106:	0e 94 aa 00 	call	0x154	; 0x154 <Led_Init>
	
	Sos_Init();	
     10a:	0e 94 44 01 	call	0x288	; 0x288 <Sos_Init>
	
	Sos_Create_Task(Task1,5,300);
     10e:	4c e2       	ldi	r20, 0x2C	; 44
     110:	51 e0       	ldi	r21, 0x01	; 1
     112:	65 e0       	ldi	r22, 0x05	; 5
     114:	89 e4       	ldi	r24, 0x49	; 73
     116:	90 e0       	ldi	r25, 0x00	; 0
     118:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <Sos_Create_Task>
	Sos_Create_Task(Task2,4,150);
     11c:	46 e9       	ldi	r20, 0x96	; 150
     11e:	50 e0       	ldi	r21, 0x00	; 0
     120:	64 e0       	ldi	r22, 0x04	; 4
     122:	84 e5       	ldi	r24, 0x54	; 84
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <Sos_Create_Task>
	Sos_Create_Task(Task3,3,75);
     12a:	4b e4       	ldi	r20, 0x4B	; 75
     12c:	50 e0       	ldi	r21, 0x00	; 0
     12e:	63 e0       	ldi	r22, 0x03	; 3
     130:	8f e5       	ldi	r24, 0x5F	; 95
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <Sos_Create_Task>
	Sos_Create_Task(Task4,2,30);
     138:	4e e1       	ldi	r20, 0x1E	; 30
     13a:	50 e0       	ldi	r21, 0x00	; 0
     13c:	62 e0       	ldi	r22, 0x02	; 2
     13e:	8a e6       	ldi	r24, 0x6A	; 106
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <Sos_Create_Task>
		
	Sos_Run();
     146:	0e 94 64 02 	call	0x4c8	; 0x4c8 <Sos_Run>
     14a:	80 e0       	ldi	r24, 0x00	; 0
     14c:	90 e0       	ldi	r25, 0x00	; 0
}
     14e:	df 91       	pop	r29
     150:	cf 91       	pop	r28
     152:	08 95       	ret

00000154 <Led_Init>:
     154:	cf 93       	push	r28
     156:	df 93       	push	r29
     158:	1f 92       	push	r1
     15a:	cd b7       	in	r28, 0x3d	; 61
     15c:	de b7       	in	r29, 0x3e	; 62
     15e:	89 83       	std	Y+1, r24	; 0x01
     160:	89 81       	ldd	r24, Y+1	; 0x01
     162:	88 2f       	mov	r24, r24
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	80 32       	cpi	r24, 0x20	; 32
     168:	91 05       	cpc	r25, r1
     16a:	c1 f0       	breq	.+48     	; 0x19c <Led_Init+0x48>
     16c:	81 32       	cpi	r24, 0x21	; 33
     16e:	91 05       	cpc	r25, r1
     170:	1c f4       	brge	.+6      	; 0x178 <Led_Init+0x24>
     172:	40 97       	sbiw	r24, 0x10	; 16
     174:	41 f0       	breq	.+16     	; 0x186 <Led_Init+0x32>
     176:	33 c0       	rjmp	.+102    	; 0x1de <Led_Init+0x8a>
     178:	80 34       	cpi	r24, 0x40	; 64
     17a:	91 05       	cpc	r25, r1
     17c:	d1 f0       	breq	.+52     	; 0x1b2 <Led_Init+0x5e>
     17e:	80 38       	cpi	r24, 0x80	; 128
     180:	91 05       	cpc	r25, r1
     182:	11 f1       	breq	.+68     	; 0x1c8 <Led_Init+0x74>
     184:	2c c0       	rjmp	.+88     	; 0x1de <Led_Init+0x8a>
     186:	4f ef       	ldi	r20, 0xFF	; 255
     188:	60 e1       	ldi	r22, 0x10	; 16
     18a:	81 e0       	ldi	r24, 0x01	; 1
     18c:	0e 94 4b 03 	call	0x696	; 0x696 <Gpio_PinDirection>
     190:	40 e0       	ldi	r20, 0x00	; 0
     192:	60 e1       	ldi	r22, 0x10	; 16
     194:	81 e0       	ldi	r24, 0x01	; 1
     196:	0e 94 f7 03 	call	0x7ee	; 0x7ee <Gpio_PinWrite>
     19a:	21 c0       	rjmp	.+66     	; 0x1de <Led_Init+0x8a>
     19c:	4f ef       	ldi	r20, 0xFF	; 255
     19e:	60 e2       	ldi	r22, 0x20	; 32
     1a0:	81 e0       	ldi	r24, 0x01	; 1
     1a2:	0e 94 4b 03 	call	0x696	; 0x696 <Gpio_PinDirection>
     1a6:	40 e0       	ldi	r20, 0x00	; 0
     1a8:	60 e2       	ldi	r22, 0x20	; 32
     1aa:	81 e0       	ldi	r24, 0x01	; 1
     1ac:	0e 94 f7 03 	call	0x7ee	; 0x7ee <Gpio_PinWrite>
     1b0:	16 c0       	rjmp	.+44     	; 0x1de <Led_Init+0x8a>
     1b2:	4f ef       	ldi	r20, 0xFF	; 255
     1b4:	60 e4       	ldi	r22, 0x40	; 64
     1b6:	81 e0       	ldi	r24, 0x01	; 1
     1b8:	0e 94 4b 03 	call	0x696	; 0x696 <Gpio_PinDirection>
     1bc:	40 e0       	ldi	r20, 0x00	; 0
     1be:	60 e4       	ldi	r22, 0x40	; 64
     1c0:	81 e0       	ldi	r24, 0x01	; 1
     1c2:	0e 94 f7 03 	call	0x7ee	; 0x7ee <Gpio_PinWrite>
     1c6:	0b c0       	rjmp	.+22     	; 0x1de <Led_Init+0x8a>
     1c8:	4f ef       	ldi	r20, 0xFF	; 255
     1ca:	60 e8       	ldi	r22, 0x80	; 128
     1cc:	81 e0       	ldi	r24, 0x01	; 1
     1ce:	0e 94 4b 03 	call	0x696	; 0x696 <Gpio_PinDirection>
     1d2:	40 e0       	ldi	r20, 0x00	; 0
     1d4:	60 e8       	ldi	r22, 0x80	; 128
     1d6:	81 e0       	ldi	r24, 0x01	; 1
     1d8:	0e 94 f7 03 	call	0x7ee	; 0x7ee <Gpio_PinWrite>
     1dc:	00 00       	nop
     1de:	00 00       	nop
     1e0:	0f 90       	pop	r0
     1e2:	df 91       	pop	r29
     1e4:	cf 91       	pop	r28
     1e6:	08 95       	ret

000001e8 <Led_Tog>:
     1e8:	cf 93       	push	r28
     1ea:	df 93       	push	r29
     1ec:	1f 92       	push	r1
     1ee:	cd b7       	in	r28, 0x3d	; 61
     1f0:	de b7       	in	r29, 0x3e	; 62
     1f2:	89 83       	std	Y+1, r24	; 0x01
     1f4:	89 81       	ldd	r24, Y+1	; 0x01
     1f6:	88 2f       	mov	r24, r24
     1f8:	90 e0       	ldi	r25, 0x00	; 0
     1fa:	80 32       	cpi	r24, 0x20	; 32
     1fc:	91 05       	cpc	r25, r1
     1fe:	91 f0       	breq	.+36     	; 0x224 <Led_Tog+0x3c>
     200:	81 32       	cpi	r24, 0x21	; 33
     202:	91 05       	cpc	r25, r1
     204:	1c f4       	brge	.+6      	; 0x20c <Led_Tog+0x24>
     206:	40 97       	sbiw	r24, 0x10	; 16
     208:	41 f0       	breq	.+16     	; 0x21a <Led_Tog+0x32>
     20a:	1b c0       	rjmp	.+54     	; 0x242 <Led_Tog+0x5a>
     20c:	80 34       	cpi	r24, 0x40	; 64
     20e:	91 05       	cpc	r25, r1
     210:	71 f0       	breq	.+28     	; 0x22e <Led_Tog+0x46>
     212:	80 38       	cpi	r24, 0x80	; 128
     214:	91 05       	cpc	r25, r1
     216:	81 f0       	breq	.+32     	; 0x238 <Led_Tog+0x50>
     218:	14 c0       	rjmp	.+40     	; 0x242 <Led_Tog+0x5a>
     21a:	60 e1       	ldi	r22, 0x10	; 16
     21c:	81 e0       	ldi	r24, 0x01	; 1
     21e:	0e 94 96 04 	call	0x92c	; 0x92c <Gpio_PinToggle>
     222:	0f c0       	rjmp	.+30     	; 0x242 <Led_Tog+0x5a>
     224:	60 e2       	ldi	r22, 0x20	; 32
     226:	81 e0       	ldi	r24, 0x01	; 1
     228:	0e 94 96 04 	call	0x92c	; 0x92c <Gpio_PinToggle>
     22c:	0a c0       	rjmp	.+20     	; 0x242 <Led_Tog+0x5a>
     22e:	60 e4       	ldi	r22, 0x40	; 64
     230:	81 e0       	ldi	r24, 0x01	; 1
     232:	0e 94 96 04 	call	0x92c	; 0x92c <Gpio_PinToggle>
     236:	05 c0       	rjmp	.+10     	; 0x242 <Led_Tog+0x5a>
     238:	60 e8       	ldi	r22, 0x80	; 128
     23a:	81 e0       	ldi	r24, 0x01	; 1
     23c:	0e 94 96 04 	call	0x92c	; 0x92c <Gpio_PinToggle>
     240:	00 00       	nop
     242:	00 00       	nop
     244:	0f 90       	pop	r0
     246:	df 91       	pop	r29
     248:	cf 91       	pop	r28
     24a:	08 95       	ret

0000024c <TimerSysticCallback>:
 * Function : TimerSysticCallback
 * Description: this function is Called by the ISR to Update the System Ticks
 * @return void 
 */
static void TimerSysticCallback(void)
{
     24c:	cf 93       	push	r28
     24e:	df 93       	push	r29
     250:	cd b7       	in	r28, 0x3d	; 61
     252:	de b7       	in	r29, 0x3e	; 62
	Systick++;
     254:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <Systick>
     258:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <Systick+0x1>
     25c:	01 96       	adiw	r24, 0x01	; 1
     25e:	90 93 93 00 	sts	0x0093, r25	; 0x800093 <Systick+0x1>
     262:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <Systick>
	if (Systick == MAX_SYSTICK_VALUS)
     266:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <Systick>
     26a:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <Systick+0x1>
     26e:	88 3e       	cpi	r24, 0xE8	; 232
     270:	9d 4f       	sbci	r25, 0xFD	; 253
     272:	31 f4       	brne	.+12     	; 0x280 <TimerSysticCallback+0x34>
	{
		Systick = INITIAL_ONE;
     274:	81 e0       	ldi	r24, 0x01	; 1
     276:	90 e0       	ldi	r25, 0x00	; 0
     278:	90 93 93 00 	sts	0x0093, r25	; 0x800093 <Systick+0x1>
     27c:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <Systick>
	}else
	{
		//Do Nothing
	}
}
     280:	00 00       	nop
     282:	df 91       	pop	r29
     284:	cf 91       	pop	r28
     286:	08 95       	ret

00000288 <Sos_Init>:
 * Function : Sos_Init
 * Description: this function is to initialize the SOS
 * @return Status: of the initialization according to the Error handling macros 
 */
EnumSOSError_type Sos_Init(void)
{
     288:	cf 93       	push	r28
     28a:	df 93       	push	r29
     28c:	00 d0       	rcall	.+0      	; 0x28e <Sos_Init+0x6>
     28e:	00 d0       	rcall	.+0      	; 0x290 <Sos_Init+0x8>
     290:	00 d0       	rcall	.+0      	; 0x292 <Sos_Init+0xa>
     292:	cd b7       	in	r28, 0x3d	; 61
     294:	de b7       	in	r29, 0x3e	; 62
	uint8 index;
	EnumSOSError_type API_State = OK_T;
     296:	1a 82       	std	Y+2, r1	; 0x02
	Systick = INITIAL_ONE;
     298:	81 e0       	ldi	r24, 0x01	; 1
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	90 93 93 00 	sts	0x0093, r25	; 0x800093 <Systick+0x1>
     2a0:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <Systick>
	
	/* Enable the Global Interrupt */
	Interrupts_On();
     2a4:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <Interrupts_On>
	
	/* Set the Sleep Mode To Idle */
	set_sleep_mode(SLEEP_MODE_IDLE);
     2a8:	85 e5       	ldi	r24, 0x55	; 85
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	25 e5       	ldi	r18, 0x55	; 85
     2ae:	30 e0       	ldi	r19, 0x00	; 0
     2b0:	f9 01       	movw	r30, r18
     2b2:	20 81       	ld	r18, Z
     2b4:	2f 78       	andi	r18, 0x8F	; 143
     2b6:	fc 01       	movw	r30, r24
     2b8:	20 83       	st	Z, r18

	/* Set the Systick of the Timer ISR */
	uint32 TimerCount_Time = MILLISECONSD_TO_MICROSECONSD_FACTOR * Systick;
     2ba:	40 91 92 00 	lds	r20, 0x0092	; 0x800092 <Systick>
     2be:	50 91 93 00 	lds	r21, 0x0093	; 0x800093 <Systick+0x1>
     2c2:	28 ee       	ldi	r18, 0xE8	; 232
     2c4:	33 e0       	ldi	r19, 0x03	; 3
     2c6:	42 9f       	mul	r20, r18
     2c8:	c0 01       	movw	r24, r0
     2ca:	43 9f       	mul	r20, r19
     2cc:	90 0d       	add	r25, r0
     2ce:	52 9f       	mul	r21, r18
     2d0:	90 0d       	add	r25, r0
     2d2:	11 24       	eor	r1, r1
     2d4:	cc 01       	movw	r24, r24
     2d6:	a0 e0       	ldi	r26, 0x00	; 0
     2d8:	b0 e0       	ldi	r27, 0x00	; 0
     2da:	8b 83       	std	Y+3, r24	; 0x03
     2dc:	9c 83       	std	Y+4, r25	; 0x04
     2de:	ad 83       	std	Y+5, r26	; 0x05
     2e0:	be 83       	std	Y+6, r27	; 0x06
	
	/* Set the timer Call Back Value */
	Timers_SetCallBack(TimerSysticCallback);
     2e2:	86 e2       	ldi	r24, 0x26	; 38
     2e4:	91 e0       	ldi	r25, 0x01	; 1
     2e6:	0e 94 ed 07 	call	0xfda	; 0xfda <Timers_SetCallBack>
	
	/* Initialize the Buffer used in the SOS */
	for(index = INITIAL_ZERO; index < SOS_MAX_NUMBER_OF_TASKS ; index++)
     2ea:	19 82       	std	Y+1, r1	; 0x01
     2ec:	3d c0       	rjmp	.+122    	; 0x368 <Sos_Init+0xe0>
	{
		StrArrOfTasks[index].Periodicity = INITIAL_ZERO;
     2ee:	89 81       	ldd	r24, Y+1	; 0x01
     2f0:	28 2f       	mov	r18, r24
     2f2:	30 e0       	ldi	r19, 0x00	; 0
     2f4:	c9 01       	movw	r24, r18
     2f6:	88 0f       	add	r24, r24
     2f8:	99 1f       	adc	r25, r25
     2fa:	82 0f       	add	r24, r18
     2fc:	93 1f       	adc	r25, r19
     2fe:	88 0f       	add	r24, r24
     300:	99 1f       	adc	r25, r25
     302:	8f 58       	subi	r24, 0x8F	; 143
     304:	9f 4f       	sbci	r25, 0xFF	; 255
     306:	fc 01       	movw	r30, r24
     308:	11 82       	std	Z+1, r1	; 0x01
     30a:	10 82       	st	Z, r1
		StrArrOfTasks[index].Priority = INITIAL_ZERO;
     30c:	89 81       	ldd	r24, Y+1	; 0x01
     30e:	28 2f       	mov	r18, r24
     310:	30 e0       	ldi	r19, 0x00	; 0
     312:	c9 01       	movw	r24, r18
     314:	88 0f       	add	r24, r24
     316:	99 1f       	adc	r25, r25
     318:	82 0f       	add	r24, r18
     31a:	93 1f       	adc	r25, r19
     31c:	88 0f       	add	r24, r24
     31e:	99 1f       	adc	r25, r25
     320:	80 59       	subi	r24, 0x90	; 144
     322:	9f 4f       	sbci	r25, 0xFF	; 255
     324:	fc 01       	movw	r30, r24
     326:	10 82       	st	Z, r1
		StrArrOfTasks[index].TaskState = TaskDormant;
     328:	89 81       	ldd	r24, Y+1	; 0x01
     32a:	28 2f       	mov	r18, r24
     32c:	30 e0       	ldi	r19, 0x00	; 0
     32e:	c9 01       	movw	r24, r18
     330:	88 0f       	add	r24, r24
     332:	99 1f       	adc	r25, r25
     334:	82 0f       	add	r24, r18
     336:	93 1f       	adc	r25, r19
     338:	88 0f       	add	r24, r24
     33a:	99 1f       	adc	r25, r25
     33c:	8d 58       	subi	r24, 0x8D	; 141
     33e:	9f 4f       	sbci	r25, 0xFF	; 255
     340:	fc 01       	movw	r30, r24
     342:	10 82       	st	Z, r1
		StrArrOfTasks[index].PtrTask = NULL;
     344:	89 81       	ldd	r24, Y+1	; 0x01
     346:	28 2f       	mov	r18, r24
     348:	30 e0       	ldi	r19, 0x00	; 0
     34a:	c9 01       	movw	r24, r18
     34c:	88 0f       	add	r24, r24
     34e:	99 1f       	adc	r25, r25
     350:	82 0f       	add	r24, r18
     352:	93 1f       	adc	r25, r19
     354:	88 0f       	add	r24, r24
     356:	99 1f       	adc	r25, r25
     358:	82 59       	subi	r24, 0x92	; 146
     35a:	9f 4f       	sbci	r25, 0xFF	; 255
     35c:	fc 01       	movw	r30, r24
     35e:	11 82       	std	Z+1, r1	; 0x01
     360:	10 82       	st	Z, r1
	
	/* Set the timer Call Back Value */
	Timers_SetCallBack(TimerSysticCallback);
	
	/* Initialize the Buffer used in the SOS */
	for(index = INITIAL_ZERO; index < SOS_MAX_NUMBER_OF_TASKS ; index++)
     362:	89 81       	ldd	r24, Y+1	; 0x01
     364:	8f 5f       	subi	r24, 0xFF	; 255
     366:	89 83       	std	Y+1, r24	; 0x01
     368:	89 81       	ldd	r24, Y+1	; 0x01
     36a:	86 30       	cpi	r24, 0x06	; 6
     36c:	08 f4       	brcc	.+2      	; 0x370 <Sos_Init+0xe8>
     36e:	bf cf       	rjmp	.-130    	; 0x2ee <Sos_Init+0x66>
		/* Set the default resolution  */
		Timers_SetCounter(TIMER_0,TimerCount_Time);
		break;
		case TIMER_1:
		/* Initialize the Timer Used  */
		Timers_Init(&timer1_cfg_s);
     370:	83 e6       	ldi	r24, 0x63	; 99
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <Timers_Init>
		
		/* Set the default resolution  */
		Timers_SetCounter(TIMER_1,TimerCount_Time);
     378:	8b 81       	ldd	r24, Y+3	; 0x03
     37a:	9c 81       	ldd	r25, Y+4	; 0x04
     37c:	ad 81       	ldd	r26, Y+5	; 0x05
     37e:	be 81       	ldd	r27, Y+6	; 0x06
     380:	ac 01       	movw	r20, r24
     382:	bd 01       	movw	r22, r26
     384:	81 e0       	ldi	r24, 0x01	; 1
     386:	0e 94 65 06 	call	0xcca	; 0xcca <Timers_SetCounter>
		break;
     38a:	00 00       	nop
		break;
		default:
		API_State = ERROR_INVALID_INPUT;
		break;
	}
	return API_State;
     38c:	8a 81       	ldd	r24, Y+2	; 0x02
}
     38e:	26 96       	adiw	r28, 0x06	; 6
     390:	0f b6       	in	r0, 0x3f	; 63
     392:	f8 94       	cli
     394:	de bf       	out	0x3e, r29	; 62
     396:	0f be       	out	0x3f, r0	; 63
     398:	cd bf       	out	0x3d, r28	; 61
     39a:	df 91       	pop	r29
     39c:	cf 91       	pop	r28
     39e:	08 95       	ret

000003a0 <Sos_Create_Task>:
 * @param PtrFunc: 
					i/p: Pointer to the Task
 * @return EnmTMUError_t: the status of the function according to the Error handling Enum 
 */
EnumSOSError_type Sos_Create_Task(v_PtrFunc_v_type PtrFunc,uint8 priority, uint16 periodicity)
{
     3a0:	cf 93       	push	r28
     3a2:	df 93       	push	r29
     3a4:	cd b7       	in	r28, 0x3d	; 61
     3a6:	de b7       	in	r29, 0x3e	; 62
     3a8:	27 97       	sbiw	r28, 0x07	; 7
     3aa:	0f b6       	in	r0, 0x3f	; 63
     3ac:	f8 94       	cli
     3ae:	de bf       	out	0x3e, r29	; 62
     3b0:	0f be       	out	0x3f, r0	; 63
     3b2:	cd bf       	out	0x3d, r28	; 61
     3b4:	9c 83       	std	Y+4, r25	; 0x04
     3b6:	8b 83       	std	Y+3, r24	; 0x03
     3b8:	6d 83       	std	Y+5, r22	; 0x05
     3ba:	5f 83       	std	Y+7, r21	; 0x07
     3bc:	4e 83       	std	Y+6, r20	; 0x06
	EnumSOSError_type API_State = OK_T;
     3be:	19 82       	std	Y+1, r1	; 0x01
	uint8 index;
	/* Protect from NUll pointer */ 
	if ( NULL != PtrFunc)
     3c0:	8b 81       	ldd	r24, Y+3	; 0x03
     3c2:	9c 81       	ldd	r25, Y+4	; 0x04
     3c4:	89 2b       	or	r24, r25
     3c6:	09 f4       	brne	.+2      	; 0x3ca <Sos_Create_Task+0x2a>
     3c8:	73 c0       	rjmp	.+230    	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
	{   /* Loop Through the Array of Tasks */ 
		for (index = INITIAL_ZERO ; index < SOS_MAX_NUMBER_OF_TASKS ; index++)
     3ca:	1a 82       	std	Y+2, r1	; 0x02
     3cc:	6c c0       	rjmp	.+216    	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
		{	 /* Find a task place that hasn't been Reserved by another task */ 
			if (StrArrOfTasks[index].PtrTask == NULL)
     3ce:	8a 81       	ldd	r24, Y+2	; 0x02
     3d0:	28 2f       	mov	r18, r24
     3d2:	30 e0       	ldi	r19, 0x00	; 0
     3d4:	c9 01       	movw	r24, r18
     3d6:	88 0f       	add	r24, r24
     3d8:	99 1f       	adc	r25, r25
     3da:	82 0f       	add	r24, r18
     3dc:	93 1f       	adc	r25, r19
     3de:	88 0f       	add	r24, r24
     3e0:	99 1f       	adc	r25, r25
     3e2:	82 59       	subi	r24, 0x92	; 146
     3e4:	9f 4f       	sbci	r25, 0xFF	; 255
     3e6:	fc 01       	movw	r30, r24
     3e8:	80 81       	ld	r24, Z
     3ea:	91 81       	ldd	r25, Z+1	; 0x01
     3ec:	89 2b       	or	r24, r25
     3ee:	09 f0       	breq	.+2      	; 0x3f2 <Sos_Create_Task+0x52>
     3f0:	55 c0       	rjmp	.+170    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
			{
				/* Set the Entered Values to the Empty Space in the Task's Array*/
				StrArrOfTasks[index].PtrTask = PtrFunc;
     3f2:	8a 81       	ldd	r24, Y+2	; 0x02
     3f4:	28 2f       	mov	r18, r24
     3f6:	30 e0       	ldi	r19, 0x00	; 0
     3f8:	c9 01       	movw	r24, r18
     3fa:	88 0f       	add	r24, r24
     3fc:	99 1f       	adc	r25, r25
     3fe:	82 0f       	add	r24, r18
     400:	93 1f       	adc	r25, r19
     402:	88 0f       	add	r24, r24
     404:	99 1f       	adc	r25, r25
     406:	82 59       	subi	r24, 0x92	; 146
     408:	9f 4f       	sbci	r25, 0xFF	; 255
     40a:	2b 81       	ldd	r18, Y+3	; 0x03
     40c:	3c 81       	ldd	r19, Y+4	; 0x04
     40e:	fc 01       	movw	r30, r24
     410:	31 83       	std	Z+1, r19	; 0x01
     412:	20 83       	st	Z, r18
				StrArrOfTasks[index].Periodicity = periodicity;
     414:	8a 81       	ldd	r24, Y+2	; 0x02
     416:	28 2f       	mov	r18, r24
     418:	30 e0       	ldi	r19, 0x00	; 0
     41a:	c9 01       	movw	r24, r18
     41c:	88 0f       	add	r24, r24
     41e:	99 1f       	adc	r25, r25
     420:	82 0f       	add	r24, r18
     422:	93 1f       	adc	r25, r19
     424:	88 0f       	add	r24, r24
     426:	99 1f       	adc	r25, r25
     428:	8f 58       	subi	r24, 0x8F	; 143
     42a:	9f 4f       	sbci	r25, 0xFF	; 255
     42c:	2e 81       	ldd	r18, Y+6	; 0x06
     42e:	3f 81       	ldd	r19, Y+7	; 0x07
     430:	fc 01       	movw	r30, r24
     432:	31 83       	std	Z+1, r19	; 0x01
     434:	20 83       	st	Z, r18
				StrArrOfTasks[index].TaskState = TaskReady;
     436:	8a 81       	ldd	r24, Y+2	; 0x02
     438:	28 2f       	mov	r18, r24
     43a:	30 e0       	ldi	r19, 0x00	; 0
     43c:	c9 01       	movw	r24, r18
     43e:	88 0f       	add	r24, r24
     440:	99 1f       	adc	r25, r25
     442:	82 0f       	add	r24, r18
     444:	93 1f       	adc	r25, r19
     446:	88 0f       	add	r24, r24
     448:	99 1f       	adc	r25, r25
     44a:	8d 58       	subi	r24, 0x8D	; 141
     44c:	9f 4f       	sbci	r25, 0xFF	; 255
     44e:	21 e0       	ldi	r18, 0x01	; 1
     450:	fc 01       	movw	r30, r24
     452:	20 83       	st	Z, r18
				
				/* Check If the entered priority is larger than the maximum one >> Set it to the Max */
				if ( priority <= SOS_MAX_PRIORITY)
     454:	8d 81       	ldd	r24, Y+5	; 0x05
     456:	87 30       	cpi	r24, 0x07	; 7
     458:	80 f4       	brcc	.+32     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
				{
					StrArrOfTasks[index].Priority = priority;
     45a:	8a 81       	ldd	r24, Y+2	; 0x02
     45c:	28 2f       	mov	r18, r24
     45e:	30 e0       	ldi	r19, 0x00	; 0
     460:	c9 01       	movw	r24, r18
     462:	88 0f       	add	r24, r24
     464:	99 1f       	adc	r25, r25
     466:	82 0f       	add	r24, r18
     468:	93 1f       	adc	r25, r19
     46a:	88 0f       	add	r24, r24
     46c:	99 1f       	adc	r25, r25
     46e:	80 59       	subi	r24, 0x90	; 144
     470:	9f 4f       	sbci	r25, 0xFF	; 255
     472:	2d 81       	ldd	r18, Y+5	; 0x05
     474:	fc 01       	movw	r30, r24
     476:	20 83       	st	Z, r18
     478:	0f c0       	rjmp	.+30     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
				}
				else
				{
					StrArrOfTasks[index].Priority = SOS_MAX_PRIORITY;
     47a:	8a 81       	ldd	r24, Y+2	; 0x02
     47c:	28 2f       	mov	r18, r24
     47e:	30 e0       	ldi	r19, 0x00	; 0
     480:	c9 01       	movw	r24, r18
     482:	88 0f       	add	r24, r24
     484:	99 1f       	adc	r25, r25
     486:	82 0f       	add	r24, r18
     488:	93 1f       	adc	r25, r19
     48a:	88 0f       	add	r24, r24
     48c:	99 1f       	adc	r25, r25
     48e:	80 59       	subi	r24, 0x90	; 144
     490:	9f 4f       	sbci	r25, 0xFF	; 255
     492:	26 e0       	ldi	r18, 0x06	; 6
     494:	fc 01       	movw	r30, r24
     496:	20 83       	st	Z, r18
				}
				API_State = OK_T;
     498:	19 82       	std	Y+1, r1	; 0x01
				break;
     49a:	0c c0       	rjmp	.+24     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
			}
			else
			{
				API_State = ERROR_MAX_TASKS_NUMBER_REACHED;
     49c:	83 e0       	ldi	r24, 0x03	; 3
     49e:	89 83       	std	Y+1, r24	; 0x01
	EnumSOSError_type API_State = OK_T;
	uint8 index;
	/* Protect from NUll pointer */ 
	if ( NULL != PtrFunc)
	{   /* Loop Through the Array of Tasks */ 
		for (index = INITIAL_ZERO ; index < SOS_MAX_NUMBER_OF_TASKS ; index++)
     4a0:	8a 81       	ldd	r24, Y+2	; 0x02
     4a2:	8f 5f       	subi	r24, 0xFF	; 255
     4a4:	8a 83       	std	Y+2, r24	; 0x02
     4a6:	8a 81       	ldd	r24, Y+2	; 0x02
     4a8:	86 30       	cpi	r24, 0x06	; 6
     4aa:	08 f4       	brcc	.+2      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
     4ac:	90 cf       	rjmp	.-224    	; 0x3ce <Sos_Create_Task+0x2e>
     4ae:	02 c0       	rjmp	.+4      	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
			}
		}
	}
	else
	{
		API_State = ERROR_NULL_POINTER;
     4b0:	81 e0       	ldi	r24, 0x01	; 1
     4b2:	89 83       	std	Y+1, r24	; 0x01
	}
	return API_State;
     4b4:	89 81       	ldd	r24, Y+1	; 0x01
}
     4b6:	27 96       	adiw	r28, 0x07	; 7
     4b8:	0f b6       	in	r0, 0x3f	; 63
     4ba:	f8 94       	cli
     4bc:	de bf       	out	0x3e, r29	; 62
     4be:	0f be       	out	0x3f, r0	; 63
     4c0:	cd bf       	out	0x3d, r28	; 61
     4c2:	df 91       	pop	r29
     4c4:	cf 91       	pop	r28
     4c6:	08 95       	ret

000004c8 <Sos_Run>:
 * Function : Sos_Run
 * Description: this function is to run the System Scheduler (Algorithm)
 * @return void
 */
void Sos_Run(void)
{
     4c8:	cf 93       	push	r28
     4ca:	df 93       	push	r29
     4cc:	00 d0       	rcall	.+0      	; 0x4ce <Sos_Run+0x6>
     4ce:	1f 92       	push	r1
     4d0:	cd b7       	in	r28, 0x3d	; 61
     4d2:	de b7       	in	r29, 0x3e	; 62
	sint8 index = INITIAL_ZERO;
     4d4:	19 82       	std	Y+1, r1	; 0x01
	sint8 MaxPriorityIndex = INITIAL_MINUS_ONE;
     4d6:	8f ef       	ldi	r24, 0xFF	; 255
     4d8:	8a 83       	std	Y+2, r24	; 0x02
	sint8 MaxPriority = INITIAL_ZERO;
     4da:	1b 82       	std	Y+3, r1	; 0x03
	/* Start the Timer Used  */
	Timers_Start(SOS_TIMER);
     4dc:	81 e0       	ldi	r24, 0x01	; 1
     4de:	0e 94 af 07 	call	0xf5e	; 0xf5e <Timers_Start>
	while(TRUE)
	{	
		for (index = INITIAL_ZERO; index < SOS_MAX_NUMBER_OF_TASKS; index++)
     4e2:	19 82       	std	Y+1, r1	; 0x01
     4e4:	98 c0       	rjmp	.+304    	; 0x616 <Sos_Run+0x14e>
		{
				switch( (StrArrOfTasks[index].TaskState) )
     4e6:	89 81       	ldd	r24, Y+1	; 0x01
     4e8:	28 2f       	mov	r18, r24
     4ea:	88 0f       	add	r24, r24
     4ec:	33 0b       	sbc	r19, r19
     4ee:	c9 01       	movw	r24, r18
     4f0:	88 0f       	add	r24, r24
     4f2:	99 1f       	adc	r25, r25
     4f4:	82 0f       	add	r24, r18
     4f6:	93 1f       	adc	r25, r19
     4f8:	88 0f       	add	r24, r24
     4fa:	99 1f       	adc	r25, r25
     4fc:	8d 58       	subi	r24, 0x8D	; 141
     4fe:	9f 4f       	sbci	r25, 0xFF	; 255
     500:	fc 01       	movw	r30, r24
     502:	80 81       	ld	r24, Z
     504:	88 2f       	mov	r24, r24
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	81 30       	cpi	r24, 0x01	; 1
     50a:	91 05       	cpc	r25, r1
     50c:	71 f0       	breq	.+28     	; 0x52a <Sos_Run+0x62>
     50e:	82 30       	cpi	r24, 0x02	; 2
     510:	91 05       	cpc	r25, r1
     512:	24 f4       	brge	.+8      	; 0x51c <Sos_Run+0x54>
     514:	89 2b       	or	r24, r25
     516:	09 f4       	brne	.+2      	; 0x51a <Sos_Run+0x52>
     518:	76 c0       	rjmp	.+236    	; 0x606 <Sos_Run+0x13e>
						{
							//Do nothing
						}
						break;
					default:
						break;
     51a:	7a c0       	rjmp	.+244    	; 0x610 <Sos_Run+0x148>
	Timers_Start(SOS_TIMER);
	while(TRUE)
	{	
		for (index = INITIAL_ZERO; index < SOS_MAX_NUMBER_OF_TASKS; index++)
		{
				switch( (StrArrOfTasks[index].TaskState) )
     51c:	82 30       	cpi	r24, 0x02	; 2
     51e:	91 05       	cpc	r25, r1
     520:	81 f1       	breq	.+96     	; 0x582 <Sos_Run+0xba>
     522:	03 97       	sbiw	r24, 0x03	; 3
     524:	09 f4       	brne	.+2      	; 0x528 <Sos_Run+0x60>
     526:	41 c0       	rjmp	.+130    	; 0x5aa <Sos_Run+0xe2>
						{
							//Do nothing
						}
						break;
					default:
						break;
     528:	73 c0       	rjmp	.+230    	; 0x610 <Sos_Run+0x148>
				{
					case TaskDormant:
						//Do Nothing
						break;
					case TaskReady:
						if( MaxPriority < StrArrOfTasks[index].Priority )
     52a:	8b 81       	ldd	r24, Y+3	; 0x03
     52c:	48 2f       	mov	r20, r24
     52e:	88 0f       	add	r24, r24
     530:	55 0b       	sbc	r21, r21
     532:	89 81       	ldd	r24, Y+1	; 0x01
     534:	28 2f       	mov	r18, r24
     536:	88 0f       	add	r24, r24
     538:	33 0b       	sbc	r19, r19
     53a:	c9 01       	movw	r24, r18
     53c:	88 0f       	add	r24, r24
     53e:	99 1f       	adc	r25, r25
     540:	82 0f       	add	r24, r18
     542:	93 1f       	adc	r25, r19
     544:	88 0f       	add	r24, r24
     546:	99 1f       	adc	r25, r25
     548:	80 59       	subi	r24, 0x90	; 144
     54a:	9f 4f       	sbci	r25, 0xFF	; 255
     54c:	fc 01       	movw	r30, r24
     54e:	80 81       	ld	r24, Z
     550:	88 2f       	mov	r24, r24
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	48 17       	cp	r20, r24
     556:	59 07       	cpc	r21, r25
     558:	0c f0       	brlt	.+2      	; 0x55c <Sos_Run+0x94>
     55a:	57 c0       	rjmp	.+174    	; 0x60a <Sos_Run+0x142>
						{
							MaxPriority = StrArrOfTasks[index].Priority;
     55c:	89 81       	ldd	r24, Y+1	; 0x01
     55e:	28 2f       	mov	r18, r24
     560:	88 0f       	add	r24, r24
     562:	33 0b       	sbc	r19, r19
     564:	c9 01       	movw	r24, r18
     566:	88 0f       	add	r24, r24
     568:	99 1f       	adc	r25, r25
     56a:	82 0f       	add	r24, r18
     56c:	93 1f       	adc	r25, r19
     56e:	88 0f       	add	r24, r24
     570:	99 1f       	adc	r25, r25
     572:	80 59       	subi	r24, 0x90	; 144
     574:	9f 4f       	sbci	r25, 0xFF	; 255
     576:	fc 01       	movw	r30, r24
     578:	80 81       	ld	r24, Z
     57a:	8b 83       	std	Y+3, r24	; 0x03
							MaxPriorityIndex = index;
     57c:	89 81       	ldd	r24, Y+1	; 0x01
     57e:	8a 83       	std	Y+2, r24	; 0x02
						}
						else
						{
							//Do Nothing
						}
						break;
     580:	44 c0       	rjmp	.+136    	; 0x60a <Sos_Run+0x142>
					case TaskRunning:
						/* Return the State of the Task to waiting */
						StrArrOfTasks[index].TaskState = TaskWaiting;
     582:	89 81       	ldd	r24, Y+1	; 0x01
     584:	28 2f       	mov	r18, r24
     586:	88 0f       	add	r24, r24
     588:	33 0b       	sbc	r19, r19
     58a:	c9 01       	movw	r24, r18
     58c:	88 0f       	add	r24, r24
     58e:	99 1f       	adc	r25, r25
     590:	82 0f       	add	r24, r18
     592:	93 1f       	adc	r25, r19
     594:	88 0f       	add	r24, r24
     596:	99 1f       	adc	r25, r25
     598:	8d 58       	subi	r24, 0x8D	; 141
     59a:	9f 4f       	sbci	r25, 0xFF	; 255
     59c:	23 e0       	ldi	r18, 0x03	; 3
     59e:	fc 01       	movw	r30, r24
     5a0:	20 83       	st	Z, r18
						index = index - INITIAL_ONE; 
     5a2:	89 81       	ldd	r24, Y+1	; 0x01
     5a4:	81 50       	subi	r24, 0x01	; 1
     5a6:	89 83       	std	Y+1, r24	; 0x01
						break;
     5a8:	33 c0       	rjmp	.+102    	; 0x610 <Sos_Run+0x148>
					case TaskWaiting:
						if( (Systick % StrArrOfTasks[index].Periodicity) == FALSE)
     5aa:	40 91 92 00 	lds	r20, 0x0092	; 0x800092 <Systick>
     5ae:	50 91 93 00 	lds	r21, 0x0093	; 0x800093 <Systick+0x1>
     5b2:	89 81       	ldd	r24, Y+1	; 0x01
     5b4:	28 2f       	mov	r18, r24
     5b6:	88 0f       	add	r24, r24
     5b8:	33 0b       	sbc	r19, r19
     5ba:	c9 01       	movw	r24, r18
     5bc:	88 0f       	add	r24, r24
     5be:	99 1f       	adc	r25, r25
     5c0:	82 0f       	add	r24, r18
     5c2:	93 1f       	adc	r25, r19
     5c4:	88 0f       	add	r24, r24
     5c6:	99 1f       	adc	r25, r25
     5c8:	8f 58       	subi	r24, 0x8F	; 143
     5ca:	9f 4f       	sbci	r25, 0xFF	; 255
     5cc:	fc 01       	movw	r30, r24
     5ce:	20 81       	ld	r18, Z
     5d0:	31 81       	ldd	r19, Z+1	; 0x01
     5d2:	ca 01       	movw	r24, r20
     5d4:	b9 01       	movw	r22, r18
     5d6:	0e 94 53 08 	call	0x10a6	; 0x10a6 <__udivmodhi4>
     5da:	89 2b       	or	r24, r25
     5dc:	c1 f4       	brne	.+48     	; 0x60e <Sos_Run+0x146>
						{
							/* Return the State of the Task to Ready */
							StrArrOfTasks[index].TaskState = TaskReady;
     5de:	89 81       	ldd	r24, Y+1	; 0x01
     5e0:	28 2f       	mov	r18, r24
     5e2:	88 0f       	add	r24, r24
     5e4:	33 0b       	sbc	r19, r19
     5e6:	c9 01       	movw	r24, r18
     5e8:	88 0f       	add	r24, r24
     5ea:	99 1f       	adc	r25, r25
     5ec:	82 0f       	add	r24, r18
     5ee:	93 1f       	adc	r25, r19
     5f0:	88 0f       	add	r24, r24
     5f2:	99 1f       	adc	r25, r25
     5f4:	8d 58       	subi	r24, 0x8D	; 141
     5f6:	9f 4f       	sbci	r25, 0xFF	; 255
     5f8:	21 e0       	ldi	r18, 0x01	; 1
     5fa:	fc 01       	movw	r30, r24
     5fc:	20 83       	st	Z, r18
							index = index - INITIAL_ONE;
     5fe:	89 81       	ldd	r24, Y+1	; 0x01
     600:	81 50       	subi	r24, 0x01	; 1
     602:	89 83       	std	Y+1, r24	; 0x01
						}
						else
						{
							//Do nothing
						}
						break;
     604:	04 c0       	rjmp	.+8      	; 0x60e <Sos_Run+0x146>
		{
				switch( (StrArrOfTasks[index].TaskState) )
				{
					case TaskDormant:
						//Do Nothing
						break;
     606:	00 00       	nop
     608:	03 c0       	rjmp	.+6      	; 0x610 <Sos_Run+0x148>
						}
						else
						{
							//Do Nothing
						}
						break;
     60a:	00 00       	nop
     60c:	01 c0       	rjmp	.+2      	; 0x610 <Sos_Run+0x148>
						}
						else
						{
							//Do nothing
						}
						break;
     60e:	00 00       	nop
	sint8 MaxPriority = INITIAL_ZERO;
	/* Start the Timer Used  */
	Timers_Start(SOS_TIMER);
	while(TRUE)
	{	
		for (index = INITIAL_ZERO; index < SOS_MAX_NUMBER_OF_TASKS; index++)
     610:	89 81       	ldd	r24, Y+1	; 0x01
     612:	8f 5f       	subi	r24, 0xFF	; 255
     614:	89 83       	std	Y+1, r24	; 0x01
     616:	89 81       	ldd	r24, Y+1	; 0x01
     618:	86 30       	cpi	r24, 0x06	; 6
     61a:	0c f4       	brge	.+2      	; 0x61e <Sos_Run+0x156>
     61c:	64 cf       	rjmp	.-312    	; 0x4e6 <Sos_Run+0x1e>
					default:
						break;
				}
		}
		
		if(MaxPriorityIndex >= INITIAL_ZERO)
     61e:	8a 81       	ldd	r24, Y+2	; 0x02
     620:	88 23       	and	r24, r24
     622:	2c f1       	brlt	.+74     	; 0x66e <Sos_Run+0x1a6>
		{
			StrArrOfTasks[MaxPriorityIndex].PtrTask();
     624:	8a 81       	ldd	r24, Y+2	; 0x02
     626:	28 2f       	mov	r18, r24
     628:	88 0f       	add	r24, r24
     62a:	33 0b       	sbc	r19, r19
     62c:	c9 01       	movw	r24, r18
     62e:	88 0f       	add	r24, r24
     630:	99 1f       	adc	r25, r25
     632:	82 0f       	add	r24, r18
     634:	93 1f       	adc	r25, r19
     636:	88 0f       	add	r24, r24
     638:	99 1f       	adc	r25, r25
     63a:	82 59       	subi	r24, 0x92	; 146
     63c:	9f 4f       	sbci	r25, 0xFF	; 255
     63e:	fc 01       	movw	r30, r24
     640:	80 81       	ld	r24, Z
     642:	91 81       	ldd	r25, Z+1	; 0x01
     644:	fc 01       	movw	r30, r24
     646:	09 95       	icall
			StrArrOfTasks[MaxPriorityIndex].TaskState = TaskRunning;		
     648:	8a 81       	ldd	r24, Y+2	; 0x02
     64a:	28 2f       	mov	r18, r24
     64c:	88 0f       	add	r24, r24
     64e:	33 0b       	sbc	r19, r19
     650:	c9 01       	movw	r24, r18
     652:	88 0f       	add	r24, r24
     654:	99 1f       	adc	r25, r25
     656:	82 0f       	add	r24, r18
     658:	93 1f       	adc	r25, r19
     65a:	88 0f       	add	r24, r24
     65c:	99 1f       	adc	r25, r25
     65e:	8d 58       	subi	r24, 0x8D	; 141
     660:	9f 4f       	sbci	r25, 0xFF	; 255
     662:	22 e0       	ldi	r18, 0x02	; 2
     664:	fc 01       	movw	r30, r24
     666:	20 83       	st	Z, r18
			MaxPriorityIndex = INITIAL_MINUS_ONE;
     668:	8f ef       	ldi	r24, 0xFF	; 255
     66a:	8a 83       	std	Y+2, r24	; 0x02
			MaxPriority = INITIAL_ZERO;
     66c:	1b 82       	std	Y+3, r1	; 0x03
		}
		else
		{
			//Do Nothing
		}
		sleep_mode();
     66e:	85 e5       	ldi	r24, 0x55	; 85
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	25 e5       	ldi	r18, 0x55	; 85
     674:	30 e0       	ldi	r19, 0x00	; 0
     676:	f9 01       	movw	r30, r18
     678:	20 81       	ld	r18, Z
     67a:	20 68       	ori	r18, 0x80	; 128
     67c:	fc 01       	movw	r30, r24
     67e:	20 83       	st	Z, r18
     680:	88 95       	sleep
     682:	85 e5       	ldi	r24, 0x55	; 85
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	25 e5       	ldi	r18, 0x55	; 85
     688:	30 e0       	ldi	r19, 0x00	; 0
     68a:	f9 01       	movw	r30, r18
     68c:	20 81       	ld	r18, Z
     68e:	2f 77       	andi	r18, 0x7F	; 127
     690:	fc 01       	movw	r30, r24
     692:	20 83       	st	Z, r18
	}
     694:	26 cf       	rjmp	.-436    	; 0x4e2 <Sos_Run+0x1a>

00000696 <Gpio_PinDirection>:
     696:	cf 93       	push	r28
     698:	df 93       	push	r29
     69a:	00 d0       	rcall	.+0      	; 0x69c <Gpio_PinDirection+0x6>
     69c:	1f 92       	push	r1
     69e:	cd b7       	in	r28, 0x3d	; 61
     6a0:	de b7       	in	r29, 0x3e	; 62
     6a2:	89 83       	std	Y+1, r24	; 0x01
     6a4:	6a 83       	std	Y+2, r22	; 0x02
     6a6:	4b 83       	std	Y+3, r20	; 0x03
     6a8:	89 81       	ldd	r24, Y+1	; 0x01
     6aa:	88 2f       	mov	r24, r24
     6ac:	90 e0       	ldi	r25, 0x00	; 0
     6ae:	81 30       	cpi	r24, 0x01	; 1
     6b0:	91 05       	cpc	r25, r1
     6b2:	81 f1       	breq	.+96     	; 0x714 <Gpio_PinDirection+0x7e>
     6b4:	82 30       	cpi	r24, 0x02	; 2
     6b6:	91 05       	cpc	r25, r1
     6b8:	1c f4       	brge	.+6      	; 0x6c0 <Gpio_PinDirection+0x2a>
     6ba:	89 2b       	or	r24, r25
     6bc:	49 f0       	breq	.+18     	; 0x6d0 <Gpio_PinDirection+0x3a>
     6be:	90 c0       	rjmp	.+288    	; 0x7e0 <Gpio_PinDirection+0x14a>
     6c0:	82 30       	cpi	r24, 0x02	; 2
     6c2:	91 05       	cpc	r25, r1
     6c4:	09 f4       	brne	.+2      	; 0x6c8 <Gpio_PinDirection+0x32>
     6c6:	48 c0       	rjmp	.+144    	; 0x758 <Gpio_PinDirection+0xc2>
     6c8:	03 97       	sbiw	r24, 0x03	; 3
     6ca:	09 f4       	brne	.+2      	; 0x6ce <Gpio_PinDirection+0x38>
     6cc:	67 c0       	rjmp	.+206    	; 0x79c <Gpio_PinDirection+0x106>
     6ce:	88 c0       	rjmp	.+272    	; 0x7e0 <Gpio_PinDirection+0x14a>
     6d0:	8b 81       	ldd	r24, Y+3	; 0x03
     6d2:	88 2f       	mov	r24, r24
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	00 97       	sbiw	r24, 0x00	; 0
     6d8:	21 f0       	breq	.+8      	; 0x6e2 <Gpio_PinDirection+0x4c>
     6da:	8f 3f       	cpi	r24, 0xFF	; 255
     6dc:	91 05       	cpc	r25, r1
     6de:	71 f0       	breq	.+28     	; 0x6fc <Gpio_PinDirection+0x66>
     6e0:	7f c0       	rjmp	.+254    	; 0x7e0 <Gpio_PinDirection+0x14a>
     6e2:	8a e3       	ldi	r24, 0x3A	; 58
     6e4:	90 e0       	ldi	r25, 0x00	; 0
     6e6:	2a e3       	ldi	r18, 0x3A	; 58
     6e8:	30 e0       	ldi	r19, 0x00	; 0
     6ea:	f9 01       	movw	r30, r18
     6ec:	20 81       	ld	r18, Z
     6ee:	32 2f       	mov	r19, r18
     6f0:	2a 81       	ldd	r18, Y+2	; 0x02
     6f2:	20 95       	com	r18
     6f4:	23 23       	and	r18, r19
     6f6:	fc 01       	movw	r30, r24
     6f8:	20 83       	st	Z, r18
     6fa:	0b c0       	rjmp	.+22     	; 0x712 <Gpio_PinDirection+0x7c>
     6fc:	8a e3       	ldi	r24, 0x3A	; 58
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	2a e3       	ldi	r18, 0x3A	; 58
     702:	30 e0       	ldi	r19, 0x00	; 0
     704:	f9 01       	movw	r30, r18
     706:	30 81       	ld	r19, Z
     708:	2a 81       	ldd	r18, Y+2	; 0x02
     70a:	23 2b       	or	r18, r19
     70c:	fc 01       	movw	r30, r24
     70e:	20 83       	st	Z, r18
     710:	00 00       	nop
     712:	66 c0       	rjmp	.+204    	; 0x7e0 <Gpio_PinDirection+0x14a>
     714:	8b 81       	ldd	r24, Y+3	; 0x03
     716:	88 2f       	mov	r24, r24
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	00 97       	sbiw	r24, 0x00	; 0
     71c:	21 f0       	breq	.+8      	; 0x726 <Gpio_PinDirection+0x90>
     71e:	8f 3f       	cpi	r24, 0xFF	; 255
     720:	91 05       	cpc	r25, r1
     722:	71 f0       	breq	.+28     	; 0x740 <Gpio_PinDirection+0xaa>
     724:	5d c0       	rjmp	.+186    	; 0x7e0 <Gpio_PinDirection+0x14a>
     726:	87 e3       	ldi	r24, 0x37	; 55
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	27 e3       	ldi	r18, 0x37	; 55
     72c:	30 e0       	ldi	r19, 0x00	; 0
     72e:	f9 01       	movw	r30, r18
     730:	20 81       	ld	r18, Z
     732:	32 2f       	mov	r19, r18
     734:	2a 81       	ldd	r18, Y+2	; 0x02
     736:	20 95       	com	r18
     738:	23 23       	and	r18, r19
     73a:	fc 01       	movw	r30, r24
     73c:	20 83       	st	Z, r18
     73e:	0b c0       	rjmp	.+22     	; 0x756 <Gpio_PinDirection+0xc0>
     740:	87 e3       	ldi	r24, 0x37	; 55
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	27 e3       	ldi	r18, 0x37	; 55
     746:	30 e0       	ldi	r19, 0x00	; 0
     748:	f9 01       	movw	r30, r18
     74a:	30 81       	ld	r19, Z
     74c:	2a 81       	ldd	r18, Y+2	; 0x02
     74e:	23 2b       	or	r18, r19
     750:	fc 01       	movw	r30, r24
     752:	20 83       	st	Z, r18
     754:	00 00       	nop
     756:	44 c0       	rjmp	.+136    	; 0x7e0 <Gpio_PinDirection+0x14a>
     758:	8b 81       	ldd	r24, Y+3	; 0x03
     75a:	88 2f       	mov	r24, r24
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	00 97       	sbiw	r24, 0x00	; 0
     760:	21 f0       	breq	.+8      	; 0x76a <Gpio_PinDirection+0xd4>
     762:	8f 3f       	cpi	r24, 0xFF	; 255
     764:	91 05       	cpc	r25, r1
     766:	71 f0       	breq	.+28     	; 0x784 <Gpio_PinDirection+0xee>
     768:	3b c0       	rjmp	.+118    	; 0x7e0 <Gpio_PinDirection+0x14a>
     76a:	84 e3       	ldi	r24, 0x34	; 52
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	24 e3       	ldi	r18, 0x34	; 52
     770:	30 e0       	ldi	r19, 0x00	; 0
     772:	f9 01       	movw	r30, r18
     774:	20 81       	ld	r18, Z
     776:	32 2f       	mov	r19, r18
     778:	2a 81       	ldd	r18, Y+2	; 0x02
     77a:	20 95       	com	r18
     77c:	23 23       	and	r18, r19
     77e:	fc 01       	movw	r30, r24
     780:	20 83       	st	Z, r18
     782:	0b c0       	rjmp	.+22     	; 0x79a <Gpio_PinDirection+0x104>
     784:	84 e3       	ldi	r24, 0x34	; 52
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	24 e3       	ldi	r18, 0x34	; 52
     78a:	30 e0       	ldi	r19, 0x00	; 0
     78c:	f9 01       	movw	r30, r18
     78e:	30 81       	ld	r19, Z
     790:	2a 81       	ldd	r18, Y+2	; 0x02
     792:	23 2b       	or	r18, r19
     794:	fc 01       	movw	r30, r24
     796:	20 83       	st	Z, r18
     798:	00 00       	nop
     79a:	22 c0       	rjmp	.+68     	; 0x7e0 <Gpio_PinDirection+0x14a>
     79c:	8b 81       	ldd	r24, Y+3	; 0x03
     79e:	88 2f       	mov	r24, r24
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	00 97       	sbiw	r24, 0x00	; 0
     7a4:	21 f0       	breq	.+8      	; 0x7ae <Gpio_PinDirection+0x118>
     7a6:	8f 3f       	cpi	r24, 0xFF	; 255
     7a8:	91 05       	cpc	r25, r1
     7aa:	71 f0       	breq	.+28     	; 0x7c8 <Gpio_PinDirection+0x132>
     7ac:	18 c0       	rjmp	.+48     	; 0x7de <Gpio_PinDirection+0x148>
     7ae:	81 e3       	ldi	r24, 0x31	; 49
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	21 e3       	ldi	r18, 0x31	; 49
     7b4:	30 e0       	ldi	r19, 0x00	; 0
     7b6:	f9 01       	movw	r30, r18
     7b8:	20 81       	ld	r18, Z
     7ba:	32 2f       	mov	r19, r18
     7bc:	2a 81       	ldd	r18, Y+2	; 0x02
     7be:	20 95       	com	r18
     7c0:	23 23       	and	r18, r19
     7c2:	fc 01       	movw	r30, r24
     7c4:	20 83       	st	Z, r18
     7c6:	0b c0       	rjmp	.+22     	; 0x7de <Gpio_PinDirection+0x148>
     7c8:	81 e3       	ldi	r24, 0x31	; 49
     7ca:	90 e0       	ldi	r25, 0x00	; 0
     7cc:	21 e3       	ldi	r18, 0x31	; 49
     7ce:	30 e0       	ldi	r19, 0x00	; 0
     7d0:	f9 01       	movw	r30, r18
     7d2:	30 81       	ld	r19, Z
     7d4:	2a 81       	ldd	r18, Y+2	; 0x02
     7d6:	23 2b       	or	r18, r19
     7d8:	fc 01       	movw	r30, r24
     7da:	20 83       	st	Z, r18
     7dc:	00 00       	nop
     7de:	00 00       	nop
     7e0:	00 00       	nop
     7e2:	0f 90       	pop	r0
     7e4:	0f 90       	pop	r0
     7e6:	0f 90       	pop	r0
     7e8:	df 91       	pop	r29
     7ea:	cf 91       	pop	r28
     7ec:	08 95       	ret

000007ee <Gpio_PinWrite>:
     7ee:	cf 93       	push	r28
     7f0:	df 93       	push	r29
     7f2:	00 d0       	rcall	.+0      	; 0x7f4 <Gpio_PinWrite+0x6>
     7f4:	1f 92       	push	r1
     7f6:	cd b7       	in	r28, 0x3d	; 61
     7f8:	de b7       	in	r29, 0x3e	; 62
     7fa:	89 83       	std	Y+1, r24	; 0x01
     7fc:	6a 83       	std	Y+2, r22	; 0x02
     7fe:	4b 83       	std	Y+3, r20	; 0x03
     800:	8b 81       	ldd	r24, Y+3	; 0x03
     802:	88 2f       	mov	r24, r24
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	00 97       	sbiw	r24, 0x00	; 0
     808:	09 f4       	brne	.+2      	; 0x80c <Gpio_PinWrite+0x1e>
     80a:	42 c0       	rjmp	.+132    	; 0x890 <__stack+0x31>
     80c:	01 97       	sbiw	r24, 0x01	; 1
     80e:	09 f0       	breq	.+2      	; 0x812 <Gpio_PinWrite+0x24>
     810:	86 c0       	rjmp	.+268    	; 0x91e <__stack+0xbf>
     812:	89 81       	ldd	r24, Y+1	; 0x01
     814:	88 2f       	mov	r24, r24
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	81 30       	cpi	r24, 0x01	; 1
     81a:	91 05       	cpc	r25, r1
     81c:	b9 f0       	breq	.+46     	; 0x84c <Gpio_PinWrite+0x5e>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	91 05       	cpc	r25, r1
     822:	1c f4       	brge	.+6      	; 0x82a <Gpio_PinWrite+0x3c>
     824:	89 2b       	or	r24, r25
     826:	39 f0       	breq	.+14     	; 0x836 <Gpio_PinWrite+0x48>
     828:	7a c0       	rjmp	.+244    	; 0x91e <__stack+0xbf>
     82a:	82 30       	cpi	r24, 0x02	; 2
     82c:	91 05       	cpc	r25, r1
     82e:	c9 f0       	breq	.+50     	; 0x862 <__stack+0x3>
     830:	03 97       	sbiw	r24, 0x03	; 3
     832:	11 f1       	breq	.+68     	; 0x878 <__stack+0x19>
     834:	74 c0       	rjmp	.+232    	; 0x91e <__stack+0xbf>
     836:	8b e3       	ldi	r24, 0x3B	; 59
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	2b e3       	ldi	r18, 0x3B	; 59
     83c:	30 e0       	ldi	r19, 0x00	; 0
     83e:	f9 01       	movw	r30, r18
     840:	30 81       	ld	r19, Z
     842:	2a 81       	ldd	r18, Y+2	; 0x02
     844:	23 2b       	or	r18, r19
     846:	fc 01       	movw	r30, r24
     848:	20 83       	st	Z, r18
     84a:	21 c0       	rjmp	.+66     	; 0x88e <__stack+0x2f>
     84c:	88 e3       	ldi	r24, 0x38	; 56
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	28 e3       	ldi	r18, 0x38	; 56
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	f9 01       	movw	r30, r18
     856:	30 81       	ld	r19, Z
     858:	2a 81       	ldd	r18, Y+2	; 0x02
     85a:	23 2b       	or	r18, r19
     85c:	fc 01       	movw	r30, r24
     85e:	20 83       	st	Z, r18
     860:	16 c0       	rjmp	.+44     	; 0x88e <__stack+0x2f>
     862:	85 e3       	ldi	r24, 0x35	; 53
     864:	90 e0       	ldi	r25, 0x00	; 0
     866:	25 e3       	ldi	r18, 0x35	; 53
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	f9 01       	movw	r30, r18
     86c:	30 81       	ld	r19, Z
     86e:	2a 81       	ldd	r18, Y+2	; 0x02
     870:	23 2b       	or	r18, r19
     872:	fc 01       	movw	r30, r24
     874:	20 83       	st	Z, r18
     876:	0b c0       	rjmp	.+22     	; 0x88e <__stack+0x2f>
     878:	82 e3       	ldi	r24, 0x32	; 50
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	22 e3       	ldi	r18, 0x32	; 50
     87e:	30 e0       	ldi	r19, 0x00	; 0
     880:	f9 01       	movw	r30, r18
     882:	30 81       	ld	r19, Z
     884:	2a 81       	ldd	r18, Y+2	; 0x02
     886:	23 2b       	or	r18, r19
     888:	fc 01       	movw	r30, r24
     88a:	20 83       	st	Z, r18
     88c:	00 00       	nop
     88e:	47 c0       	rjmp	.+142    	; 0x91e <__stack+0xbf>
     890:	89 81       	ldd	r24, Y+1	; 0x01
     892:	88 2f       	mov	r24, r24
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	81 30       	cpi	r24, 0x01	; 1
     898:	91 05       	cpc	r25, r1
     89a:	c9 f0       	breq	.+50     	; 0x8ce <__stack+0x6f>
     89c:	82 30       	cpi	r24, 0x02	; 2
     89e:	91 05       	cpc	r25, r1
     8a0:	1c f4       	brge	.+6      	; 0x8a8 <__stack+0x49>
     8a2:	89 2b       	or	r24, r25
     8a4:	39 f0       	breq	.+14     	; 0x8b4 <__stack+0x55>
     8a6:	3a c0       	rjmp	.+116    	; 0x91c <__stack+0xbd>
     8a8:	82 30       	cpi	r24, 0x02	; 2
     8aa:	91 05       	cpc	r25, r1
     8ac:	e9 f0       	breq	.+58     	; 0x8e8 <__stack+0x89>
     8ae:	03 97       	sbiw	r24, 0x03	; 3
     8b0:	41 f1       	breq	.+80     	; 0x902 <__stack+0xa3>
     8b2:	34 c0       	rjmp	.+104    	; 0x91c <__stack+0xbd>
     8b4:	8b e3       	ldi	r24, 0x3B	; 59
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	2b e3       	ldi	r18, 0x3B	; 59
     8ba:	30 e0       	ldi	r19, 0x00	; 0
     8bc:	f9 01       	movw	r30, r18
     8be:	20 81       	ld	r18, Z
     8c0:	32 2f       	mov	r19, r18
     8c2:	2a 81       	ldd	r18, Y+2	; 0x02
     8c4:	20 95       	com	r18
     8c6:	23 23       	and	r18, r19
     8c8:	fc 01       	movw	r30, r24
     8ca:	20 83       	st	Z, r18
     8cc:	27 c0       	rjmp	.+78     	; 0x91c <__stack+0xbd>
     8ce:	88 e3       	ldi	r24, 0x38	; 56
     8d0:	90 e0       	ldi	r25, 0x00	; 0
     8d2:	28 e3       	ldi	r18, 0x38	; 56
     8d4:	30 e0       	ldi	r19, 0x00	; 0
     8d6:	f9 01       	movw	r30, r18
     8d8:	20 81       	ld	r18, Z
     8da:	32 2f       	mov	r19, r18
     8dc:	2a 81       	ldd	r18, Y+2	; 0x02
     8de:	20 95       	com	r18
     8e0:	23 23       	and	r18, r19
     8e2:	fc 01       	movw	r30, r24
     8e4:	20 83       	st	Z, r18
     8e6:	1a c0       	rjmp	.+52     	; 0x91c <__stack+0xbd>
     8e8:	85 e3       	ldi	r24, 0x35	; 53
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	25 e3       	ldi	r18, 0x35	; 53
     8ee:	30 e0       	ldi	r19, 0x00	; 0
     8f0:	f9 01       	movw	r30, r18
     8f2:	20 81       	ld	r18, Z
     8f4:	32 2f       	mov	r19, r18
     8f6:	2a 81       	ldd	r18, Y+2	; 0x02
     8f8:	20 95       	com	r18
     8fa:	23 23       	and	r18, r19
     8fc:	fc 01       	movw	r30, r24
     8fe:	20 83       	st	Z, r18
     900:	0d c0       	rjmp	.+26     	; 0x91c <__stack+0xbd>
     902:	82 e3       	ldi	r24, 0x32	; 50
     904:	90 e0       	ldi	r25, 0x00	; 0
     906:	22 e3       	ldi	r18, 0x32	; 50
     908:	30 e0       	ldi	r19, 0x00	; 0
     90a:	f9 01       	movw	r30, r18
     90c:	20 81       	ld	r18, Z
     90e:	32 2f       	mov	r19, r18
     910:	2a 81       	ldd	r18, Y+2	; 0x02
     912:	20 95       	com	r18
     914:	23 23       	and	r18, r19
     916:	fc 01       	movw	r30, r24
     918:	20 83       	st	Z, r18
     91a:	00 00       	nop
     91c:	00 00       	nop
     91e:	00 00       	nop
     920:	0f 90       	pop	r0
     922:	0f 90       	pop	r0
     924:	0f 90       	pop	r0
     926:	df 91       	pop	r29
     928:	cf 91       	pop	r28
     92a:	08 95       	ret

0000092c <Gpio_PinToggle>:
     92c:	cf 93       	push	r28
     92e:	df 93       	push	r29
     930:	00 d0       	rcall	.+0      	; 0x932 <Gpio_PinToggle+0x6>
     932:	cd b7       	in	r28, 0x3d	; 61
     934:	de b7       	in	r29, 0x3e	; 62
     936:	89 83       	std	Y+1, r24	; 0x01
     938:	6a 83       	std	Y+2, r22	; 0x02
     93a:	89 81       	ldd	r24, Y+1	; 0x01
     93c:	88 2f       	mov	r24, r24
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	81 30       	cpi	r24, 0x01	; 1
     942:	91 05       	cpc	r25, r1
     944:	b9 f0       	breq	.+46     	; 0x974 <Gpio_PinToggle+0x48>
     946:	82 30       	cpi	r24, 0x02	; 2
     948:	91 05       	cpc	r25, r1
     94a:	1c f4       	brge	.+6      	; 0x952 <Gpio_PinToggle+0x26>
     94c:	89 2b       	or	r24, r25
     94e:	39 f0       	breq	.+14     	; 0x95e <Gpio_PinToggle+0x32>
     950:	32 c0       	rjmp	.+100    	; 0x9b6 <Gpio_PinToggle+0x8a>
     952:	82 30       	cpi	r24, 0x02	; 2
     954:	91 05       	cpc	r25, r1
     956:	c9 f0       	breq	.+50     	; 0x98a <Gpio_PinToggle+0x5e>
     958:	03 97       	sbiw	r24, 0x03	; 3
     95a:	11 f1       	breq	.+68     	; 0x9a0 <Gpio_PinToggle+0x74>
     95c:	2c c0       	rjmp	.+88     	; 0x9b6 <Gpio_PinToggle+0x8a>
     95e:	8b e3       	ldi	r24, 0x3B	; 59
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	2b e3       	ldi	r18, 0x3B	; 59
     964:	30 e0       	ldi	r19, 0x00	; 0
     966:	f9 01       	movw	r30, r18
     968:	30 81       	ld	r19, Z
     96a:	2a 81       	ldd	r18, Y+2	; 0x02
     96c:	23 27       	eor	r18, r19
     96e:	fc 01       	movw	r30, r24
     970:	20 83       	st	Z, r18
     972:	21 c0       	rjmp	.+66     	; 0x9b6 <Gpio_PinToggle+0x8a>
     974:	88 e3       	ldi	r24, 0x38	; 56
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	28 e3       	ldi	r18, 0x38	; 56
     97a:	30 e0       	ldi	r19, 0x00	; 0
     97c:	f9 01       	movw	r30, r18
     97e:	30 81       	ld	r19, Z
     980:	2a 81       	ldd	r18, Y+2	; 0x02
     982:	23 27       	eor	r18, r19
     984:	fc 01       	movw	r30, r24
     986:	20 83       	st	Z, r18
     988:	16 c0       	rjmp	.+44     	; 0x9b6 <Gpio_PinToggle+0x8a>
     98a:	85 e3       	ldi	r24, 0x35	; 53
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	25 e3       	ldi	r18, 0x35	; 53
     990:	30 e0       	ldi	r19, 0x00	; 0
     992:	f9 01       	movw	r30, r18
     994:	30 81       	ld	r19, Z
     996:	2a 81       	ldd	r18, Y+2	; 0x02
     998:	23 27       	eor	r18, r19
     99a:	fc 01       	movw	r30, r24
     99c:	20 83       	st	Z, r18
     99e:	0b c0       	rjmp	.+22     	; 0x9b6 <Gpio_PinToggle+0x8a>
     9a0:	82 e3       	ldi	r24, 0x32	; 50
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	22 e3       	ldi	r18, 0x32	; 50
     9a6:	30 e0       	ldi	r19, 0x00	; 0
     9a8:	f9 01       	movw	r30, r18
     9aa:	30 81       	ld	r19, Z
     9ac:	2a 81       	ldd	r18, Y+2	; 0x02
     9ae:	23 27       	eor	r18, r19
     9b0:	fc 01       	movw	r30, r24
     9b2:	20 83       	st	Z, r18
     9b4:	00 00       	nop
     9b6:	00 00       	nop
     9b8:	0f 90       	pop	r0
     9ba:	0f 90       	pop	r0
     9bc:	df 91       	pop	r29
     9be:	cf 91       	pop	r28
     9c0:	08 95       	ret

000009c2 <Interrupts_On>:
     9c2:	cf 93       	push	r28
     9c4:	df 93       	push	r29
     9c6:	cd b7       	in	r28, 0x3d	; 61
     9c8:	de b7       	in	r29, 0x3e	; 62
     9ca:	8f e5       	ldi	r24, 0x5F	; 95
     9cc:	90 e0       	ldi	r25, 0x00	; 0
     9ce:	2f e5       	ldi	r18, 0x5F	; 95
     9d0:	30 e0       	ldi	r19, 0x00	; 0
     9d2:	f9 01       	movw	r30, r18
     9d4:	20 81       	ld	r18, Z
     9d6:	20 68       	ori	r18, 0x80	; 128
     9d8:	fc 01       	movw	r30, r24
     9da:	20 83       	st	Z, r18
     9dc:	00 00       	nop
     9de:	df 91       	pop	r29
     9e0:	cf 91       	pop	r28
     9e2:	08 95       	ret

000009e4 <Timers_Init>:
     9e4:	cf 93       	push	r28
     9e6:	df 93       	push	r29
     9e8:	00 d0       	rcall	.+0      	; 0x9ea <Timers_Init+0x6>
     9ea:	1f 92       	push	r1
     9ec:	cd b7       	in	r28, 0x3d	; 61
     9ee:	de b7       	in	r29, 0x3e	; 62
     9f0:	9b 83       	std	Y+3, r25	; 0x03
     9f2:	8a 83       	std	Y+2, r24	; 0x02
     9f4:	19 82       	std	Y+1, r1	; 0x01
     9f6:	8a 81       	ldd	r24, Y+2	; 0x02
     9f8:	9b 81       	ldd	r25, Y+3	; 0x03
     9fa:	fc 01       	movw	r30, r24
     9fc:	87 81       	ldd	r24, Z+7	; 0x07
     9fe:	90 85       	ldd	r25, Z+8	; 0x08
     a00:	a1 85       	ldd	r26, Z+9	; 0x09
     a02:	b2 85       	ldd	r27, Z+10	; 0x0a
     a04:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <Gv_F_CPU>
     a08:	90 93 95 00 	sts	0x0095, r25	; 0x800095 <Gv_F_CPU+0x1>
     a0c:	a0 93 96 00 	sts	0x0096, r26	; 0x800096 <Gv_F_CPU+0x2>
     a10:	b0 93 97 00 	sts	0x0097, r27	; 0x800097 <Gv_F_CPU+0x3>
     a14:	8a 81       	ldd	r24, Y+2	; 0x02
     a16:	9b 81       	ldd	r25, Y+3	; 0x03
     a18:	fc 01       	movw	r30, r24
     a1a:	80 81       	ld	r24, Z
     a1c:	88 2f       	mov	r24, r24
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	81 30       	cpi	r24, 0x01	; 1
     a22:	91 05       	cpc	r25, r1
     a24:	09 f4       	brne	.+2      	; 0xa28 <Timers_Init+0x44>
     a26:	64 c0       	rjmp	.+200    	; 0xaf0 <Timers_Init+0x10c>
     a28:	82 30       	cpi	r24, 0x02	; 2
     a2a:	91 05       	cpc	r25, r1
     a2c:	09 f4       	brne	.+2      	; 0xa30 <Timers_Init+0x4c>
     a2e:	cc c0       	rjmp	.+408    	; 0xbc8 <Timers_Init+0x1e4>
     a30:	89 2b       	or	r24, r25
     a32:	09 f0       	breq	.+2      	; 0xa36 <Timers_Init+0x52>
     a34:	26 c1       	rjmp	.+588    	; 0xc82 <Timers_Init+0x29e>
     a36:	83 e5       	ldi	r24, 0x53	; 83
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	23 e5       	ldi	r18, 0x53	; 83
     a3c:	30 e0       	ldi	r19, 0x00	; 0
     a3e:	f9 01       	movw	r30, r18
     a40:	40 81       	ld	r20, Z
     a42:	2a 81       	ldd	r18, Y+2	; 0x02
     a44:	3b 81       	ldd	r19, Y+3	; 0x03
     a46:	f9 01       	movw	r30, r18
     a48:	21 81       	ldd	r18, Z+1	; 0x01
     a4a:	24 2b       	or	r18, r20
     a4c:	fc 01       	movw	r30, r24
     a4e:	20 83       	st	Z, r18
     a50:	89 e5       	ldi	r24, 0x59	; 89
     a52:	90 e0       	ldi	r25, 0x00	; 0
     a54:	29 e5       	ldi	r18, 0x59	; 89
     a56:	30 e0       	ldi	r19, 0x00	; 0
     a58:	f9 01       	movw	r30, r18
     a5a:	40 81       	ld	r20, Z
     a5c:	2a 81       	ldd	r18, Y+2	; 0x02
     a5e:	3b 81       	ldd	r19, Y+3	; 0x03
     a60:	f9 01       	movw	r30, r18
     a62:	26 81       	ldd	r18, Z+6	; 0x06
     a64:	24 2b       	or	r18, r20
     a66:	fc 01       	movw	r30, r24
     a68:	20 83       	st	Z, r18
     a6a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <Gv_PrescallerTimer0_Mask>
     a6e:	88 2f       	mov	r24, r24
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	82 30       	cpi	r24, 0x02	; 2
     a74:	91 05       	cpc	r25, r1
     a76:	e9 f0       	breq	.+58     	; 0xab2 <Timers_Init+0xce>
     a78:	83 30       	cpi	r24, 0x03	; 3
     a7a:	91 05       	cpc	r25, r1
     a7c:	2c f4       	brge	.+10     	; 0xa88 <Timers_Init+0xa4>
     a7e:	00 97       	sbiw	r24, 0x00	; 0
     a80:	61 f0       	breq	.+24     	; 0xa9a <Timers_Init+0xb6>
     a82:	01 97       	sbiw	r24, 0x01	; 1
     a84:	79 f0       	breq	.+30     	; 0xaa4 <Timers_Init+0xc0>
     a86:	31 c0       	rjmp	.+98     	; 0xaea <Timers_Init+0x106>
     a88:	84 30       	cpi	r24, 0x04	; 4
     a8a:	91 05       	cpc	r25, r1
     a8c:	01 f1       	breq	.+64     	; 0xace <Timers_Init+0xea>
     a8e:	84 30       	cpi	r24, 0x04	; 4
     a90:	91 05       	cpc	r25, r1
     a92:	b4 f0       	brlt	.+44     	; 0xac0 <Timers_Init+0xdc>
     a94:	05 97       	sbiw	r24, 0x05	; 5
     a96:	11 f1       	breq	.+68     	; 0xadc <Timers_Init+0xf8>
     a98:	28 c0       	rjmp	.+80     	; 0xaea <Timers_Init+0x106>
     a9a:	10 92 a0 00 	sts	0x00A0, r1	; 0x8000a0 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     a9e:	10 92 9f 00 	sts	0x009F, r1	; 0x80009f <Gv_PrescallerTimer0_AbsoluteValue>
     aa2:	23 c0       	rjmp	.+70     	; 0xaea <Timers_Init+0x106>
     aa4:	81 e0       	ldi	r24, 0x01	; 1
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     aac:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Gv_PrescallerTimer0_AbsoluteValue>
     ab0:	1c c0       	rjmp	.+56     	; 0xaea <Timers_Init+0x106>
     ab2:	88 e0       	ldi	r24, 0x08	; 8
     ab4:	90 e0       	ldi	r25, 0x00	; 0
     ab6:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     aba:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Gv_PrescallerTimer0_AbsoluteValue>
     abe:	15 c0       	rjmp	.+42     	; 0xaea <Timers_Init+0x106>
     ac0:	80 e4       	ldi	r24, 0x40	; 64
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     ac8:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Gv_PrescallerTimer0_AbsoluteValue>
     acc:	0e c0       	rjmp	.+28     	; 0xaea <Timers_Init+0x106>
     ace:	80 e0       	ldi	r24, 0x00	; 0
     ad0:	91 e0       	ldi	r25, 0x01	; 1
     ad2:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     ad6:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Gv_PrescallerTimer0_AbsoluteValue>
     ada:	07 c0       	rjmp	.+14     	; 0xaea <Timers_Init+0x106>
     adc:	80 e0       	ldi	r24, 0x00	; 0
     ade:	94 e0       	ldi	r25, 0x04	; 4
     ae0:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     ae4:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Gv_PrescallerTimer0_AbsoluteValue>
     ae8:	00 00       	nop
     aea:	81 e0       	ldi	r24, 0x01	; 1
     aec:	89 83       	std	Y+1, r24	; 0x01
     aee:	cb c0       	rjmp	.+406    	; 0xc86 <Timers_Init+0x2a2>
     af0:	8f e4       	ldi	r24, 0x4F	; 79
     af2:	90 e0       	ldi	r25, 0x00	; 0
     af4:	2f e4       	ldi	r18, 0x4F	; 79
     af6:	30 e0       	ldi	r19, 0x00	; 0
     af8:	f9 01       	movw	r30, r18
     afa:	20 81       	ld	r18, Z
     afc:	42 2f       	mov	r20, r18
     afe:	2a 81       	ldd	r18, Y+2	; 0x02
     b00:	3b 81       	ldd	r19, Y+3	; 0x03
     b02:	f9 01       	movw	r30, r18
     b04:	21 81       	ldd	r18, Z+1	; 0x01
     b06:	23 70       	andi	r18, 0x03	; 3
     b08:	24 2b       	or	r18, r20
     b0a:	fc 01       	movw	r30, r24
     b0c:	20 83       	st	Z, r18
     b0e:	8e e4       	ldi	r24, 0x4E	; 78
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	2e e4       	ldi	r18, 0x4E	; 78
     b14:	30 e0       	ldi	r19, 0x00	; 0
     b16:	f9 01       	movw	r30, r18
     b18:	20 81       	ld	r18, Z
     b1a:	42 2f       	mov	r20, r18
     b1c:	2a 81       	ldd	r18, Y+2	; 0x02
     b1e:	3b 81       	ldd	r19, Y+3	; 0x03
     b20:	f9 01       	movw	r30, r18
     b22:	21 81       	ldd	r18, Z+1	; 0x01
     b24:	28 71       	andi	r18, 0x18	; 24
     b26:	24 2b       	or	r18, r20
     b28:	fc 01       	movw	r30, r24
     b2a:	20 83       	st	Z, r18
     b2c:	89 e5       	ldi	r24, 0x59	; 89
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	29 e5       	ldi	r18, 0x59	; 89
     b32:	30 e0       	ldi	r19, 0x00	; 0
     b34:	f9 01       	movw	r30, r18
     b36:	20 81       	ld	r18, Z
     b38:	24 60       	ori	r18, 0x04	; 4
     b3a:	fc 01       	movw	r30, r24
     b3c:	20 83       	st	Z, r18
     b3e:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <Interrupts_On>
     b42:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <Gv_PrescallerTimer1_Mask>
     b46:	88 2f       	mov	r24, r24
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	82 30       	cpi	r24, 0x02	; 2
     b4c:	91 05       	cpc	r25, r1
     b4e:	e9 f0       	breq	.+58     	; 0xb8a <Timers_Init+0x1a6>
     b50:	83 30       	cpi	r24, 0x03	; 3
     b52:	91 05       	cpc	r25, r1
     b54:	2c f4       	brge	.+10     	; 0xb60 <Timers_Init+0x17c>
     b56:	00 97       	sbiw	r24, 0x00	; 0
     b58:	61 f0       	breq	.+24     	; 0xb72 <Timers_Init+0x18e>
     b5a:	01 97       	sbiw	r24, 0x01	; 1
     b5c:	79 f0       	breq	.+30     	; 0xb7c <Timers_Init+0x198>
     b5e:	31 c0       	rjmp	.+98     	; 0xbc2 <Timers_Init+0x1de>
     b60:	84 30       	cpi	r24, 0x04	; 4
     b62:	91 05       	cpc	r25, r1
     b64:	01 f1       	breq	.+64     	; 0xba6 <Timers_Init+0x1c2>
     b66:	84 30       	cpi	r24, 0x04	; 4
     b68:	91 05       	cpc	r25, r1
     b6a:	b4 f0       	brlt	.+44     	; 0xb98 <Timers_Init+0x1b4>
     b6c:	05 97       	sbiw	r24, 0x05	; 5
     b6e:	11 f1       	breq	.+68     	; 0xbb4 <Timers_Init+0x1d0>
     b70:	28 c0       	rjmp	.+80     	; 0xbc2 <Timers_Init+0x1de>
     b72:	10 92 a2 00 	sts	0x00A2, r1	; 0x8000a2 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b76:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <Gv_PrescallerTimer1_AbsoluteValue>
     b7a:	23 c0       	rjmp	.+70     	; 0xbc2 <Timers_Init+0x1de>
     b7c:	81 e0       	ldi	r24, 0x01	; 1
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b84:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <Gv_PrescallerTimer1_AbsoluteValue>
     b88:	1c c0       	rjmp	.+56     	; 0xbc2 <Timers_Init+0x1de>
     b8a:	88 e0       	ldi	r24, 0x08	; 8
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b92:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <Gv_PrescallerTimer1_AbsoluteValue>
     b96:	15 c0       	rjmp	.+42     	; 0xbc2 <Timers_Init+0x1de>
     b98:	80 e4       	ldi	r24, 0x40	; 64
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     ba0:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <Gv_PrescallerTimer1_AbsoluteValue>
     ba4:	0e c0       	rjmp	.+28     	; 0xbc2 <Timers_Init+0x1de>
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	91 e0       	ldi	r25, 0x01	; 1
     baa:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     bae:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <Gv_PrescallerTimer1_AbsoluteValue>
     bb2:	07 c0       	rjmp	.+14     	; 0xbc2 <Timers_Init+0x1de>
     bb4:	80 e0       	ldi	r24, 0x00	; 0
     bb6:	94 e0       	ldi	r25, 0x04	; 4
     bb8:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     bbc:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <Gv_PrescallerTimer1_AbsoluteValue>
     bc0:	00 00       	nop
     bc2:	81 e0       	ldi	r24, 0x01	; 1
     bc4:	89 83       	std	Y+1, r24	; 0x01
     bc6:	5f c0       	rjmp	.+190    	; 0xc86 <Timers_Init+0x2a2>
     bc8:	85 e4       	ldi	r24, 0x45	; 69
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	25 e4       	ldi	r18, 0x45	; 69
     bce:	30 e0       	ldi	r19, 0x00	; 0
     bd0:	f9 01       	movw	r30, r18
     bd2:	40 81       	ld	r20, Z
     bd4:	2a 81       	ldd	r18, Y+2	; 0x02
     bd6:	3b 81       	ldd	r19, Y+3	; 0x03
     bd8:	f9 01       	movw	r30, r18
     bda:	21 81       	ldd	r18, Z+1	; 0x01
     bdc:	24 2b       	or	r18, r20
     bde:	fc 01       	movw	r30, r24
     be0:	20 83       	st	Z, r18
     be2:	89 e5       	ldi	r24, 0x59	; 89
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	29 e5       	ldi	r18, 0x59	; 89
     be8:	30 e0       	ldi	r19, 0x00	; 0
     bea:	f9 01       	movw	r30, r18
     bec:	40 81       	ld	r20, Z
     bee:	2a 81       	ldd	r18, Y+2	; 0x02
     bf0:	3b 81       	ldd	r19, Y+3	; 0x03
     bf2:	f9 01       	movw	r30, r18
     bf4:	26 81       	ldd	r18, Z+6	; 0x06
     bf6:	24 2b       	or	r18, r20
     bf8:	fc 01       	movw	r30, r24
     bfa:	20 83       	st	Z, r18
     bfc:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <Gv_PrescallerTimer2_Mask>
     c00:	88 2f       	mov	r24, r24
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	82 30       	cpi	r24, 0x02	; 2
     c06:	91 05       	cpc	r25, r1
     c08:	e9 f0       	breq	.+58     	; 0xc44 <Timers_Init+0x260>
     c0a:	83 30       	cpi	r24, 0x03	; 3
     c0c:	91 05       	cpc	r25, r1
     c0e:	2c f4       	brge	.+10     	; 0xc1a <Timers_Init+0x236>
     c10:	00 97       	sbiw	r24, 0x00	; 0
     c12:	61 f0       	breq	.+24     	; 0xc2c <Timers_Init+0x248>
     c14:	01 97       	sbiw	r24, 0x01	; 1
     c16:	79 f0       	breq	.+30     	; 0xc36 <Timers_Init+0x252>
     c18:	31 c0       	rjmp	.+98     	; 0xc7c <Timers_Init+0x298>
     c1a:	86 30       	cpi	r24, 0x06	; 6
     c1c:	91 05       	cpc	r25, r1
     c1e:	01 f1       	breq	.+64     	; 0xc60 <Timers_Init+0x27c>
     c20:	87 30       	cpi	r24, 0x07	; 7
     c22:	91 05       	cpc	r25, r1
     c24:	21 f1       	breq	.+72     	; 0xc6e <Timers_Init+0x28a>
     c26:	04 97       	sbiw	r24, 0x04	; 4
     c28:	a1 f0       	breq	.+40     	; 0xc52 <Timers_Init+0x26e>
     c2a:	28 c0       	rjmp	.+80     	; 0xc7c <Timers_Init+0x298>
     c2c:	10 92 9e 00 	sts	0x009E, r1	; 0x80009e <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c30:	10 92 9d 00 	sts	0x009D, r1	; 0x80009d <Gv_PrescallerTimer2_AbsoluteValue>
     c34:	23 c0       	rjmp	.+70     	; 0xc7c <Timers_Init+0x298>
     c36:	81 e0       	ldi	r24, 0x01	; 1
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	90 93 9e 00 	sts	0x009E, r25	; 0x80009e <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c3e:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <Gv_PrescallerTimer2_AbsoluteValue>
     c42:	1c c0       	rjmp	.+56     	; 0xc7c <Timers_Init+0x298>
     c44:	88 e0       	ldi	r24, 0x08	; 8
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	90 93 9e 00 	sts	0x009E, r25	; 0x80009e <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c4c:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <Gv_PrescallerTimer2_AbsoluteValue>
     c50:	15 c0       	rjmp	.+42     	; 0xc7c <Timers_Init+0x298>
     c52:	80 e4       	ldi	r24, 0x40	; 64
     c54:	90 e0       	ldi	r25, 0x00	; 0
     c56:	90 93 9e 00 	sts	0x009E, r25	; 0x80009e <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c5a:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <Gv_PrescallerTimer2_AbsoluteValue>
     c5e:	0e c0       	rjmp	.+28     	; 0xc7c <Timers_Init+0x298>
     c60:	80 e0       	ldi	r24, 0x00	; 0
     c62:	91 e0       	ldi	r25, 0x01	; 1
     c64:	90 93 9e 00 	sts	0x009E, r25	; 0x80009e <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c68:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <Gv_PrescallerTimer2_AbsoluteValue>
     c6c:	07 c0       	rjmp	.+14     	; 0xc7c <Timers_Init+0x298>
     c6e:	80 e0       	ldi	r24, 0x00	; 0
     c70:	94 e0       	ldi	r25, 0x04	; 4
     c72:	90 93 9e 00 	sts	0x009E, r25	; 0x80009e <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c76:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <Gv_PrescallerTimer2_AbsoluteValue>
     c7a:	00 00       	nop
     c7c:	81 e0       	ldi	r24, 0x01	; 1
     c7e:	89 83       	std	Y+1, r24	; 0x01
     c80:	02 c0       	rjmp	.+4      	; 0xc86 <Timers_Init+0x2a2>
     c82:	19 82       	std	Y+1, r1	; 0x01
     c84:	00 00       	nop
     c86:	8a 81       	ldd	r24, Y+2	; 0x02
     c88:	9b 81       	ldd	r25, Y+3	; 0x03
     c8a:	fc 01       	movw	r30, r24
     c8c:	82 81       	ldd	r24, Z+2	; 0x02
     c8e:	93 81       	ldd	r25, Z+3	; 0x03
     c90:	a4 81       	ldd	r26, Z+4	; 0x04
     c92:	b5 81       	ldd	r27, Z+5	; 0x05
     c94:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <Gv_Count+0x1>
     c98:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <Gv_Count>
     c9c:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <Gv_Count>
     ca0:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <Gv_Count+0x1>
     ca4:	cc 01       	movw	r24, r24
     ca6:	a0 e0       	ldi	r26, 0x00	; 0
     ca8:	b0 e0       	ldi	r27, 0x00	; 0
     caa:	2a 81       	ldd	r18, Y+2	; 0x02
     cac:	3b 81       	ldd	r19, Y+3	; 0x03
     cae:	f9 01       	movw	r30, r18
     cb0:	20 81       	ld	r18, Z
     cb2:	ac 01       	movw	r20, r24
     cb4:	bd 01       	movw	r22, r26
     cb6:	82 2f       	mov	r24, r18
     cb8:	0e 94 65 06 	call	0xcca	; 0xcca <Timers_SetCounter>
     cbc:	89 81       	ldd	r24, Y+1	; 0x01
     cbe:	0f 90       	pop	r0
     cc0:	0f 90       	pop	r0
     cc2:	0f 90       	pop	r0
     cc4:	df 91       	pop	r29
     cc6:	cf 91       	pop	r28
     cc8:	08 95       	ret

00000cca <Timers_SetCounter>:
     cca:	cf 93       	push	r28
     ccc:	df 93       	push	r29
     cce:	cd b7       	in	r28, 0x3d	; 61
     cd0:	de b7       	in	r29, 0x3e	; 62
     cd2:	2d 97       	sbiw	r28, 0x0d	; 13
     cd4:	0f b6       	in	r0, 0x3f	; 63
     cd6:	f8 94       	cli
     cd8:	de bf       	out	0x3e, r29	; 62
     cda:	0f be       	out	0x3f, r0	; 63
     cdc:	cd bf       	out	0x3d, r28	; 61
     cde:	89 87       	std	Y+9, r24	; 0x09
     ce0:	4a 87       	std	Y+10, r20	; 0x0a
     ce2:	5b 87       	std	Y+11, r21	; 0x0b
     ce4:	6c 87       	std	Y+12, r22	; 0x0c
     ce6:	7d 87       	std	Y+13, r23	; 0x0d
     ce8:	19 82       	std	Y+1, r1	; 0x01
     cea:	1a 82       	std	Y+2, r1	; 0x02
     cec:	1b 82       	std	Y+3, r1	; 0x03
     cee:	1c 82       	std	Y+4, r1	; 0x04
     cf0:	89 85       	ldd	r24, Y+9	; 0x09
     cf2:	88 2f       	mov	r24, r24
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	81 30       	cpi	r24, 0x01	; 1
     cf8:	91 05       	cpc	r25, r1
     cfa:	09 f4       	brne	.+2      	; 0xcfe <Timers_SetCounter+0x34>
     cfc:	61 c0       	rjmp	.+194    	; 0xdc0 <Timers_SetCounter+0xf6>
     cfe:	82 30       	cpi	r24, 0x02	; 2
     d00:	91 05       	cpc	r25, r1
     d02:	09 f4       	brne	.+2      	; 0xd06 <Timers_SetCounter+0x3c>
     d04:	bd c0       	rjmp	.+378    	; 0xe80 <Timers_SetCounter+0x1b6>
     d06:	89 2b       	or	r24, r25
     d08:	09 f0       	breq	.+2      	; 0xd0c <Timers_SetCounter+0x42>
     d0a:	14 c1       	rjmp	.+552    	; 0xf34 <Timers_SetCounter+0x26a>
     d0c:	80 91 9f 00 	lds	r24, 0x009F	; 0x80009f <Gv_PrescallerTimer0_AbsoluteValue>
     d10:	90 91 a0 00 	lds	r25, 0x00A0	; 0x8000a0 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     d14:	cc 01       	movw	r24, r24
     d16:	a0 e0       	ldi	r26, 0x00	; 0
     d18:	b0 e0       	ldi	r27, 0x00	; 0
     d1a:	9c 01       	movw	r18, r24
     d1c:	ad 01       	movw	r20, r26
     d1e:	60 e4       	ldi	r22, 0x40	; 64
     d20:	72 e4       	ldi	r23, 0x42	; 66
     d22:	8f e0       	ldi	r24, 0x0F	; 15
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	0e 94 43 08 	call	0x1086	; 0x1086 <__mulsi3>
     d2a:	dc 01       	movw	r26, r24
     d2c:	cb 01       	movw	r24, r22
     d2e:	20 91 94 00 	lds	r18, 0x0094	; 0x800094 <Gv_F_CPU>
     d32:	30 91 95 00 	lds	r19, 0x0095	; 0x800095 <Gv_F_CPU+0x1>
     d36:	40 91 96 00 	lds	r20, 0x0096	; 0x800096 <Gv_F_CPU+0x2>
     d3a:	50 91 97 00 	lds	r21, 0x0097	; 0x800097 <Gv_F_CPU+0x3>
     d3e:	bc 01       	movw	r22, r24
     d40:	cd 01       	movw	r24, r26
     d42:	0e 94 67 08 	call	0x10ce	; 0x10ce <__udivmodsi4>
     d46:	da 01       	movw	r26, r20
     d48:	c9 01       	movw	r24, r18
     d4a:	9c 01       	movw	r18, r24
     d4c:	ad 01       	movw	r20, r26
     d4e:	8a 85       	ldd	r24, Y+10	; 0x0a
     d50:	9b 85       	ldd	r25, Y+11	; 0x0b
     d52:	ac 85       	ldd	r26, Y+12	; 0x0c
     d54:	bd 85       	ldd	r27, Y+13	; 0x0d
     d56:	bc 01       	movw	r22, r24
     d58:	cd 01       	movw	r24, r26
     d5a:	0e 94 67 08 	call	0x10ce	; 0x10ce <__udivmodsi4>
     d5e:	da 01       	movw	r26, r20
     d60:	c9 01       	movw	r24, r18
     d62:	8d 83       	std	Y+5, r24	; 0x05
     d64:	9e 83       	std	Y+6, r25	; 0x06
     d66:	af 83       	std	Y+7, r26	; 0x07
     d68:	b8 87       	std	Y+8, r27	; 0x08
     d6a:	8d 81       	ldd	r24, Y+5	; 0x05
     d6c:	9e 81       	ldd	r25, Y+6	; 0x06
     d6e:	af 81       	ldd	r26, Y+7	; 0x07
     d70:	b8 85       	ldd	r27, Y+8	; 0x08
     d72:	81 30       	cpi	r24, 0x01	; 1
     d74:	91 40       	sbci	r25, 0x01	; 1
     d76:	a1 05       	cpc	r26, r1
     d78:	b1 05       	cpc	r27, r1
     d7a:	28 f0       	brcs	.+10     	; 0xd86 <Timers_SetCounter+0xbc>
     d7c:	19 82       	std	Y+1, r1	; 0x01
     d7e:	1a 82       	std	Y+2, r1	; 0x02
     d80:	1b 82       	std	Y+3, r1	; 0x03
     d82:	1c 82       	std	Y+4, r1	; 0x04
     d84:	dc c0       	rjmp	.+440    	; 0xf3e <Timers_SetCounter+0x274>
     d86:	8d 81       	ldd	r24, Y+5	; 0x05
     d88:	9e 81       	ldd	r25, Y+6	; 0x06
     d8a:	20 e0       	ldi	r18, 0x00	; 0
     d8c:	31 e0       	ldi	r19, 0x01	; 1
     d8e:	a9 01       	movw	r20, r18
     d90:	48 1b       	sub	r20, r24
     d92:	59 0b       	sbc	r21, r25
     d94:	ca 01       	movw	r24, r20
     d96:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <Gv_Count+0x1>
     d9a:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <Gv_Count>
     d9e:	82 e5       	ldi	r24, 0x52	; 82
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	20 91 98 00 	lds	r18, 0x0098	; 0x800098 <Gv_Count>
     da6:	30 91 99 00 	lds	r19, 0x0099	; 0x800099 <Gv_Count+0x1>
     daa:	fc 01       	movw	r30, r24
     dac:	20 83       	st	Z, r18
     dae:	81 e0       	ldi	r24, 0x01	; 1
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	a0 e0       	ldi	r26, 0x00	; 0
     db4:	b0 e0       	ldi	r27, 0x00	; 0
     db6:	89 83       	std	Y+1, r24	; 0x01
     db8:	9a 83       	std	Y+2, r25	; 0x02
     dba:	ab 83       	std	Y+3, r26	; 0x03
     dbc:	bc 83       	std	Y+4, r27	; 0x04
     dbe:	bf c0       	rjmp	.+382    	; 0xf3e <Timers_SetCounter+0x274>
     dc0:	80 91 a1 00 	lds	r24, 0x00A1	; 0x8000a1 <Gv_PrescallerTimer1_AbsoluteValue>
     dc4:	90 91 a2 00 	lds	r25, 0x00A2	; 0x8000a2 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     dc8:	cc 01       	movw	r24, r24
     dca:	a0 e0       	ldi	r26, 0x00	; 0
     dcc:	b0 e0       	ldi	r27, 0x00	; 0
     dce:	9c 01       	movw	r18, r24
     dd0:	ad 01       	movw	r20, r26
     dd2:	60 e4       	ldi	r22, 0x40	; 64
     dd4:	72 e4       	ldi	r23, 0x42	; 66
     dd6:	8f e0       	ldi	r24, 0x0F	; 15
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	0e 94 43 08 	call	0x1086	; 0x1086 <__mulsi3>
     dde:	dc 01       	movw	r26, r24
     de0:	cb 01       	movw	r24, r22
     de2:	20 91 94 00 	lds	r18, 0x0094	; 0x800094 <Gv_F_CPU>
     de6:	30 91 95 00 	lds	r19, 0x0095	; 0x800095 <Gv_F_CPU+0x1>
     dea:	40 91 96 00 	lds	r20, 0x0096	; 0x800096 <Gv_F_CPU+0x2>
     dee:	50 91 97 00 	lds	r21, 0x0097	; 0x800097 <Gv_F_CPU+0x3>
     df2:	bc 01       	movw	r22, r24
     df4:	cd 01       	movw	r24, r26
     df6:	0e 94 67 08 	call	0x10ce	; 0x10ce <__udivmodsi4>
     dfa:	da 01       	movw	r26, r20
     dfc:	c9 01       	movw	r24, r18
     dfe:	9c 01       	movw	r18, r24
     e00:	ad 01       	movw	r20, r26
     e02:	8a 85       	ldd	r24, Y+10	; 0x0a
     e04:	9b 85       	ldd	r25, Y+11	; 0x0b
     e06:	ac 85       	ldd	r26, Y+12	; 0x0c
     e08:	bd 85       	ldd	r27, Y+13	; 0x0d
     e0a:	bc 01       	movw	r22, r24
     e0c:	cd 01       	movw	r24, r26
     e0e:	0e 94 67 08 	call	0x10ce	; 0x10ce <__udivmodsi4>
     e12:	da 01       	movw	r26, r20
     e14:	c9 01       	movw	r24, r18
     e16:	8d 83       	std	Y+5, r24	; 0x05
     e18:	9e 83       	std	Y+6, r25	; 0x06
     e1a:	af 83       	std	Y+7, r26	; 0x07
     e1c:	b8 87       	std	Y+8, r27	; 0x08
     e1e:	8d 81       	ldd	r24, Y+5	; 0x05
     e20:	9e 81       	ldd	r25, Y+6	; 0x06
     e22:	af 81       	ldd	r26, Y+7	; 0x07
     e24:	b8 85       	ldd	r27, Y+8	; 0x08
     e26:	01 97       	sbiw	r24, 0x01	; 1
     e28:	a1 40       	sbci	r26, 0x01	; 1
     e2a:	b1 05       	cpc	r27, r1
     e2c:	28 f0       	brcs	.+10     	; 0xe38 <Timers_SetCounter+0x16e>
     e2e:	19 82       	std	Y+1, r1	; 0x01
     e30:	1a 82       	std	Y+2, r1	; 0x02
     e32:	1b 82       	std	Y+3, r1	; 0x03
     e34:	1c 82       	std	Y+4, r1	; 0x04
     e36:	83 c0       	rjmp	.+262    	; 0xf3e <Timers_SetCounter+0x274>
     e38:	8d 81       	ldd	r24, Y+5	; 0x05
     e3a:	9e 81       	ldd	r25, Y+6	; 0x06
     e3c:	91 95       	neg	r25
     e3e:	81 95       	neg	r24
     e40:	91 09       	sbc	r25, r1
     e42:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <Gv_Count+0x1>
     e46:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <Gv_Count>
     e4a:	8d e4       	ldi	r24, 0x4D	; 77
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	20 91 98 00 	lds	r18, 0x0098	; 0x800098 <Gv_Count>
     e52:	30 91 99 00 	lds	r19, 0x0099	; 0x800099 <Gv_Count+0x1>
     e56:	23 2f       	mov	r18, r19
     e58:	33 27       	eor	r19, r19
     e5a:	fc 01       	movw	r30, r24
     e5c:	20 83       	st	Z, r18
     e5e:	8c e4       	ldi	r24, 0x4C	; 76
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	20 91 98 00 	lds	r18, 0x0098	; 0x800098 <Gv_Count>
     e66:	30 91 99 00 	lds	r19, 0x0099	; 0x800099 <Gv_Count+0x1>
     e6a:	fc 01       	movw	r30, r24
     e6c:	20 83       	st	Z, r18
     e6e:	81 e0       	ldi	r24, 0x01	; 1
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	a0 e0       	ldi	r26, 0x00	; 0
     e74:	b0 e0       	ldi	r27, 0x00	; 0
     e76:	89 83       	std	Y+1, r24	; 0x01
     e78:	9a 83       	std	Y+2, r25	; 0x02
     e7a:	ab 83       	std	Y+3, r26	; 0x03
     e7c:	bc 83       	std	Y+4, r27	; 0x04
     e7e:	5f c0       	rjmp	.+190    	; 0xf3e <Timers_SetCounter+0x274>
     e80:	80 91 9d 00 	lds	r24, 0x009D	; 0x80009d <Gv_PrescallerTimer2_AbsoluteValue>
     e84:	90 91 9e 00 	lds	r25, 0x009E	; 0x80009e <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     e88:	cc 01       	movw	r24, r24
     e8a:	a0 e0       	ldi	r26, 0x00	; 0
     e8c:	b0 e0       	ldi	r27, 0x00	; 0
     e8e:	9c 01       	movw	r18, r24
     e90:	ad 01       	movw	r20, r26
     e92:	60 e4       	ldi	r22, 0x40	; 64
     e94:	72 e4       	ldi	r23, 0x42	; 66
     e96:	8f e0       	ldi	r24, 0x0F	; 15
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	0e 94 43 08 	call	0x1086	; 0x1086 <__mulsi3>
     e9e:	dc 01       	movw	r26, r24
     ea0:	cb 01       	movw	r24, r22
     ea2:	20 91 94 00 	lds	r18, 0x0094	; 0x800094 <Gv_F_CPU>
     ea6:	30 91 95 00 	lds	r19, 0x0095	; 0x800095 <Gv_F_CPU+0x1>
     eaa:	40 91 96 00 	lds	r20, 0x0096	; 0x800096 <Gv_F_CPU+0x2>
     eae:	50 91 97 00 	lds	r21, 0x0097	; 0x800097 <Gv_F_CPU+0x3>
     eb2:	bc 01       	movw	r22, r24
     eb4:	cd 01       	movw	r24, r26
     eb6:	0e 94 67 08 	call	0x10ce	; 0x10ce <__udivmodsi4>
     eba:	da 01       	movw	r26, r20
     ebc:	c9 01       	movw	r24, r18
     ebe:	9c 01       	movw	r18, r24
     ec0:	ad 01       	movw	r20, r26
     ec2:	8a 85       	ldd	r24, Y+10	; 0x0a
     ec4:	9b 85       	ldd	r25, Y+11	; 0x0b
     ec6:	ac 85       	ldd	r26, Y+12	; 0x0c
     ec8:	bd 85       	ldd	r27, Y+13	; 0x0d
     eca:	bc 01       	movw	r22, r24
     ecc:	cd 01       	movw	r24, r26
     ece:	0e 94 67 08 	call	0x10ce	; 0x10ce <__udivmodsi4>
     ed2:	da 01       	movw	r26, r20
     ed4:	c9 01       	movw	r24, r18
     ed6:	8d 83       	std	Y+5, r24	; 0x05
     ed8:	9e 83       	std	Y+6, r25	; 0x06
     eda:	af 83       	std	Y+7, r26	; 0x07
     edc:	b8 87       	std	Y+8, r27	; 0x08
     ede:	8d 81       	ldd	r24, Y+5	; 0x05
     ee0:	9e 81       	ldd	r25, Y+6	; 0x06
     ee2:	af 81       	ldd	r26, Y+7	; 0x07
     ee4:	b8 85       	ldd	r27, Y+8	; 0x08
     ee6:	81 30       	cpi	r24, 0x01	; 1
     ee8:	91 40       	sbci	r25, 0x01	; 1
     eea:	a1 05       	cpc	r26, r1
     eec:	b1 05       	cpc	r27, r1
     eee:	28 f0       	brcs	.+10     	; 0xefa <Timers_SetCounter+0x230>
     ef0:	19 82       	std	Y+1, r1	; 0x01
     ef2:	1a 82       	std	Y+2, r1	; 0x02
     ef4:	1b 82       	std	Y+3, r1	; 0x03
     ef6:	1c 82       	std	Y+4, r1	; 0x04
     ef8:	22 c0       	rjmp	.+68     	; 0xf3e <Timers_SetCounter+0x274>
     efa:	8d 81       	ldd	r24, Y+5	; 0x05
     efc:	9e 81       	ldd	r25, Y+6	; 0x06
     efe:	20 e0       	ldi	r18, 0x00	; 0
     f00:	31 e0       	ldi	r19, 0x01	; 1
     f02:	a9 01       	movw	r20, r18
     f04:	48 1b       	sub	r20, r24
     f06:	59 0b       	sbc	r21, r25
     f08:	ca 01       	movw	r24, r20
     f0a:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <Gv_Count+0x1>
     f0e:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <Gv_Count>
     f12:	84 e4       	ldi	r24, 0x44	; 68
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	20 91 98 00 	lds	r18, 0x0098	; 0x800098 <Gv_Count>
     f1a:	30 91 99 00 	lds	r19, 0x0099	; 0x800099 <Gv_Count+0x1>
     f1e:	fc 01       	movw	r30, r24
     f20:	20 83       	st	Z, r18
     f22:	81 e0       	ldi	r24, 0x01	; 1
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	a0 e0       	ldi	r26, 0x00	; 0
     f28:	b0 e0       	ldi	r27, 0x00	; 0
     f2a:	89 83       	std	Y+1, r24	; 0x01
     f2c:	9a 83       	std	Y+2, r25	; 0x02
     f2e:	ab 83       	std	Y+3, r26	; 0x03
     f30:	bc 83       	std	Y+4, r27	; 0x04
     f32:	05 c0       	rjmp	.+10     	; 0xf3e <Timers_SetCounter+0x274>
     f34:	19 82       	std	Y+1, r1	; 0x01
     f36:	1a 82       	std	Y+2, r1	; 0x02
     f38:	1b 82       	std	Y+3, r1	; 0x03
     f3a:	1c 82       	std	Y+4, r1	; 0x04
     f3c:	00 00       	nop
     f3e:	8a 85       	ldd	r24, Y+10	; 0x0a
     f40:	9b 85       	ldd	r25, Y+11	; 0x0b
     f42:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <Gv_Count+0x1>
     f46:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <Gv_Count>
     f4a:	89 81       	ldd	r24, Y+1	; 0x01
     f4c:	2d 96       	adiw	r28, 0x0d	; 13
     f4e:	0f b6       	in	r0, 0x3f	; 63
     f50:	f8 94       	cli
     f52:	de bf       	out	0x3e, r29	; 62
     f54:	0f be       	out	0x3f, r0	; 63
     f56:	cd bf       	out	0x3d, r28	; 61
     f58:	df 91       	pop	r29
     f5a:	cf 91       	pop	r28
     f5c:	08 95       	ret

00000f5e <Timers_Start>:
     f5e:	cf 93       	push	r28
     f60:	df 93       	push	r29
     f62:	1f 92       	push	r1
     f64:	cd b7       	in	r28, 0x3d	; 61
     f66:	de b7       	in	r29, 0x3e	; 62
     f68:	89 83       	std	Y+1, r24	; 0x01
     f6a:	89 81       	ldd	r24, Y+1	; 0x01
     f6c:	88 2f       	mov	r24, r24
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	81 30       	cpi	r24, 0x01	; 1
     f72:	91 05       	cpc	r25, r1
     f74:	99 f0       	breq	.+38     	; 0xf9c <Timers_Start+0x3e>
     f76:	82 30       	cpi	r24, 0x02	; 2
     f78:	91 05       	cpc	r25, r1
     f7a:	e9 f0       	breq	.+58     	; 0xfb6 <Timers_Start+0x58>
     f7c:	89 2b       	or	r24, r25
     f7e:	09 f0       	breq	.+2      	; 0xf82 <Timers_Start+0x24>
     f80:	27 c0       	rjmp	.+78     	; 0xfd0 <Timers_Start+0x72>
     f82:	83 e5       	ldi	r24, 0x53	; 83
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	23 e5       	ldi	r18, 0x53	; 83
     f88:	30 e0       	ldi	r19, 0x00	; 0
     f8a:	f9 01       	movw	r30, r18
     f8c:	20 81       	ld	r18, Z
     f8e:	28 7f       	andi	r18, 0xF8	; 248
     f90:	30 91 60 00 	lds	r19, 0x0060	; 0x800060 <Gv_PrescallerTimer0_Mask>
     f94:	23 2b       	or	r18, r19
     f96:	fc 01       	movw	r30, r24
     f98:	20 83       	st	Z, r18
     f9a:	1a c0       	rjmp	.+52     	; 0xfd0 <Timers_Start+0x72>
     f9c:	8e e4       	ldi	r24, 0x4E	; 78
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	2e e4       	ldi	r18, 0x4E	; 78
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	f9 01       	movw	r30, r18
     fa6:	20 81       	ld	r18, Z
     fa8:	28 7f       	andi	r18, 0xF8	; 248
     faa:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <Gv_PrescallerTimer1_Mask>
     fae:	23 2b       	or	r18, r19
     fb0:	fc 01       	movw	r30, r24
     fb2:	20 83       	st	Z, r18
     fb4:	0d c0       	rjmp	.+26     	; 0xfd0 <Timers_Start+0x72>
     fb6:	85 e4       	ldi	r24, 0x45	; 69
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	25 e4       	ldi	r18, 0x45	; 69
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	f9 01       	movw	r30, r18
     fc0:	20 81       	ld	r18, Z
     fc2:	28 7f       	andi	r18, 0xF8	; 248
     fc4:	30 91 62 00 	lds	r19, 0x0062	; 0x800062 <Gv_PrescallerTimer2_Mask>
     fc8:	23 2b       	or	r18, r19
     fca:	fc 01       	movw	r30, r24
     fcc:	20 83       	st	Z, r18
     fce:	00 00       	nop
     fd0:	81 e0       	ldi	r24, 0x01	; 1
     fd2:	0f 90       	pop	r0
     fd4:	df 91       	pop	r29
     fd6:	cf 91       	pop	r28
     fd8:	08 95       	ret

00000fda <Timers_SetCallBack>:
     fda:	cf 93       	push	r28
     fdc:	df 93       	push	r29
     fde:	00 d0       	rcall	.+0      	; 0xfe0 <Timers_SetCallBack+0x6>
     fe0:	cd b7       	in	r28, 0x3d	; 61
     fe2:	de b7       	in	r29, 0x3e	; 62
     fe4:	9a 83       	std	Y+2, r25	; 0x02
     fe6:	89 83       	std	Y+1, r24	; 0x01
     fe8:	89 81       	ldd	r24, Y+1	; 0x01
     fea:	9a 81       	ldd	r25, Y+2	; 0x02
     fec:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <gPtrCallBk+0x1>
     ff0:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <gPtrCallBk>
     ff4:	00 00       	nop
     ff6:	0f 90       	pop	r0
     ff8:	0f 90       	pop	r0
     ffa:	df 91       	pop	r29
     ffc:	cf 91       	pop	r28
     ffe:	08 95       	ret

00001000 <__vector_9>:
    1000:	1f 92       	push	r1
    1002:	0f 92       	push	r0
    1004:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1008:	0f 92       	push	r0
    100a:	11 24       	eor	r1, r1
    100c:	2f 93       	push	r18
    100e:	3f 93       	push	r19
    1010:	4f 93       	push	r20
    1012:	5f 93       	push	r21
    1014:	6f 93       	push	r22
    1016:	7f 93       	push	r23
    1018:	8f 93       	push	r24
    101a:	9f 93       	push	r25
    101c:	af 93       	push	r26
    101e:	bf 93       	push	r27
    1020:	ef 93       	push	r30
    1022:	ff 93       	push	r31
    1024:	cf 93       	push	r28
    1026:	df 93       	push	r29
    1028:	cd b7       	in	r28, 0x3d	; 61
    102a:	de b7       	in	r29, 0x3e	; 62
    102c:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <gPtrCallBk>
    1030:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <gPtrCallBk+0x1>
    1034:	89 2b       	or	r24, r25
    1036:	31 f0       	breq	.+12     	; 0x1044 <__vector_9+0x44>
    1038:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <gPtrCallBk>
    103c:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <gPtrCallBk+0x1>
    1040:	fc 01       	movw	r30, r24
    1042:	09 95       	icall
    1044:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <Gv_Count>
    1048:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <Gv_Count+0x1>
    104c:	cc 01       	movw	r24, r24
    104e:	a0 e0       	ldi	r26, 0x00	; 0
    1050:	b0 e0       	ldi	r27, 0x00	; 0
    1052:	ac 01       	movw	r20, r24
    1054:	bd 01       	movw	r22, r26
    1056:	81 e0       	ldi	r24, 0x01	; 1
    1058:	0e 94 65 06 	call	0xcca	; 0xcca <Timers_SetCounter>
    105c:	00 00       	nop
    105e:	df 91       	pop	r29
    1060:	cf 91       	pop	r28
    1062:	ff 91       	pop	r31
    1064:	ef 91       	pop	r30
    1066:	bf 91       	pop	r27
    1068:	af 91       	pop	r26
    106a:	9f 91       	pop	r25
    106c:	8f 91       	pop	r24
    106e:	7f 91       	pop	r23
    1070:	6f 91       	pop	r22
    1072:	5f 91       	pop	r21
    1074:	4f 91       	pop	r20
    1076:	3f 91       	pop	r19
    1078:	2f 91       	pop	r18
    107a:	0f 90       	pop	r0
    107c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1080:	0f 90       	pop	r0
    1082:	1f 90       	pop	r1
    1084:	18 95       	reti

00001086 <__mulsi3>:
    1086:	db 01       	movw	r26, r22
    1088:	8f 93       	push	r24
    108a:	9f 93       	push	r25
    108c:	0e 94 89 08 	call	0x1112	; 0x1112 <__muluhisi3>
    1090:	bf 91       	pop	r27
    1092:	af 91       	pop	r26
    1094:	a2 9f       	mul	r26, r18
    1096:	80 0d       	add	r24, r0
    1098:	91 1d       	adc	r25, r1
    109a:	a3 9f       	mul	r26, r19
    109c:	90 0d       	add	r25, r0
    109e:	b2 9f       	mul	r27, r18
    10a0:	90 0d       	add	r25, r0
    10a2:	11 24       	eor	r1, r1
    10a4:	08 95       	ret

000010a6 <__udivmodhi4>:
    10a6:	aa 1b       	sub	r26, r26
    10a8:	bb 1b       	sub	r27, r27
    10aa:	51 e1       	ldi	r21, 0x11	; 17
    10ac:	07 c0       	rjmp	.+14     	; 0x10bc <__udivmodhi4_ep>

000010ae <__udivmodhi4_loop>:
    10ae:	aa 1f       	adc	r26, r26
    10b0:	bb 1f       	adc	r27, r27
    10b2:	a6 17       	cp	r26, r22
    10b4:	b7 07       	cpc	r27, r23
    10b6:	10 f0       	brcs	.+4      	; 0x10bc <__udivmodhi4_ep>
    10b8:	a6 1b       	sub	r26, r22
    10ba:	b7 0b       	sbc	r27, r23

000010bc <__udivmodhi4_ep>:
    10bc:	88 1f       	adc	r24, r24
    10be:	99 1f       	adc	r25, r25
    10c0:	5a 95       	dec	r21
    10c2:	a9 f7       	brne	.-22     	; 0x10ae <__udivmodhi4_loop>
    10c4:	80 95       	com	r24
    10c6:	90 95       	com	r25
    10c8:	bc 01       	movw	r22, r24
    10ca:	cd 01       	movw	r24, r26
    10cc:	08 95       	ret

000010ce <__udivmodsi4>:
    10ce:	a1 e2       	ldi	r26, 0x21	; 33
    10d0:	1a 2e       	mov	r1, r26
    10d2:	aa 1b       	sub	r26, r26
    10d4:	bb 1b       	sub	r27, r27
    10d6:	fd 01       	movw	r30, r26
    10d8:	0d c0       	rjmp	.+26     	; 0x10f4 <__udivmodsi4_ep>

000010da <__udivmodsi4_loop>:
    10da:	aa 1f       	adc	r26, r26
    10dc:	bb 1f       	adc	r27, r27
    10de:	ee 1f       	adc	r30, r30
    10e0:	ff 1f       	adc	r31, r31
    10e2:	a2 17       	cp	r26, r18
    10e4:	b3 07       	cpc	r27, r19
    10e6:	e4 07       	cpc	r30, r20
    10e8:	f5 07       	cpc	r31, r21
    10ea:	20 f0       	brcs	.+8      	; 0x10f4 <__udivmodsi4_ep>
    10ec:	a2 1b       	sub	r26, r18
    10ee:	b3 0b       	sbc	r27, r19
    10f0:	e4 0b       	sbc	r30, r20
    10f2:	f5 0b       	sbc	r31, r21

000010f4 <__udivmodsi4_ep>:
    10f4:	66 1f       	adc	r22, r22
    10f6:	77 1f       	adc	r23, r23
    10f8:	88 1f       	adc	r24, r24
    10fa:	99 1f       	adc	r25, r25
    10fc:	1a 94       	dec	r1
    10fe:	69 f7       	brne	.-38     	; 0x10da <__udivmodsi4_loop>
    1100:	60 95       	com	r22
    1102:	70 95       	com	r23
    1104:	80 95       	com	r24
    1106:	90 95       	com	r25
    1108:	9b 01       	movw	r18, r22
    110a:	ac 01       	movw	r20, r24
    110c:	bd 01       	movw	r22, r26
    110e:	cf 01       	movw	r24, r30
    1110:	08 95       	ret

00001112 <__muluhisi3>:
    1112:	0e 94 94 08 	call	0x1128	; 0x1128 <__umulhisi3>
    1116:	a5 9f       	mul	r26, r21
    1118:	90 0d       	add	r25, r0
    111a:	b4 9f       	mul	r27, r20
    111c:	90 0d       	add	r25, r0
    111e:	a4 9f       	mul	r26, r20
    1120:	80 0d       	add	r24, r0
    1122:	91 1d       	adc	r25, r1
    1124:	11 24       	eor	r1, r1
    1126:	08 95       	ret

00001128 <__umulhisi3>:
    1128:	a2 9f       	mul	r26, r18
    112a:	b0 01       	movw	r22, r0
    112c:	b3 9f       	mul	r27, r19
    112e:	c0 01       	movw	r24, r0
    1130:	a3 9f       	mul	r26, r19
    1132:	70 0d       	add	r23, r0
    1134:	81 1d       	adc	r24, r1
    1136:	11 24       	eor	r1, r1
    1138:	91 1d       	adc	r25, r1
    113a:	b2 9f       	mul	r27, r18
    113c:	70 0d       	add	r23, r0
    113e:	81 1d       	adc	r24, r1
    1140:	11 24       	eor	r1, r1
    1142:	91 1d       	adc	r25, r1
    1144:	08 95       	ret

00001146 <_exit>:
    1146:	f8 94       	cli

00001148 <__stop_program>:
    1148:	ff cf       	rjmp	.-2      	; 0x1148 <__stop_program>
