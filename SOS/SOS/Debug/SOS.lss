
SOS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000011a8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  000011a8  0000123c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000037  0080006e  0080006e  0000124a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000124a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000127c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b0  00000000  00000000  000012b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d26  00000000  00000000  00001568  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b3e  00000000  00000000  0000328e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001c6b  00000000  00000000  00003dcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b7c  00000000  00000000  00005a38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001170  00000000  00000000  000065b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000018c9  00000000  00000000  00007724  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000238  00000000  00000000  00008fed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 2e 08 	jmp	0x105c	; 0x105c <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 ea       	ldi	r30, 0xA8	; 168
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ae 36       	cpi	r26, 0x6E	; 110
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	ae e6       	ldi	r26, 0x6E	; 110
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a5 3a       	cpi	r26, 0xA5	; 165
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 6a 00 	call	0xd4	; 0xd4 <main>
      8a:	0c 94 d2 08 	jmp	0x11a4	; 0x11a4 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Task1>:

/************************************************************************/
/*                            SOS Tasks                                 */
/************************************************************************/
void Task1(void)
{
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	cd b7       	in	r28, 0x3d	; 61
      98:	de b7       	in	r29, 0x3e	; 62
	Led_Tog(LED0);
      9a:	80 e1       	ldi	r24, 0x10	; 16
      9c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <Led_Tog>
}
      a0:	00 00       	nop
      a2:	df 91       	pop	r29
      a4:	cf 91       	pop	r28
      a6:	08 95       	ret

000000a8 <Task2>:

void Task2(void)
{
      a8:	cf 93       	push	r28
      aa:	df 93       	push	r29
      ac:	cd b7       	in	r28, 0x3d	; 61
      ae:	de b7       	in	r29, 0x3e	; 62
	Led_Tog(LED1);
      b0:	80 e2       	ldi	r24, 0x20	; 32
      b2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <Led_Tog>
}
      b6:	00 00       	nop
      b8:	df 91       	pop	r29
      ba:	cf 91       	pop	r28
      bc:	08 95       	ret

000000be <Task3>:

void Task3(void)
{
      be:	cf 93       	push	r28
      c0:	df 93       	push	r29
      c2:	cd b7       	in	r28, 0x3d	; 61
      c4:	de b7       	in	r29, 0x3e	; 62
	Led_Tog(LED2);
      c6:	80 e4       	ldi	r24, 0x40	; 64
      c8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <Led_Tog>
}
      cc:	00 00       	nop
      ce:	df 91       	pop	r29
      d0:	cf 91       	pop	r28
      d2:	08 95       	ret

000000d4 <main>:

/************************************************************************/
/*                          Main Function                               */
/************************************************************************/
int main(void)
{
      d4:	cf 93       	push	r28
      d6:	df 93       	push	r29
      d8:	cd b7       	in	r28, 0x3d	; 61
      da:	de b7       	in	r29, 0x3e	; 62
	/* Initializing the Led To indicate The Tasks */
	Led_Init(LED0);
      dc:	80 e1       	ldi	r24, 0x10	; 16
      de:	0e 94 98 00 	call	0x130	; 0x130 <Led_Init>
	Led_Init(LED1);
      e2:	80 e2       	ldi	r24, 0x20	; 32
      e4:	0e 94 98 00 	call	0x130	; 0x130 <Led_Init>
	Led_Init(LED2);
      e8:	80 e4       	ldi	r24, 0x40	; 64
      ea:	0e 94 98 00 	call	0x130	; 0x130 <Led_Init>
	Led_Init(LED3);
      ee:	80 e8       	ldi	r24, 0x80	; 128
      f0:	0e 94 98 00 	call	0x130	; 0x130 <Led_Init>
	
	Sos_Init();	
      f4:	0e 94 32 01 	call	0x264	; 0x264 <Sos_Init>
	
	Sos_Create_Task(Task1,TASK1_PRIORITY,TASK1_PERIODICITY);
      f8:	4a e5       	ldi	r20, 0x5A	; 90
      fa:	50 e0       	ldi	r21, 0x00	; 0
      fc:	65 e0       	ldi	r22, 0x05	; 5
      fe:	89 e4       	ldi	r24, 0x49	; 73
     100:	90 e0       	ldi	r25, 0x00	; 0
     102:	0e 94 b2 01 	call	0x364	; 0x364 <Sos_Create_Task>
	Sos_Create_Task(Task2,TASK2_PRIORITY,TASK2_PERIODICITY);
     106:	4c e3       	ldi	r20, 0x3C	; 60
     108:	50 e0       	ldi	r21, 0x00	; 0
     10a:	64 e0       	ldi	r22, 0x04	; 4
     10c:	84 e5       	ldi	r24, 0x54	; 84
     10e:	90 e0       	ldi	r25, 0x00	; 0
     110:	0e 94 b2 01 	call	0x364	; 0x364 <Sos_Create_Task>
	Sos_Create_Task(Task3,TASK3_PRIORITY,TASK3_PERIODICITY);
     114:	4e e1       	ldi	r20, 0x1E	; 30
     116:	50 e0       	ldi	r21, 0x00	; 0
     118:	63 e0       	ldi	r22, 0x03	; 3
     11a:	8f e5       	ldi	r24, 0x5F	; 95
     11c:	90 e0       	ldi	r25, 0x00	; 0
     11e:	0e 94 b2 01 	call	0x364	; 0x364 <Sos_Create_Task>
		
	Sos_Run();
     122:	0e 94 46 02 	call	0x48c	; 0x48c <Sos_Run>
     126:	80 e0       	ldi	r24, 0x00	; 0
     128:	90 e0       	ldi	r25, 0x00	; 0
}
     12a:	df 91       	pop	r29
     12c:	cf 91       	pop	r28
     12e:	08 95       	ret

00000130 <Led_Init>:
     130:	cf 93       	push	r28
     132:	df 93       	push	r29
     134:	1f 92       	push	r1
     136:	cd b7       	in	r28, 0x3d	; 61
     138:	de b7       	in	r29, 0x3e	; 62
     13a:	89 83       	std	Y+1, r24	; 0x01
     13c:	89 81       	ldd	r24, Y+1	; 0x01
     13e:	88 2f       	mov	r24, r24
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	80 32       	cpi	r24, 0x20	; 32
     144:	91 05       	cpc	r25, r1
     146:	c1 f0       	breq	.+48     	; 0x178 <Led_Init+0x48>
     148:	81 32       	cpi	r24, 0x21	; 33
     14a:	91 05       	cpc	r25, r1
     14c:	1c f4       	brge	.+6      	; 0x154 <Led_Init+0x24>
     14e:	40 97       	sbiw	r24, 0x10	; 16
     150:	41 f0       	breq	.+16     	; 0x162 <Led_Init+0x32>
     152:	33 c0       	rjmp	.+102    	; 0x1ba <Led_Init+0x8a>
     154:	80 34       	cpi	r24, 0x40	; 64
     156:	91 05       	cpc	r25, r1
     158:	d1 f0       	breq	.+52     	; 0x18e <Led_Init+0x5e>
     15a:	80 38       	cpi	r24, 0x80	; 128
     15c:	91 05       	cpc	r25, r1
     15e:	11 f1       	breq	.+68     	; 0x1a4 <Led_Init+0x74>
     160:	2c c0       	rjmp	.+88     	; 0x1ba <Led_Init+0x8a>
     162:	4f ef       	ldi	r20, 0xFF	; 255
     164:	60 e1       	ldi	r22, 0x10	; 16
     166:	81 e0       	ldi	r24, 0x01	; 1
     168:	0e 94 2d 03 	call	0x65a	; 0x65a <Gpio_PinDirection>
     16c:	40 e0       	ldi	r20, 0x00	; 0
     16e:	60 e1       	ldi	r22, 0x10	; 16
     170:	81 e0       	ldi	r24, 0x01	; 1
     172:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <Gpio_PinWrite>
     176:	21 c0       	rjmp	.+66     	; 0x1ba <Led_Init+0x8a>
     178:	4f ef       	ldi	r20, 0xFF	; 255
     17a:	60 e2       	ldi	r22, 0x20	; 32
     17c:	81 e0       	ldi	r24, 0x01	; 1
     17e:	0e 94 2d 03 	call	0x65a	; 0x65a <Gpio_PinDirection>
     182:	40 e0       	ldi	r20, 0x00	; 0
     184:	60 e2       	ldi	r22, 0x20	; 32
     186:	81 e0       	ldi	r24, 0x01	; 1
     188:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <Gpio_PinWrite>
     18c:	16 c0       	rjmp	.+44     	; 0x1ba <Led_Init+0x8a>
     18e:	4f ef       	ldi	r20, 0xFF	; 255
     190:	60 e4       	ldi	r22, 0x40	; 64
     192:	81 e0       	ldi	r24, 0x01	; 1
     194:	0e 94 2d 03 	call	0x65a	; 0x65a <Gpio_PinDirection>
     198:	40 e0       	ldi	r20, 0x00	; 0
     19a:	60 e4       	ldi	r22, 0x40	; 64
     19c:	81 e0       	ldi	r24, 0x01	; 1
     19e:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <Gpio_PinWrite>
     1a2:	0b c0       	rjmp	.+22     	; 0x1ba <Led_Init+0x8a>
     1a4:	4f ef       	ldi	r20, 0xFF	; 255
     1a6:	60 e8       	ldi	r22, 0x80	; 128
     1a8:	81 e0       	ldi	r24, 0x01	; 1
     1aa:	0e 94 2d 03 	call	0x65a	; 0x65a <Gpio_PinDirection>
     1ae:	40 e0       	ldi	r20, 0x00	; 0
     1b0:	60 e8       	ldi	r22, 0x80	; 128
     1b2:	81 e0       	ldi	r24, 0x01	; 1
     1b4:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <Gpio_PinWrite>
     1b8:	00 00       	nop
     1ba:	00 00       	nop
     1bc:	0f 90       	pop	r0
     1be:	df 91       	pop	r29
     1c0:	cf 91       	pop	r28
     1c2:	08 95       	ret

000001c4 <Led_Tog>:
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29
     1c8:	1f 92       	push	r1
     1ca:	cd b7       	in	r28, 0x3d	; 61
     1cc:	de b7       	in	r29, 0x3e	; 62
     1ce:	89 83       	std	Y+1, r24	; 0x01
     1d0:	89 81       	ldd	r24, Y+1	; 0x01
     1d2:	88 2f       	mov	r24, r24
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	80 32       	cpi	r24, 0x20	; 32
     1d8:	91 05       	cpc	r25, r1
     1da:	91 f0       	breq	.+36     	; 0x200 <Led_Tog+0x3c>
     1dc:	81 32       	cpi	r24, 0x21	; 33
     1de:	91 05       	cpc	r25, r1
     1e0:	1c f4       	brge	.+6      	; 0x1e8 <Led_Tog+0x24>
     1e2:	40 97       	sbiw	r24, 0x10	; 16
     1e4:	41 f0       	breq	.+16     	; 0x1f6 <Led_Tog+0x32>
     1e6:	1b c0       	rjmp	.+54     	; 0x21e <Led_Tog+0x5a>
     1e8:	80 34       	cpi	r24, 0x40	; 64
     1ea:	91 05       	cpc	r25, r1
     1ec:	71 f0       	breq	.+28     	; 0x20a <Led_Tog+0x46>
     1ee:	80 38       	cpi	r24, 0x80	; 128
     1f0:	91 05       	cpc	r25, r1
     1f2:	81 f0       	breq	.+32     	; 0x214 <Led_Tog+0x50>
     1f4:	14 c0       	rjmp	.+40     	; 0x21e <Led_Tog+0x5a>
     1f6:	60 e1       	ldi	r22, 0x10	; 16
     1f8:	81 e0       	ldi	r24, 0x01	; 1
     1fa:	0e 94 78 04 	call	0x8f0	; 0x8f0 <Gpio_PinToggle>
     1fe:	0f c0       	rjmp	.+30     	; 0x21e <Led_Tog+0x5a>
     200:	60 e2       	ldi	r22, 0x20	; 32
     202:	81 e0       	ldi	r24, 0x01	; 1
     204:	0e 94 78 04 	call	0x8f0	; 0x8f0 <Gpio_PinToggle>
     208:	0a c0       	rjmp	.+20     	; 0x21e <Led_Tog+0x5a>
     20a:	60 e4       	ldi	r22, 0x40	; 64
     20c:	81 e0       	ldi	r24, 0x01	; 1
     20e:	0e 94 78 04 	call	0x8f0	; 0x8f0 <Gpio_PinToggle>
     212:	05 c0       	rjmp	.+10     	; 0x21e <Led_Tog+0x5a>
     214:	60 e8       	ldi	r22, 0x80	; 128
     216:	81 e0       	ldi	r24, 0x01	; 1
     218:	0e 94 78 04 	call	0x8f0	; 0x8f0 <Gpio_PinToggle>
     21c:	00 00       	nop
     21e:	00 00       	nop
     220:	0f 90       	pop	r0
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	08 95       	ret

00000228 <TimerSysticCallback>:
 * Function : TimerSysticCallback
 * Description: this function is Called by the ISR to Update the System Ticks
 * @return void 
 */
static void TimerSysticCallback(void)
{
     228:	cf 93       	push	r28
     22a:	df 93       	push	r29
     22c:	cd b7       	in	r28, 0x3d	; 61
     22e:	de b7       	in	r29, 0x3e	; 62
	Systick++;
     230:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <Systick>
     234:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <Systick+0x1>
     238:	01 96       	adiw	r24, 0x01	; 1
     23a:	90 93 93 00 	sts	0x0093, r25	; 0x800093 <Systick+0x1>
     23e:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <Systick>
	if (Systick == MAX_SYSTICK_VALUS)
     242:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <Systick>
     246:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <Systick+0x1>
     24a:	88 3e       	cpi	r24, 0xE8	; 232
     24c:	9d 4f       	sbci	r25, 0xFD	; 253
     24e:	31 f4       	brne	.+12     	; 0x25c <TimerSysticCallback+0x34>
	{
		Systick = INITIAL_ONE;
     250:	81 e0       	ldi	r24, 0x01	; 1
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	90 93 93 00 	sts	0x0093, r25	; 0x800093 <Systick+0x1>
     258:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <Systick>
	}else
	{
		//Do Nothing
	}
}
     25c:	00 00       	nop
     25e:	df 91       	pop	r29
     260:	cf 91       	pop	r28
     262:	08 95       	ret

00000264 <Sos_Init>:
 * Function : Sos_Init
 * Description: this function is to initialize the SOS
 * @return Status: of the initialization according to the Error handling macros 
 */
EnumSOSError_type Sos_Init(void)
{
     264:	cf 93       	push	r28
     266:	df 93       	push	r29
     268:	00 d0       	rcall	.+0      	; 0x26a <Sos_Init+0x6>
     26a:	00 d0       	rcall	.+0      	; 0x26c <Sos_Init+0x8>
     26c:	00 d0       	rcall	.+0      	; 0x26e <Sos_Init+0xa>
     26e:	cd b7       	in	r28, 0x3d	; 61
     270:	de b7       	in	r29, 0x3e	; 62
	uint8 index;
	EnumSOSError_type API_State = OK_T;
     272:	1a 82       	std	Y+2, r1	; 0x02
	Systick = INITIAL_ONE;
     274:	81 e0       	ldi	r24, 0x01	; 1
     276:	90 e0       	ldi	r25, 0x00	; 0
     278:	90 93 93 00 	sts	0x0093, r25	; 0x800093 <Systick+0x1>
     27c:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <Systick>
	uint32 TimerCount_Time;
	
	/* Enable the Global Interrupt */
	Interrupts_On();
     280:	0e 94 c3 04 	call	0x986	; 0x986 <Interrupts_On>
	
	/* Set the Sleep Mode To Idle */
	set_sleep_mode(SLEEP_MODE_IDLE);
     284:	85 e5       	ldi	r24, 0x55	; 85
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	25 e5       	ldi	r18, 0x55	; 85
     28a:	30 e0       	ldi	r19, 0x00	; 0
     28c:	f9 01       	movw	r30, r18
     28e:	20 81       	ld	r18, Z
     290:	2f 78       	andi	r18, 0x8F	; 143
     292:	fc 01       	movw	r30, r24
     294:	20 83       	st	Z, r18

	/* Set the Systick of the Timer ISR */
	TimerCount_Time = MILLISECONSD_TO_MICROSECONSD_FACTOR * SYSTEM_TICK_MS;
     296:	88 ee       	ldi	r24, 0xE8	; 232
     298:	93 e0       	ldi	r25, 0x03	; 3
     29a:	a0 e0       	ldi	r26, 0x00	; 0
     29c:	b0 e0       	ldi	r27, 0x00	; 0
     29e:	8b 83       	std	Y+3, r24	; 0x03
     2a0:	9c 83       	std	Y+4, r25	; 0x04
     2a2:	ad 83       	std	Y+5, r26	; 0x05
     2a4:	be 83       	std	Y+6, r27	; 0x06
	
	/* Set the timer Call Back Value */
	Timers_SetCallBack(TimerSysticCallback);
     2a6:	84 e1       	ldi	r24, 0x14	; 20
     2a8:	91 e0       	ldi	r25, 0x01	; 1
     2aa:	0e 94 1b 08 	call	0x1036	; 0x1036 <Timers_SetCallBack>
	
	/* Initialize the Buffer used in the SOS */
	for(index = INITIAL_ZERO; index < SOS_MAX_NUMBER_OF_TASKS ; index++)
     2ae:	19 82       	std	Y+1, r1	; 0x01
     2b0:	3d c0       	rjmp	.+122    	; 0x32c <Sos_Init+0xc8>
	{
		StrArrOfTasks[index].Periodicity = INITIAL_ZERO;
     2b2:	89 81       	ldd	r24, Y+1	; 0x01
     2b4:	28 2f       	mov	r18, r24
     2b6:	30 e0       	ldi	r19, 0x00	; 0
     2b8:	c9 01       	movw	r24, r18
     2ba:	88 0f       	add	r24, r24
     2bc:	99 1f       	adc	r25, r25
     2be:	82 0f       	add	r24, r18
     2c0:	93 1f       	adc	r25, r19
     2c2:	88 0f       	add	r24, r24
     2c4:	99 1f       	adc	r25, r25
     2c6:	8f 58       	subi	r24, 0x8F	; 143
     2c8:	9f 4f       	sbci	r25, 0xFF	; 255
     2ca:	fc 01       	movw	r30, r24
     2cc:	11 82       	std	Z+1, r1	; 0x01
     2ce:	10 82       	st	Z, r1
		StrArrOfTasks[index].Priority = INITIAL_ZERO;
     2d0:	89 81       	ldd	r24, Y+1	; 0x01
     2d2:	28 2f       	mov	r18, r24
     2d4:	30 e0       	ldi	r19, 0x00	; 0
     2d6:	c9 01       	movw	r24, r18
     2d8:	88 0f       	add	r24, r24
     2da:	99 1f       	adc	r25, r25
     2dc:	82 0f       	add	r24, r18
     2de:	93 1f       	adc	r25, r19
     2e0:	88 0f       	add	r24, r24
     2e2:	99 1f       	adc	r25, r25
     2e4:	80 59       	subi	r24, 0x90	; 144
     2e6:	9f 4f       	sbci	r25, 0xFF	; 255
     2e8:	fc 01       	movw	r30, r24
     2ea:	10 82       	st	Z, r1
		StrArrOfTasks[index].TaskState = TaskDormant;
     2ec:	89 81       	ldd	r24, Y+1	; 0x01
     2ee:	28 2f       	mov	r18, r24
     2f0:	30 e0       	ldi	r19, 0x00	; 0
     2f2:	c9 01       	movw	r24, r18
     2f4:	88 0f       	add	r24, r24
     2f6:	99 1f       	adc	r25, r25
     2f8:	82 0f       	add	r24, r18
     2fa:	93 1f       	adc	r25, r19
     2fc:	88 0f       	add	r24, r24
     2fe:	99 1f       	adc	r25, r25
     300:	8d 58       	subi	r24, 0x8D	; 141
     302:	9f 4f       	sbci	r25, 0xFF	; 255
     304:	fc 01       	movw	r30, r24
     306:	10 82       	st	Z, r1
		StrArrOfTasks[index].PtrTask = NULL;
     308:	89 81       	ldd	r24, Y+1	; 0x01
     30a:	28 2f       	mov	r18, r24
     30c:	30 e0       	ldi	r19, 0x00	; 0
     30e:	c9 01       	movw	r24, r18
     310:	88 0f       	add	r24, r24
     312:	99 1f       	adc	r25, r25
     314:	82 0f       	add	r24, r18
     316:	93 1f       	adc	r25, r19
     318:	88 0f       	add	r24, r24
     31a:	99 1f       	adc	r25, r25
     31c:	82 59       	subi	r24, 0x92	; 146
     31e:	9f 4f       	sbci	r25, 0xFF	; 255
     320:	fc 01       	movw	r30, r24
     322:	11 82       	std	Z+1, r1	; 0x01
     324:	10 82       	st	Z, r1
	
	/* Set the timer Call Back Value */
	Timers_SetCallBack(TimerSysticCallback);
	
	/* Initialize the Buffer used in the SOS */
	for(index = INITIAL_ZERO; index < SOS_MAX_NUMBER_OF_TASKS ; index++)
     326:	89 81       	ldd	r24, Y+1	; 0x01
     328:	8f 5f       	subi	r24, 0xFF	; 255
     32a:	89 83       	std	Y+1, r24	; 0x01
     32c:	89 81       	ldd	r24, Y+1	; 0x01
     32e:	86 30       	cpi	r24, 0x06	; 6
     330:	08 f4       	brcc	.+2      	; 0x334 <Sos_Init+0xd0>
     332:	bf cf       	rjmp	.-130    	; 0x2b2 <Sos_Init+0x4e>
		/* Set the default resolution  */
		Timers_SetCounter(TIMER_0,TimerCount_Time);
		break;
		case TIMER_1:
		/* Initialize the Timer Used  */
		Timers_Init(&timer1_cfg_s);
     334:	83 e6       	ldi	r24, 0x63	; 99
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <Timers_Init>
		
		/* Set the default resolution  */
		Timers_SetCounter(TIMER_1,TimerCount_Time);
     33c:	8b 81       	ldd	r24, Y+3	; 0x03
     33e:	9c 81       	ldd	r25, Y+4	; 0x04
     340:	ad 81       	ldd	r26, Y+5	; 0x05
     342:	be 81       	ldd	r27, Y+6	; 0x06
     344:	ac 01       	movw	r20, r24
     346:	bd 01       	movw	r22, r26
     348:	81 e0       	ldi	r24, 0x01	; 1
     34a:	0e 94 4c 06 	call	0xc98	; 0xc98 <Timers_SetCounter>
		break;
     34e:	00 00       	nop
		break;
		default:
		API_State = ERROR_INVALID_INPUT;
		break;
	}
	return API_State;
     350:	8a 81       	ldd	r24, Y+2	; 0x02
}
     352:	26 96       	adiw	r28, 0x06	; 6
     354:	0f b6       	in	r0, 0x3f	; 63
     356:	f8 94       	cli
     358:	de bf       	out	0x3e, r29	; 62
     35a:	0f be       	out	0x3f, r0	; 63
     35c:	cd bf       	out	0x3d, r28	; 61
     35e:	df 91       	pop	r29
     360:	cf 91       	pop	r28
     362:	08 95       	ret

00000364 <Sos_Create_Task>:
					i/p: The periodicity of the Task
	Note : The Stable range of the Task is in range [5 to 2000 Systicks]
 * @return EnmTMUError_t: the status of the function according to the Error handling Enum 
 */
EnumSOSError_type Sos_Create_Task(v_PtrFunc_v_type PtrFunc,uint8 priority, uint16 periodicity)
{
     364:	cf 93       	push	r28
     366:	df 93       	push	r29
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	27 97       	sbiw	r28, 0x07	; 7
     36e:	0f b6       	in	r0, 0x3f	; 63
     370:	f8 94       	cli
     372:	de bf       	out	0x3e, r29	; 62
     374:	0f be       	out	0x3f, r0	; 63
     376:	cd bf       	out	0x3d, r28	; 61
     378:	9c 83       	std	Y+4, r25	; 0x04
     37a:	8b 83       	std	Y+3, r24	; 0x03
     37c:	6d 83       	std	Y+5, r22	; 0x05
     37e:	5f 83       	std	Y+7, r21	; 0x07
     380:	4e 83       	std	Y+6, r20	; 0x06
	EnumSOSError_type API_State = OK_T;
     382:	19 82       	std	Y+1, r1	; 0x01
	uint8 index;
	/* Protect from NUll pointer */ 
	if ( NULL != PtrFunc)
     384:	8b 81       	ldd	r24, Y+3	; 0x03
     386:	9c 81       	ldd	r25, Y+4	; 0x04
     388:	89 2b       	or	r24, r25
     38a:	09 f4       	brne	.+2      	; 0x38e <Sos_Create_Task+0x2a>
     38c:	73 c0       	rjmp	.+230    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
	{   /* Loop Through the Array of Tasks */ 
		for (index = INITIAL_ZERO ; index < SOS_MAX_NUMBER_OF_TASKS ; index++)
     38e:	1a 82       	std	Y+2, r1	; 0x02
     390:	6c c0       	rjmp	.+216    	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
		{	 /* Find a task place that hasn't been Reserved by another task */ 
			if (StrArrOfTasks[index].PtrTask == NULL)
     392:	8a 81       	ldd	r24, Y+2	; 0x02
     394:	28 2f       	mov	r18, r24
     396:	30 e0       	ldi	r19, 0x00	; 0
     398:	c9 01       	movw	r24, r18
     39a:	88 0f       	add	r24, r24
     39c:	99 1f       	adc	r25, r25
     39e:	82 0f       	add	r24, r18
     3a0:	93 1f       	adc	r25, r19
     3a2:	88 0f       	add	r24, r24
     3a4:	99 1f       	adc	r25, r25
     3a6:	82 59       	subi	r24, 0x92	; 146
     3a8:	9f 4f       	sbci	r25, 0xFF	; 255
     3aa:	fc 01       	movw	r30, r24
     3ac:	80 81       	ld	r24, Z
     3ae:	91 81       	ldd	r25, Z+1	; 0x01
     3b0:	89 2b       	or	r24, r25
     3b2:	09 f0       	breq	.+2      	; 0x3b6 <Sos_Create_Task+0x52>
     3b4:	55 c0       	rjmp	.+170    	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
			{
				/* Set the Entered Values to the Empty Space in the Task's Array*/
				StrArrOfTasks[index].PtrTask = PtrFunc;
     3b6:	8a 81       	ldd	r24, Y+2	; 0x02
     3b8:	28 2f       	mov	r18, r24
     3ba:	30 e0       	ldi	r19, 0x00	; 0
     3bc:	c9 01       	movw	r24, r18
     3be:	88 0f       	add	r24, r24
     3c0:	99 1f       	adc	r25, r25
     3c2:	82 0f       	add	r24, r18
     3c4:	93 1f       	adc	r25, r19
     3c6:	88 0f       	add	r24, r24
     3c8:	99 1f       	adc	r25, r25
     3ca:	82 59       	subi	r24, 0x92	; 146
     3cc:	9f 4f       	sbci	r25, 0xFF	; 255
     3ce:	2b 81       	ldd	r18, Y+3	; 0x03
     3d0:	3c 81       	ldd	r19, Y+4	; 0x04
     3d2:	fc 01       	movw	r30, r24
     3d4:	31 83       	std	Z+1, r19	; 0x01
     3d6:	20 83       	st	Z, r18
				StrArrOfTasks[index].Periodicity = periodicity;
     3d8:	8a 81       	ldd	r24, Y+2	; 0x02
     3da:	28 2f       	mov	r18, r24
     3dc:	30 e0       	ldi	r19, 0x00	; 0
     3de:	c9 01       	movw	r24, r18
     3e0:	88 0f       	add	r24, r24
     3e2:	99 1f       	adc	r25, r25
     3e4:	82 0f       	add	r24, r18
     3e6:	93 1f       	adc	r25, r19
     3e8:	88 0f       	add	r24, r24
     3ea:	99 1f       	adc	r25, r25
     3ec:	8f 58       	subi	r24, 0x8F	; 143
     3ee:	9f 4f       	sbci	r25, 0xFF	; 255
     3f0:	2e 81       	ldd	r18, Y+6	; 0x06
     3f2:	3f 81       	ldd	r19, Y+7	; 0x07
     3f4:	fc 01       	movw	r30, r24
     3f6:	31 83       	std	Z+1, r19	; 0x01
     3f8:	20 83       	st	Z, r18
				StrArrOfTasks[index].TaskState = TaskReady;
     3fa:	8a 81       	ldd	r24, Y+2	; 0x02
     3fc:	28 2f       	mov	r18, r24
     3fe:	30 e0       	ldi	r19, 0x00	; 0
     400:	c9 01       	movw	r24, r18
     402:	88 0f       	add	r24, r24
     404:	99 1f       	adc	r25, r25
     406:	82 0f       	add	r24, r18
     408:	93 1f       	adc	r25, r19
     40a:	88 0f       	add	r24, r24
     40c:	99 1f       	adc	r25, r25
     40e:	8d 58       	subi	r24, 0x8D	; 141
     410:	9f 4f       	sbci	r25, 0xFF	; 255
     412:	21 e0       	ldi	r18, 0x01	; 1
     414:	fc 01       	movw	r30, r24
     416:	20 83       	st	Z, r18
				
				/* Check If the entered priority is larger than the maximum one >> Set it to the Max */
				if ( priority <= SOS_MAX_PRIORITY)
     418:	8d 81       	ldd	r24, Y+5	; 0x05
     41a:	87 30       	cpi	r24, 0x07	; 7
     41c:	80 f4       	brcc	.+32     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
				{
					StrArrOfTasks[index].Priority = priority;
     41e:	8a 81       	ldd	r24, Y+2	; 0x02
     420:	28 2f       	mov	r18, r24
     422:	30 e0       	ldi	r19, 0x00	; 0
     424:	c9 01       	movw	r24, r18
     426:	88 0f       	add	r24, r24
     428:	99 1f       	adc	r25, r25
     42a:	82 0f       	add	r24, r18
     42c:	93 1f       	adc	r25, r19
     42e:	88 0f       	add	r24, r24
     430:	99 1f       	adc	r25, r25
     432:	80 59       	subi	r24, 0x90	; 144
     434:	9f 4f       	sbci	r25, 0xFF	; 255
     436:	2d 81       	ldd	r18, Y+5	; 0x05
     438:	fc 01       	movw	r30, r24
     43a:	20 83       	st	Z, r18
     43c:	0f c0       	rjmp	.+30     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
				}
				else
				{
					StrArrOfTasks[index].Priority = SOS_MAX_PRIORITY;
     43e:	8a 81       	ldd	r24, Y+2	; 0x02
     440:	28 2f       	mov	r18, r24
     442:	30 e0       	ldi	r19, 0x00	; 0
     444:	c9 01       	movw	r24, r18
     446:	88 0f       	add	r24, r24
     448:	99 1f       	adc	r25, r25
     44a:	82 0f       	add	r24, r18
     44c:	93 1f       	adc	r25, r19
     44e:	88 0f       	add	r24, r24
     450:	99 1f       	adc	r25, r25
     452:	80 59       	subi	r24, 0x90	; 144
     454:	9f 4f       	sbci	r25, 0xFF	; 255
     456:	26 e0       	ldi	r18, 0x06	; 6
     458:	fc 01       	movw	r30, r24
     45a:	20 83       	st	Z, r18
				}
				API_State = OK_T;
     45c:	19 82       	std	Y+1, r1	; 0x01
				break;
     45e:	0c c0       	rjmp	.+24     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
			}
			else
			{
				API_State = ERROR_MAX_TASKS_NUMBER_REACHED;
     460:	83 e0       	ldi	r24, 0x03	; 3
     462:	89 83       	std	Y+1, r24	; 0x01
	EnumSOSError_type API_State = OK_T;
	uint8 index;
	/* Protect from NUll pointer */ 
	if ( NULL != PtrFunc)
	{   /* Loop Through the Array of Tasks */ 
		for (index = INITIAL_ZERO ; index < SOS_MAX_NUMBER_OF_TASKS ; index++)
     464:	8a 81       	ldd	r24, Y+2	; 0x02
     466:	8f 5f       	subi	r24, 0xFF	; 255
     468:	8a 83       	std	Y+2, r24	; 0x02
     46a:	8a 81       	ldd	r24, Y+2	; 0x02
     46c:	86 30       	cpi	r24, 0x06	; 6
     46e:	08 f4       	brcc	.+2      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
     470:	90 cf       	rjmp	.-224    	; 0x392 <Sos_Create_Task+0x2e>
     472:	02 c0       	rjmp	.+4      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
			}
		}
	}
	else
	{
		API_State = ERROR_NULL_POINTER;
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	89 83       	std	Y+1, r24	; 0x01
	}
	return API_State;
     478:	89 81       	ldd	r24, Y+1	; 0x01
}
     47a:	27 96       	adiw	r28, 0x07	; 7
     47c:	0f b6       	in	r0, 0x3f	; 63
     47e:	f8 94       	cli
     480:	de bf       	out	0x3e, r29	; 62
     482:	0f be       	out	0x3f, r0	; 63
     484:	cd bf       	out	0x3d, r28	; 61
     486:	df 91       	pop	r29
     488:	cf 91       	pop	r28
     48a:	08 95       	ret

0000048c <Sos_Run>:
 * Function : Sos_Run
 * Description: this function is to run the System Scheduler (Algorithm)
 * @return void
 */
void Sos_Run(void)
{
     48c:	cf 93       	push	r28
     48e:	df 93       	push	r29
     490:	00 d0       	rcall	.+0      	; 0x492 <Sos_Run+0x6>
     492:	1f 92       	push	r1
     494:	cd b7       	in	r28, 0x3d	; 61
     496:	de b7       	in	r29, 0x3e	; 62
	sint8 index = INITIAL_ZERO;
     498:	19 82       	std	Y+1, r1	; 0x01
	sint8 MaxPriorityIndex = INITIAL_MINUS_ONE;
     49a:	8f ef       	ldi	r24, 0xFF	; 255
     49c:	8a 83       	std	Y+2, r24	; 0x02
	sint8 MaxPriority = INITIAL_ZERO;
     49e:	1b 82       	std	Y+3, r1	; 0x03
	/* Start the Timer Used  */
	Timers_Start(SOS_TIMER);
     4a0:	81 e0       	ldi	r24, 0x01	; 1
     4a2:	0e 94 dd 07 	call	0xfba	; 0xfba <Timers_Start>
	while(TRUE)
	{	
		for (index = INITIAL_ZERO; index < SOS_MAX_NUMBER_OF_TASKS; index++)
     4a6:	19 82       	std	Y+1, r1	; 0x01
     4a8:	98 c0       	rjmp	.+304    	; 0x5da <Sos_Run+0x14e>
		{
				switch( (StrArrOfTasks[index].TaskState) )
     4aa:	89 81       	ldd	r24, Y+1	; 0x01
     4ac:	28 2f       	mov	r18, r24
     4ae:	88 0f       	add	r24, r24
     4b0:	33 0b       	sbc	r19, r19
     4b2:	c9 01       	movw	r24, r18
     4b4:	88 0f       	add	r24, r24
     4b6:	99 1f       	adc	r25, r25
     4b8:	82 0f       	add	r24, r18
     4ba:	93 1f       	adc	r25, r19
     4bc:	88 0f       	add	r24, r24
     4be:	99 1f       	adc	r25, r25
     4c0:	8d 58       	subi	r24, 0x8D	; 141
     4c2:	9f 4f       	sbci	r25, 0xFF	; 255
     4c4:	fc 01       	movw	r30, r24
     4c6:	80 81       	ld	r24, Z
     4c8:	88 2f       	mov	r24, r24
     4ca:	90 e0       	ldi	r25, 0x00	; 0
     4cc:	81 30       	cpi	r24, 0x01	; 1
     4ce:	91 05       	cpc	r25, r1
     4d0:	71 f0       	breq	.+28     	; 0x4ee <Sos_Run+0x62>
     4d2:	82 30       	cpi	r24, 0x02	; 2
     4d4:	91 05       	cpc	r25, r1
     4d6:	24 f4       	brge	.+8      	; 0x4e0 <Sos_Run+0x54>
     4d8:	89 2b       	or	r24, r25
     4da:	09 f4       	brne	.+2      	; 0x4de <Sos_Run+0x52>
     4dc:	76 c0       	rjmp	.+236    	; 0x5ca <Sos_Run+0x13e>
						{
							//Do nothing
						}
						break;
					default:
						break;
     4de:	7a c0       	rjmp	.+244    	; 0x5d4 <Sos_Run+0x148>
	Timers_Start(SOS_TIMER);
	while(TRUE)
	{	
		for (index = INITIAL_ZERO; index < SOS_MAX_NUMBER_OF_TASKS; index++)
		{
				switch( (StrArrOfTasks[index].TaskState) )
     4e0:	82 30       	cpi	r24, 0x02	; 2
     4e2:	91 05       	cpc	r25, r1
     4e4:	81 f1       	breq	.+96     	; 0x546 <Sos_Run+0xba>
     4e6:	03 97       	sbiw	r24, 0x03	; 3
     4e8:	09 f4       	brne	.+2      	; 0x4ec <Sos_Run+0x60>
     4ea:	41 c0       	rjmp	.+130    	; 0x56e <Sos_Run+0xe2>
						{
							//Do nothing
						}
						break;
					default:
						break;
     4ec:	73 c0       	rjmp	.+230    	; 0x5d4 <Sos_Run+0x148>
				{
					case TaskDormant:
						//Do Nothing
						break;
					case TaskReady:
						if( MaxPriority < StrArrOfTasks[index].Priority )
     4ee:	8b 81       	ldd	r24, Y+3	; 0x03
     4f0:	48 2f       	mov	r20, r24
     4f2:	88 0f       	add	r24, r24
     4f4:	55 0b       	sbc	r21, r21
     4f6:	89 81       	ldd	r24, Y+1	; 0x01
     4f8:	28 2f       	mov	r18, r24
     4fa:	88 0f       	add	r24, r24
     4fc:	33 0b       	sbc	r19, r19
     4fe:	c9 01       	movw	r24, r18
     500:	88 0f       	add	r24, r24
     502:	99 1f       	adc	r25, r25
     504:	82 0f       	add	r24, r18
     506:	93 1f       	adc	r25, r19
     508:	88 0f       	add	r24, r24
     50a:	99 1f       	adc	r25, r25
     50c:	80 59       	subi	r24, 0x90	; 144
     50e:	9f 4f       	sbci	r25, 0xFF	; 255
     510:	fc 01       	movw	r30, r24
     512:	80 81       	ld	r24, Z
     514:	88 2f       	mov	r24, r24
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	48 17       	cp	r20, r24
     51a:	59 07       	cpc	r21, r25
     51c:	0c f0       	brlt	.+2      	; 0x520 <Sos_Run+0x94>
     51e:	57 c0       	rjmp	.+174    	; 0x5ce <Sos_Run+0x142>
						{
							MaxPriority = StrArrOfTasks[index].Priority;
     520:	89 81       	ldd	r24, Y+1	; 0x01
     522:	28 2f       	mov	r18, r24
     524:	88 0f       	add	r24, r24
     526:	33 0b       	sbc	r19, r19
     528:	c9 01       	movw	r24, r18
     52a:	88 0f       	add	r24, r24
     52c:	99 1f       	adc	r25, r25
     52e:	82 0f       	add	r24, r18
     530:	93 1f       	adc	r25, r19
     532:	88 0f       	add	r24, r24
     534:	99 1f       	adc	r25, r25
     536:	80 59       	subi	r24, 0x90	; 144
     538:	9f 4f       	sbci	r25, 0xFF	; 255
     53a:	fc 01       	movw	r30, r24
     53c:	80 81       	ld	r24, Z
     53e:	8b 83       	std	Y+3, r24	; 0x03
							MaxPriorityIndex = index;
     540:	89 81       	ldd	r24, Y+1	; 0x01
     542:	8a 83       	std	Y+2, r24	; 0x02
						}
						else
						{
							//Do Nothing
						}
						break;
     544:	44 c0       	rjmp	.+136    	; 0x5ce <Sos_Run+0x142>
					case TaskRunning:
						/* Return the State of the Task to waiting */
						StrArrOfTasks[index].TaskState = TaskWaiting;
     546:	89 81       	ldd	r24, Y+1	; 0x01
     548:	28 2f       	mov	r18, r24
     54a:	88 0f       	add	r24, r24
     54c:	33 0b       	sbc	r19, r19
     54e:	c9 01       	movw	r24, r18
     550:	88 0f       	add	r24, r24
     552:	99 1f       	adc	r25, r25
     554:	82 0f       	add	r24, r18
     556:	93 1f       	adc	r25, r19
     558:	88 0f       	add	r24, r24
     55a:	99 1f       	adc	r25, r25
     55c:	8d 58       	subi	r24, 0x8D	; 141
     55e:	9f 4f       	sbci	r25, 0xFF	; 255
     560:	23 e0       	ldi	r18, 0x03	; 3
     562:	fc 01       	movw	r30, r24
     564:	20 83       	st	Z, r18
						index = index - INITIAL_ONE; 
     566:	89 81       	ldd	r24, Y+1	; 0x01
     568:	81 50       	subi	r24, 0x01	; 1
     56a:	89 83       	std	Y+1, r24	; 0x01
						break;
     56c:	33 c0       	rjmp	.+102    	; 0x5d4 <Sos_Run+0x148>
					case TaskWaiting:
						if( (Systick % StrArrOfTasks[index].Periodicity) == FALSE)
     56e:	40 91 92 00 	lds	r20, 0x0092	; 0x800092 <Systick>
     572:	50 91 93 00 	lds	r21, 0x0093	; 0x800093 <Systick+0x1>
     576:	89 81       	ldd	r24, Y+1	; 0x01
     578:	28 2f       	mov	r18, r24
     57a:	88 0f       	add	r24, r24
     57c:	33 0b       	sbc	r19, r19
     57e:	c9 01       	movw	r24, r18
     580:	88 0f       	add	r24, r24
     582:	99 1f       	adc	r25, r25
     584:	82 0f       	add	r24, r18
     586:	93 1f       	adc	r25, r19
     588:	88 0f       	add	r24, r24
     58a:	99 1f       	adc	r25, r25
     58c:	8f 58       	subi	r24, 0x8F	; 143
     58e:	9f 4f       	sbci	r25, 0xFF	; 255
     590:	fc 01       	movw	r30, r24
     592:	20 81       	ld	r18, Z
     594:	31 81       	ldd	r19, Z+1	; 0x01
     596:	ca 01       	movw	r24, r20
     598:	b9 01       	movw	r22, r18
     59a:	0e 94 82 08 	call	0x1104	; 0x1104 <__udivmodhi4>
     59e:	89 2b       	or	r24, r25
     5a0:	c1 f4       	brne	.+48     	; 0x5d2 <Sos_Run+0x146>
						{
							/* Return the State of the Task to Ready */
							StrArrOfTasks[index].TaskState = TaskReady;
     5a2:	89 81       	ldd	r24, Y+1	; 0x01
     5a4:	28 2f       	mov	r18, r24
     5a6:	88 0f       	add	r24, r24
     5a8:	33 0b       	sbc	r19, r19
     5aa:	c9 01       	movw	r24, r18
     5ac:	88 0f       	add	r24, r24
     5ae:	99 1f       	adc	r25, r25
     5b0:	82 0f       	add	r24, r18
     5b2:	93 1f       	adc	r25, r19
     5b4:	88 0f       	add	r24, r24
     5b6:	99 1f       	adc	r25, r25
     5b8:	8d 58       	subi	r24, 0x8D	; 141
     5ba:	9f 4f       	sbci	r25, 0xFF	; 255
     5bc:	21 e0       	ldi	r18, 0x01	; 1
     5be:	fc 01       	movw	r30, r24
     5c0:	20 83       	st	Z, r18
							index = index - INITIAL_ONE;
     5c2:	89 81       	ldd	r24, Y+1	; 0x01
     5c4:	81 50       	subi	r24, 0x01	; 1
     5c6:	89 83       	std	Y+1, r24	; 0x01
						}
						else
						{
							//Do nothing
						}
						break;
     5c8:	04 c0       	rjmp	.+8      	; 0x5d2 <Sos_Run+0x146>
		{
				switch( (StrArrOfTasks[index].TaskState) )
				{
					case TaskDormant:
						//Do Nothing
						break;
     5ca:	00 00       	nop
     5cc:	03 c0       	rjmp	.+6      	; 0x5d4 <Sos_Run+0x148>
						}
						else
						{
							//Do Nothing
						}
						break;
     5ce:	00 00       	nop
     5d0:	01 c0       	rjmp	.+2      	; 0x5d4 <Sos_Run+0x148>
						}
						else
						{
							//Do nothing
						}
						break;
     5d2:	00 00       	nop
	sint8 MaxPriority = INITIAL_ZERO;
	/* Start the Timer Used  */
	Timers_Start(SOS_TIMER);
	while(TRUE)
	{	
		for (index = INITIAL_ZERO; index < SOS_MAX_NUMBER_OF_TASKS; index++)
     5d4:	89 81       	ldd	r24, Y+1	; 0x01
     5d6:	8f 5f       	subi	r24, 0xFF	; 255
     5d8:	89 83       	std	Y+1, r24	; 0x01
     5da:	89 81       	ldd	r24, Y+1	; 0x01
     5dc:	86 30       	cpi	r24, 0x06	; 6
     5de:	0c f4       	brge	.+2      	; 0x5e2 <Sos_Run+0x156>
     5e0:	64 cf       	rjmp	.-312    	; 0x4aa <Sos_Run+0x1e>
					default:
						break;
				}
		}
		
		if(MaxPriorityIndex >= INITIAL_ZERO)
     5e2:	8a 81       	ldd	r24, Y+2	; 0x02
     5e4:	88 23       	and	r24, r24
     5e6:	2c f1       	brlt	.+74     	; 0x632 <Sos_Run+0x1a6>
		{
			StrArrOfTasks[MaxPriorityIndex].PtrTask();
     5e8:	8a 81       	ldd	r24, Y+2	; 0x02
     5ea:	28 2f       	mov	r18, r24
     5ec:	88 0f       	add	r24, r24
     5ee:	33 0b       	sbc	r19, r19
     5f0:	c9 01       	movw	r24, r18
     5f2:	88 0f       	add	r24, r24
     5f4:	99 1f       	adc	r25, r25
     5f6:	82 0f       	add	r24, r18
     5f8:	93 1f       	adc	r25, r19
     5fa:	88 0f       	add	r24, r24
     5fc:	99 1f       	adc	r25, r25
     5fe:	82 59       	subi	r24, 0x92	; 146
     600:	9f 4f       	sbci	r25, 0xFF	; 255
     602:	fc 01       	movw	r30, r24
     604:	80 81       	ld	r24, Z
     606:	91 81       	ldd	r25, Z+1	; 0x01
     608:	fc 01       	movw	r30, r24
     60a:	09 95       	icall
			StrArrOfTasks[MaxPriorityIndex].TaskState = TaskRunning;		
     60c:	8a 81       	ldd	r24, Y+2	; 0x02
     60e:	28 2f       	mov	r18, r24
     610:	88 0f       	add	r24, r24
     612:	33 0b       	sbc	r19, r19
     614:	c9 01       	movw	r24, r18
     616:	88 0f       	add	r24, r24
     618:	99 1f       	adc	r25, r25
     61a:	82 0f       	add	r24, r18
     61c:	93 1f       	adc	r25, r19
     61e:	88 0f       	add	r24, r24
     620:	99 1f       	adc	r25, r25
     622:	8d 58       	subi	r24, 0x8D	; 141
     624:	9f 4f       	sbci	r25, 0xFF	; 255
     626:	22 e0       	ldi	r18, 0x02	; 2
     628:	fc 01       	movw	r30, r24
     62a:	20 83       	st	Z, r18
			MaxPriorityIndex = INITIAL_MINUS_ONE;
     62c:	8f ef       	ldi	r24, 0xFF	; 255
     62e:	8a 83       	std	Y+2, r24	; 0x02
			MaxPriority = INITIAL_ZERO;
     630:	1b 82       	std	Y+3, r1	; 0x03
		}
		else
		{
			//Do Nothing
		}
		sleep_mode();
     632:	85 e5       	ldi	r24, 0x55	; 85
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	25 e5       	ldi	r18, 0x55	; 85
     638:	30 e0       	ldi	r19, 0x00	; 0
     63a:	f9 01       	movw	r30, r18
     63c:	20 81       	ld	r18, Z
     63e:	20 68       	ori	r18, 0x80	; 128
     640:	fc 01       	movw	r30, r24
     642:	20 83       	st	Z, r18
     644:	88 95       	sleep
     646:	85 e5       	ldi	r24, 0x55	; 85
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	25 e5       	ldi	r18, 0x55	; 85
     64c:	30 e0       	ldi	r19, 0x00	; 0
     64e:	f9 01       	movw	r30, r18
     650:	20 81       	ld	r18, Z
     652:	2f 77       	andi	r18, 0x7F	; 127
     654:	fc 01       	movw	r30, r24
     656:	20 83       	st	Z, r18
	}
     658:	26 cf       	rjmp	.-436    	; 0x4a6 <Sos_Run+0x1a>

0000065a <Gpio_PinDirection>:
     65a:	cf 93       	push	r28
     65c:	df 93       	push	r29
     65e:	00 d0       	rcall	.+0      	; 0x660 <Gpio_PinDirection+0x6>
     660:	1f 92       	push	r1
     662:	cd b7       	in	r28, 0x3d	; 61
     664:	de b7       	in	r29, 0x3e	; 62
     666:	89 83       	std	Y+1, r24	; 0x01
     668:	6a 83       	std	Y+2, r22	; 0x02
     66a:	4b 83       	std	Y+3, r20	; 0x03
     66c:	89 81       	ldd	r24, Y+1	; 0x01
     66e:	88 2f       	mov	r24, r24
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	81 30       	cpi	r24, 0x01	; 1
     674:	91 05       	cpc	r25, r1
     676:	81 f1       	breq	.+96     	; 0x6d8 <Gpio_PinDirection+0x7e>
     678:	82 30       	cpi	r24, 0x02	; 2
     67a:	91 05       	cpc	r25, r1
     67c:	1c f4       	brge	.+6      	; 0x684 <Gpio_PinDirection+0x2a>
     67e:	89 2b       	or	r24, r25
     680:	49 f0       	breq	.+18     	; 0x694 <Gpio_PinDirection+0x3a>
     682:	90 c0       	rjmp	.+288    	; 0x7a4 <Gpio_PinDirection+0x14a>
     684:	82 30       	cpi	r24, 0x02	; 2
     686:	91 05       	cpc	r25, r1
     688:	09 f4       	brne	.+2      	; 0x68c <Gpio_PinDirection+0x32>
     68a:	48 c0       	rjmp	.+144    	; 0x71c <Gpio_PinDirection+0xc2>
     68c:	03 97       	sbiw	r24, 0x03	; 3
     68e:	09 f4       	brne	.+2      	; 0x692 <Gpio_PinDirection+0x38>
     690:	67 c0       	rjmp	.+206    	; 0x760 <Gpio_PinDirection+0x106>
     692:	88 c0       	rjmp	.+272    	; 0x7a4 <Gpio_PinDirection+0x14a>
     694:	8b 81       	ldd	r24, Y+3	; 0x03
     696:	88 2f       	mov	r24, r24
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	00 97       	sbiw	r24, 0x00	; 0
     69c:	21 f0       	breq	.+8      	; 0x6a6 <Gpio_PinDirection+0x4c>
     69e:	8f 3f       	cpi	r24, 0xFF	; 255
     6a0:	91 05       	cpc	r25, r1
     6a2:	71 f0       	breq	.+28     	; 0x6c0 <Gpio_PinDirection+0x66>
     6a4:	7f c0       	rjmp	.+254    	; 0x7a4 <Gpio_PinDirection+0x14a>
     6a6:	8a e3       	ldi	r24, 0x3A	; 58
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	2a e3       	ldi	r18, 0x3A	; 58
     6ac:	30 e0       	ldi	r19, 0x00	; 0
     6ae:	f9 01       	movw	r30, r18
     6b0:	20 81       	ld	r18, Z
     6b2:	32 2f       	mov	r19, r18
     6b4:	2a 81       	ldd	r18, Y+2	; 0x02
     6b6:	20 95       	com	r18
     6b8:	23 23       	and	r18, r19
     6ba:	fc 01       	movw	r30, r24
     6bc:	20 83       	st	Z, r18
     6be:	0b c0       	rjmp	.+22     	; 0x6d6 <Gpio_PinDirection+0x7c>
     6c0:	8a e3       	ldi	r24, 0x3A	; 58
     6c2:	90 e0       	ldi	r25, 0x00	; 0
     6c4:	2a e3       	ldi	r18, 0x3A	; 58
     6c6:	30 e0       	ldi	r19, 0x00	; 0
     6c8:	f9 01       	movw	r30, r18
     6ca:	30 81       	ld	r19, Z
     6cc:	2a 81       	ldd	r18, Y+2	; 0x02
     6ce:	23 2b       	or	r18, r19
     6d0:	fc 01       	movw	r30, r24
     6d2:	20 83       	st	Z, r18
     6d4:	00 00       	nop
     6d6:	66 c0       	rjmp	.+204    	; 0x7a4 <Gpio_PinDirection+0x14a>
     6d8:	8b 81       	ldd	r24, Y+3	; 0x03
     6da:	88 2f       	mov	r24, r24
     6dc:	90 e0       	ldi	r25, 0x00	; 0
     6de:	00 97       	sbiw	r24, 0x00	; 0
     6e0:	21 f0       	breq	.+8      	; 0x6ea <Gpio_PinDirection+0x90>
     6e2:	8f 3f       	cpi	r24, 0xFF	; 255
     6e4:	91 05       	cpc	r25, r1
     6e6:	71 f0       	breq	.+28     	; 0x704 <Gpio_PinDirection+0xaa>
     6e8:	5d c0       	rjmp	.+186    	; 0x7a4 <Gpio_PinDirection+0x14a>
     6ea:	87 e3       	ldi	r24, 0x37	; 55
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	27 e3       	ldi	r18, 0x37	; 55
     6f0:	30 e0       	ldi	r19, 0x00	; 0
     6f2:	f9 01       	movw	r30, r18
     6f4:	20 81       	ld	r18, Z
     6f6:	32 2f       	mov	r19, r18
     6f8:	2a 81       	ldd	r18, Y+2	; 0x02
     6fa:	20 95       	com	r18
     6fc:	23 23       	and	r18, r19
     6fe:	fc 01       	movw	r30, r24
     700:	20 83       	st	Z, r18
     702:	0b c0       	rjmp	.+22     	; 0x71a <Gpio_PinDirection+0xc0>
     704:	87 e3       	ldi	r24, 0x37	; 55
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	27 e3       	ldi	r18, 0x37	; 55
     70a:	30 e0       	ldi	r19, 0x00	; 0
     70c:	f9 01       	movw	r30, r18
     70e:	30 81       	ld	r19, Z
     710:	2a 81       	ldd	r18, Y+2	; 0x02
     712:	23 2b       	or	r18, r19
     714:	fc 01       	movw	r30, r24
     716:	20 83       	st	Z, r18
     718:	00 00       	nop
     71a:	44 c0       	rjmp	.+136    	; 0x7a4 <Gpio_PinDirection+0x14a>
     71c:	8b 81       	ldd	r24, Y+3	; 0x03
     71e:	88 2f       	mov	r24, r24
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	00 97       	sbiw	r24, 0x00	; 0
     724:	21 f0       	breq	.+8      	; 0x72e <Gpio_PinDirection+0xd4>
     726:	8f 3f       	cpi	r24, 0xFF	; 255
     728:	91 05       	cpc	r25, r1
     72a:	71 f0       	breq	.+28     	; 0x748 <Gpio_PinDirection+0xee>
     72c:	3b c0       	rjmp	.+118    	; 0x7a4 <Gpio_PinDirection+0x14a>
     72e:	84 e3       	ldi	r24, 0x34	; 52
     730:	90 e0       	ldi	r25, 0x00	; 0
     732:	24 e3       	ldi	r18, 0x34	; 52
     734:	30 e0       	ldi	r19, 0x00	; 0
     736:	f9 01       	movw	r30, r18
     738:	20 81       	ld	r18, Z
     73a:	32 2f       	mov	r19, r18
     73c:	2a 81       	ldd	r18, Y+2	; 0x02
     73e:	20 95       	com	r18
     740:	23 23       	and	r18, r19
     742:	fc 01       	movw	r30, r24
     744:	20 83       	st	Z, r18
     746:	0b c0       	rjmp	.+22     	; 0x75e <Gpio_PinDirection+0x104>
     748:	84 e3       	ldi	r24, 0x34	; 52
     74a:	90 e0       	ldi	r25, 0x00	; 0
     74c:	24 e3       	ldi	r18, 0x34	; 52
     74e:	30 e0       	ldi	r19, 0x00	; 0
     750:	f9 01       	movw	r30, r18
     752:	30 81       	ld	r19, Z
     754:	2a 81       	ldd	r18, Y+2	; 0x02
     756:	23 2b       	or	r18, r19
     758:	fc 01       	movw	r30, r24
     75a:	20 83       	st	Z, r18
     75c:	00 00       	nop
     75e:	22 c0       	rjmp	.+68     	; 0x7a4 <Gpio_PinDirection+0x14a>
     760:	8b 81       	ldd	r24, Y+3	; 0x03
     762:	88 2f       	mov	r24, r24
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	00 97       	sbiw	r24, 0x00	; 0
     768:	21 f0       	breq	.+8      	; 0x772 <Gpio_PinDirection+0x118>
     76a:	8f 3f       	cpi	r24, 0xFF	; 255
     76c:	91 05       	cpc	r25, r1
     76e:	71 f0       	breq	.+28     	; 0x78c <Gpio_PinDirection+0x132>
     770:	18 c0       	rjmp	.+48     	; 0x7a2 <Gpio_PinDirection+0x148>
     772:	81 e3       	ldi	r24, 0x31	; 49
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	21 e3       	ldi	r18, 0x31	; 49
     778:	30 e0       	ldi	r19, 0x00	; 0
     77a:	f9 01       	movw	r30, r18
     77c:	20 81       	ld	r18, Z
     77e:	32 2f       	mov	r19, r18
     780:	2a 81       	ldd	r18, Y+2	; 0x02
     782:	20 95       	com	r18
     784:	23 23       	and	r18, r19
     786:	fc 01       	movw	r30, r24
     788:	20 83       	st	Z, r18
     78a:	0b c0       	rjmp	.+22     	; 0x7a2 <Gpio_PinDirection+0x148>
     78c:	81 e3       	ldi	r24, 0x31	; 49
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	21 e3       	ldi	r18, 0x31	; 49
     792:	30 e0       	ldi	r19, 0x00	; 0
     794:	f9 01       	movw	r30, r18
     796:	30 81       	ld	r19, Z
     798:	2a 81       	ldd	r18, Y+2	; 0x02
     79a:	23 2b       	or	r18, r19
     79c:	fc 01       	movw	r30, r24
     79e:	20 83       	st	Z, r18
     7a0:	00 00       	nop
     7a2:	00 00       	nop
     7a4:	00 00       	nop
     7a6:	0f 90       	pop	r0
     7a8:	0f 90       	pop	r0
     7aa:	0f 90       	pop	r0
     7ac:	df 91       	pop	r29
     7ae:	cf 91       	pop	r28
     7b0:	08 95       	ret

000007b2 <Gpio_PinWrite>:
     7b2:	cf 93       	push	r28
     7b4:	df 93       	push	r29
     7b6:	00 d0       	rcall	.+0      	; 0x7b8 <Gpio_PinWrite+0x6>
     7b8:	1f 92       	push	r1
     7ba:	cd b7       	in	r28, 0x3d	; 61
     7bc:	de b7       	in	r29, 0x3e	; 62
     7be:	89 83       	std	Y+1, r24	; 0x01
     7c0:	6a 83       	std	Y+2, r22	; 0x02
     7c2:	4b 83       	std	Y+3, r20	; 0x03
     7c4:	8b 81       	ldd	r24, Y+3	; 0x03
     7c6:	88 2f       	mov	r24, r24
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	00 97       	sbiw	r24, 0x00	; 0
     7cc:	09 f4       	brne	.+2      	; 0x7d0 <Gpio_PinWrite+0x1e>
     7ce:	42 c0       	rjmp	.+132    	; 0x854 <Gpio_PinWrite+0xa2>
     7d0:	01 97       	sbiw	r24, 0x01	; 1
     7d2:	09 f0       	breq	.+2      	; 0x7d6 <Gpio_PinWrite+0x24>
     7d4:	86 c0       	rjmp	.+268    	; 0x8e2 <__stack+0x83>
     7d6:	89 81       	ldd	r24, Y+1	; 0x01
     7d8:	88 2f       	mov	r24, r24
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	81 30       	cpi	r24, 0x01	; 1
     7de:	91 05       	cpc	r25, r1
     7e0:	b9 f0       	breq	.+46     	; 0x810 <Gpio_PinWrite+0x5e>
     7e2:	82 30       	cpi	r24, 0x02	; 2
     7e4:	91 05       	cpc	r25, r1
     7e6:	1c f4       	brge	.+6      	; 0x7ee <Gpio_PinWrite+0x3c>
     7e8:	89 2b       	or	r24, r25
     7ea:	39 f0       	breq	.+14     	; 0x7fa <Gpio_PinWrite+0x48>
     7ec:	7a c0       	rjmp	.+244    	; 0x8e2 <__stack+0x83>
     7ee:	82 30       	cpi	r24, 0x02	; 2
     7f0:	91 05       	cpc	r25, r1
     7f2:	c9 f0       	breq	.+50     	; 0x826 <Gpio_PinWrite+0x74>
     7f4:	03 97       	sbiw	r24, 0x03	; 3
     7f6:	11 f1       	breq	.+68     	; 0x83c <Gpio_PinWrite+0x8a>
     7f8:	74 c0       	rjmp	.+232    	; 0x8e2 <__stack+0x83>
     7fa:	8b e3       	ldi	r24, 0x3B	; 59
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	2b e3       	ldi	r18, 0x3B	; 59
     800:	30 e0       	ldi	r19, 0x00	; 0
     802:	f9 01       	movw	r30, r18
     804:	30 81       	ld	r19, Z
     806:	2a 81       	ldd	r18, Y+2	; 0x02
     808:	23 2b       	or	r18, r19
     80a:	fc 01       	movw	r30, r24
     80c:	20 83       	st	Z, r18
     80e:	21 c0       	rjmp	.+66     	; 0x852 <Gpio_PinWrite+0xa0>
     810:	88 e3       	ldi	r24, 0x38	; 56
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	28 e3       	ldi	r18, 0x38	; 56
     816:	30 e0       	ldi	r19, 0x00	; 0
     818:	f9 01       	movw	r30, r18
     81a:	30 81       	ld	r19, Z
     81c:	2a 81       	ldd	r18, Y+2	; 0x02
     81e:	23 2b       	or	r18, r19
     820:	fc 01       	movw	r30, r24
     822:	20 83       	st	Z, r18
     824:	16 c0       	rjmp	.+44     	; 0x852 <Gpio_PinWrite+0xa0>
     826:	85 e3       	ldi	r24, 0x35	; 53
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	25 e3       	ldi	r18, 0x35	; 53
     82c:	30 e0       	ldi	r19, 0x00	; 0
     82e:	f9 01       	movw	r30, r18
     830:	30 81       	ld	r19, Z
     832:	2a 81       	ldd	r18, Y+2	; 0x02
     834:	23 2b       	or	r18, r19
     836:	fc 01       	movw	r30, r24
     838:	20 83       	st	Z, r18
     83a:	0b c0       	rjmp	.+22     	; 0x852 <Gpio_PinWrite+0xa0>
     83c:	82 e3       	ldi	r24, 0x32	; 50
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	22 e3       	ldi	r18, 0x32	; 50
     842:	30 e0       	ldi	r19, 0x00	; 0
     844:	f9 01       	movw	r30, r18
     846:	30 81       	ld	r19, Z
     848:	2a 81       	ldd	r18, Y+2	; 0x02
     84a:	23 2b       	or	r18, r19
     84c:	fc 01       	movw	r30, r24
     84e:	20 83       	st	Z, r18
     850:	00 00       	nop
     852:	47 c0       	rjmp	.+142    	; 0x8e2 <__stack+0x83>
     854:	89 81       	ldd	r24, Y+1	; 0x01
     856:	88 2f       	mov	r24, r24
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	81 30       	cpi	r24, 0x01	; 1
     85c:	91 05       	cpc	r25, r1
     85e:	c9 f0       	breq	.+50     	; 0x892 <__stack+0x33>
     860:	82 30       	cpi	r24, 0x02	; 2
     862:	91 05       	cpc	r25, r1
     864:	1c f4       	brge	.+6      	; 0x86c <__stack+0xd>
     866:	89 2b       	or	r24, r25
     868:	39 f0       	breq	.+14     	; 0x878 <__stack+0x19>
     86a:	3a c0       	rjmp	.+116    	; 0x8e0 <__stack+0x81>
     86c:	82 30       	cpi	r24, 0x02	; 2
     86e:	91 05       	cpc	r25, r1
     870:	e9 f0       	breq	.+58     	; 0x8ac <__stack+0x4d>
     872:	03 97       	sbiw	r24, 0x03	; 3
     874:	41 f1       	breq	.+80     	; 0x8c6 <__stack+0x67>
     876:	34 c0       	rjmp	.+104    	; 0x8e0 <__stack+0x81>
     878:	8b e3       	ldi	r24, 0x3B	; 59
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	2b e3       	ldi	r18, 0x3B	; 59
     87e:	30 e0       	ldi	r19, 0x00	; 0
     880:	f9 01       	movw	r30, r18
     882:	20 81       	ld	r18, Z
     884:	32 2f       	mov	r19, r18
     886:	2a 81       	ldd	r18, Y+2	; 0x02
     888:	20 95       	com	r18
     88a:	23 23       	and	r18, r19
     88c:	fc 01       	movw	r30, r24
     88e:	20 83       	st	Z, r18
     890:	27 c0       	rjmp	.+78     	; 0x8e0 <__stack+0x81>
     892:	88 e3       	ldi	r24, 0x38	; 56
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	28 e3       	ldi	r18, 0x38	; 56
     898:	30 e0       	ldi	r19, 0x00	; 0
     89a:	f9 01       	movw	r30, r18
     89c:	20 81       	ld	r18, Z
     89e:	32 2f       	mov	r19, r18
     8a0:	2a 81       	ldd	r18, Y+2	; 0x02
     8a2:	20 95       	com	r18
     8a4:	23 23       	and	r18, r19
     8a6:	fc 01       	movw	r30, r24
     8a8:	20 83       	st	Z, r18
     8aa:	1a c0       	rjmp	.+52     	; 0x8e0 <__stack+0x81>
     8ac:	85 e3       	ldi	r24, 0x35	; 53
     8ae:	90 e0       	ldi	r25, 0x00	; 0
     8b0:	25 e3       	ldi	r18, 0x35	; 53
     8b2:	30 e0       	ldi	r19, 0x00	; 0
     8b4:	f9 01       	movw	r30, r18
     8b6:	20 81       	ld	r18, Z
     8b8:	32 2f       	mov	r19, r18
     8ba:	2a 81       	ldd	r18, Y+2	; 0x02
     8bc:	20 95       	com	r18
     8be:	23 23       	and	r18, r19
     8c0:	fc 01       	movw	r30, r24
     8c2:	20 83       	st	Z, r18
     8c4:	0d c0       	rjmp	.+26     	; 0x8e0 <__stack+0x81>
     8c6:	82 e3       	ldi	r24, 0x32	; 50
     8c8:	90 e0       	ldi	r25, 0x00	; 0
     8ca:	22 e3       	ldi	r18, 0x32	; 50
     8cc:	30 e0       	ldi	r19, 0x00	; 0
     8ce:	f9 01       	movw	r30, r18
     8d0:	20 81       	ld	r18, Z
     8d2:	32 2f       	mov	r19, r18
     8d4:	2a 81       	ldd	r18, Y+2	; 0x02
     8d6:	20 95       	com	r18
     8d8:	23 23       	and	r18, r19
     8da:	fc 01       	movw	r30, r24
     8dc:	20 83       	st	Z, r18
     8de:	00 00       	nop
     8e0:	00 00       	nop
     8e2:	00 00       	nop
     8e4:	0f 90       	pop	r0
     8e6:	0f 90       	pop	r0
     8e8:	0f 90       	pop	r0
     8ea:	df 91       	pop	r29
     8ec:	cf 91       	pop	r28
     8ee:	08 95       	ret

000008f0 <Gpio_PinToggle>:
     8f0:	cf 93       	push	r28
     8f2:	df 93       	push	r29
     8f4:	00 d0       	rcall	.+0      	; 0x8f6 <Gpio_PinToggle+0x6>
     8f6:	cd b7       	in	r28, 0x3d	; 61
     8f8:	de b7       	in	r29, 0x3e	; 62
     8fa:	89 83       	std	Y+1, r24	; 0x01
     8fc:	6a 83       	std	Y+2, r22	; 0x02
     8fe:	89 81       	ldd	r24, Y+1	; 0x01
     900:	88 2f       	mov	r24, r24
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	81 30       	cpi	r24, 0x01	; 1
     906:	91 05       	cpc	r25, r1
     908:	b9 f0       	breq	.+46     	; 0x938 <Gpio_PinToggle+0x48>
     90a:	82 30       	cpi	r24, 0x02	; 2
     90c:	91 05       	cpc	r25, r1
     90e:	1c f4       	brge	.+6      	; 0x916 <Gpio_PinToggle+0x26>
     910:	89 2b       	or	r24, r25
     912:	39 f0       	breq	.+14     	; 0x922 <Gpio_PinToggle+0x32>
     914:	32 c0       	rjmp	.+100    	; 0x97a <Gpio_PinToggle+0x8a>
     916:	82 30       	cpi	r24, 0x02	; 2
     918:	91 05       	cpc	r25, r1
     91a:	c9 f0       	breq	.+50     	; 0x94e <Gpio_PinToggle+0x5e>
     91c:	03 97       	sbiw	r24, 0x03	; 3
     91e:	11 f1       	breq	.+68     	; 0x964 <Gpio_PinToggle+0x74>
     920:	2c c0       	rjmp	.+88     	; 0x97a <Gpio_PinToggle+0x8a>
     922:	8b e3       	ldi	r24, 0x3B	; 59
     924:	90 e0       	ldi	r25, 0x00	; 0
     926:	2b e3       	ldi	r18, 0x3B	; 59
     928:	30 e0       	ldi	r19, 0x00	; 0
     92a:	f9 01       	movw	r30, r18
     92c:	30 81       	ld	r19, Z
     92e:	2a 81       	ldd	r18, Y+2	; 0x02
     930:	23 27       	eor	r18, r19
     932:	fc 01       	movw	r30, r24
     934:	20 83       	st	Z, r18
     936:	21 c0       	rjmp	.+66     	; 0x97a <Gpio_PinToggle+0x8a>
     938:	88 e3       	ldi	r24, 0x38	; 56
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	28 e3       	ldi	r18, 0x38	; 56
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	f9 01       	movw	r30, r18
     942:	30 81       	ld	r19, Z
     944:	2a 81       	ldd	r18, Y+2	; 0x02
     946:	23 27       	eor	r18, r19
     948:	fc 01       	movw	r30, r24
     94a:	20 83       	st	Z, r18
     94c:	16 c0       	rjmp	.+44     	; 0x97a <Gpio_PinToggle+0x8a>
     94e:	85 e3       	ldi	r24, 0x35	; 53
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	25 e3       	ldi	r18, 0x35	; 53
     954:	30 e0       	ldi	r19, 0x00	; 0
     956:	f9 01       	movw	r30, r18
     958:	30 81       	ld	r19, Z
     95a:	2a 81       	ldd	r18, Y+2	; 0x02
     95c:	23 27       	eor	r18, r19
     95e:	fc 01       	movw	r30, r24
     960:	20 83       	st	Z, r18
     962:	0b c0       	rjmp	.+22     	; 0x97a <Gpio_PinToggle+0x8a>
     964:	82 e3       	ldi	r24, 0x32	; 50
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	22 e3       	ldi	r18, 0x32	; 50
     96a:	30 e0       	ldi	r19, 0x00	; 0
     96c:	f9 01       	movw	r30, r18
     96e:	30 81       	ld	r19, Z
     970:	2a 81       	ldd	r18, Y+2	; 0x02
     972:	23 27       	eor	r18, r19
     974:	fc 01       	movw	r30, r24
     976:	20 83       	st	Z, r18
     978:	00 00       	nop
     97a:	00 00       	nop
     97c:	0f 90       	pop	r0
     97e:	0f 90       	pop	r0
     980:	df 91       	pop	r29
     982:	cf 91       	pop	r28
     984:	08 95       	ret

00000986 <Interrupts_On>:
     986:	cf 93       	push	r28
     988:	df 93       	push	r29
     98a:	cd b7       	in	r28, 0x3d	; 61
     98c:	de b7       	in	r29, 0x3e	; 62
     98e:	8f e5       	ldi	r24, 0x5F	; 95
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	2f e5       	ldi	r18, 0x5F	; 95
     994:	30 e0       	ldi	r19, 0x00	; 0
     996:	f9 01       	movw	r30, r18
     998:	20 81       	ld	r18, Z
     99a:	20 68       	ori	r18, 0x80	; 128
     99c:	fc 01       	movw	r30, r24
     99e:	20 83       	st	Z, r18
     9a0:	00 00       	nop
     9a2:	df 91       	pop	r29
     9a4:	cf 91       	pop	r28
     9a6:	08 95       	ret

000009a8 <Timers_Init>:
     9a8:	cf 93       	push	r28
     9aa:	df 93       	push	r29
     9ac:	00 d0       	rcall	.+0      	; 0x9ae <Timers_Init+0x6>
     9ae:	1f 92       	push	r1
     9b0:	cd b7       	in	r28, 0x3d	; 61
     9b2:	de b7       	in	r29, 0x3e	; 62
     9b4:	9b 83       	std	Y+3, r25	; 0x03
     9b6:	8a 83       	std	Y+2, r24	; 0x02
     9b8:	19 82       	std	Y+1, r1	; 0x01
     9ba:	8a 81       	ldd	r24, Y+2	; 0x02
     9bc:	9b 81       	ldd	r25, Y+3	; 0x03
     9be:	fc 01       	movw	r30, r24
     9c0:	87 81       	ldd	r24, Z+7	; 0x07
     9c2:	90 85       	ldd	r25, Z+8	; 0x08
     9c4:	a1 85       	ldd	r26, Z+9	; 0x09
     9c6:	b2 85       	ldd	r27, Z+10	; 0x0a
     9c8:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <Gv_F_CPU>
     9cc:	90 93 95 00 	sts	0x0095, r25	; 0x800095 <Gv_F_CPU+0x1>
     9d0:	a0 93 96 00 	sts	0x0096, r26	; 0x800096 <Gv_F_CPU+0x2>
     9d4:	b0 93 97 00 	sts	0x0097, r27	; 0x800097 <Gv_F_CPU+0x3>
     9d8:	8a 81       	ldd	r24, Y+2	; 0x02
     9da:	9b 81       	ldd	r25, Y+3	; 0x03
     9dc:	fc 01       	movw	r30, r24
     9de:	80 81       	ld	r24, Z
     9e0:	88 2f       	mov	r24, r24
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	81 30       	cpi	r24, 0x01	; 1
     9e6:	91 05       	cpc	r25, r1
     9e8:	09 f4       	brne	.+2      	; 0x9ec <Timers_Init+0x44>
     9ea:	64 c0       	rjmp	.+200    	; 0xab4 <Timers_Init+0x10c>
     9ec:	82 30       	cpi	r24, 0x02	; 2
     9ee:	91 05       	cpc	r25, r1
     9f0:	09 f4       	brne	.+2      	; 0x9f4 <Timers_Init+0x4c>
     9f2:	cc c0       	rjmp	.+408    	; 0xb8c <Timers_Init+0x1e4>
     9f4:	89 2b       	or	r24, r25
     9f6:	09 f0       	breq	.+2      	; 0x9fa <Timers_Init+0x52>
     9f8:	26 c1       	rjmp	.+588    	; 0xc46 <Timers_Init+0x29e>
     9fa:	83 e5       	ldi	r24, 0x53	; 83
     9fc:	90 e0       	ldi	r25, 0x00	; 0
     9fe:	23 e5       	ldi	r18, 0x53	; 83
     a00:	30 e0       	ldi	r19, 0x00	; 0
     a02:	f9 01       	movw	r30, r18
     a04:	40 81       	ld	r20, Z
     a06:	2a 81       	ldd	r18, Y+2	; 0x02
     a08:	3b 81       	ldd	r19, Y+3	; 0x03
     a0a:	f9 01       	movw	r30, r18
     a0c:	21 81       	ldd	r18, Z+1	; 0x01
     a0e:	24 2b       	or	r18, r20
     a10:	fc 01       	movw	r30, r24
     a12:	20 83       	st	Z, r18
     a14:	89 e5       	ldi	r24, 0x59	; 89
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	29 e5       	ldi	r18, 0x59	; 89
     a1a:	30 e0       	ldi	r19, 0x00	; 0
     a1c:	f9 01       	movw	r30, r18
     a1e:	40 81       	ld	r20, Z
     a20:	2a 81       	ldd	r18, Y+2	; 0x02
     a22:	3b 81       	ldd	r19, Y+3	; 0x03
     a24:	f9 01       	movw	r30, r18
     a26:	26 81       	ldd	r18, Z+6	; 0x06
     a28:	24 2b       	or	r18, r20
     a2a:	fc 01       	movw	r30, r24
     a2c:	20 83       	st	Z, r18
     a2e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <Gv_PrescallerTimer0_Mask>
     a32:	88 2f       	mov	r24, r24
     a34:	90 e0       	ldi	r25, 0x00	; 0
     a36:	82 30       	cpi	r24, 0x02	; 2
     a38:	91 05       	cpc	r25, r1
     a3a:	e9 f0       	breq	.+58     	; 0xa76 <Timers_Init+0xce>
     a3c:	83 30       	cpi	r24, 0x03	; 3
     a3e:	91 05       	cpc	r25, r1
     a40:	2c f4       	brge	.+10     	; 0xa4c <Timers_Init+0xa4>
     a42:	00 97       	sbiw	r24, 0x00	; 0
     a44:	61 f0       	breq	.+24     	; 0xa5e <Timers_Init+0xb6>
     a46:	01 97       	sbiw	r24, 0x01	; 1
     a48:	79 f0       	breq	.+30     	; 0xa68 <Timers_Init+0xc0>
     a4a:	31 c0       	rjmp	.+98     	; 0xaae <Timers_Init+0x106>
     a4c:	84 30       	cpi	r24, 0x04	; 4
     a4e:	91 05       	cpc	r25, r1
     a50:	01 f1       	breq	.+64     	; 0xa92 <Timers_Init+0xea>
     a52:	84 30       	cpi	r24, 0x04	; 4
     a54:	91 05       	cpc	r25, r1
     a56:	b4 f0       	brlt	.+44     	; 0xa84 <Timers_Init+0xdc>
     a58:	05 97       	sbiw	r24, 0x05	; 5
     a5a:	11 f1       	breq	.+68     	; 0xaa0 <Timers_Init+0xf8>
     a5c:	28 c0       	rjmp	.+80     	; 0xaae <Timers_Init+0x106>
     a5e:	10 92 a2 00 	sts	0x00A2, r1	; 0x8000a2 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     a62:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <Gv_PrescallerTimer0_AbsoluteValue>
     a66:	23 c0       	rjmp	.+70     	; 0xaae <Timers_Init+0x106>
     a68:	81 e0       	ldi	r24, 0x01	; 1
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     a70:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <Gv_PrescallerTimer0_AbsoluteValue>
     a74:	1c c0       	rjmp	.+56     	; 0xaae <Timers_Init+0x106>
     a76:	88 e0       	ldi	r24, 0x08	; 8
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     a7e:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <Gv_PrescallerTimer0_AbsoluteValue>
     a82:	15 c0       	rjmp	.+42     	; 0xaae <Timers_Init+0x106>
     a84:	80 e4       	ldi	r24, 0x40	; 64
     a86:	90 e0       	ldi	r25, 0x00	; 0
     a88:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     a8c:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <Gv_PrescallerTimer0_AbsoluteValue>
     a90:	0e c0       	rjmp	.+28     	; 0xaae <Timers_Init+0x106>
     a92:	80 e0       	ldi	r24, 0x00	; 0
     a94:	91 e0       	ldi	r25, 0x01	; 1
     a96:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     a9a:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <Gv_PrescallerTimer0_AbsoluteValue>
     a9e:	07 c0       	rjmp	.+14     	; 0xaae <Timers_Init+0x106>
     aa0:	80 e0       	ldi	r24, 0x00	; 0
     aa2:	94 e0       	ldi	r25, 0x04	; 4
     aa4:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     aa8:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <Gv_PrescallerTimer0_AbsoluteValue>
     aac:	00 00       	nop
     aae:	81 e0       	ldi	r24, 0x01	; 1
     ab0:	89 83       	std	Y+1, r24	; 0x01
     ab2:	cb c0       	rjmp	.+406    	; 0xc4a <Timers_Init+0x2a2>
     ab4:	8f e4       	ldi	r24, 0x4F	; 79
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	2f e4       	ldi	r18, 0x4F	; 79
     aba:	30 e0       	ldi	r19, 0x00	; 0
     abc:	f9 01       	movw	r30, r18
     abe:	20 81       	ld	r18, Z
     ac0:	42 2f       	mov	r20, r18
     ac2:	2a 81       	ldd	r18, Y+2	; 0x02
     ac4:	3b 81       	ldd	r19, Y+3	; 0x03
     ac6:	f9 01       	movw	r30, r18
     ac8:	21 81       	ldd	r18, Z+1	; 0x01
     aca:	23 70       	andi	r18, 0x03	; 3
     acc:	24 2b       	or	r18, r20
     ace:	fc 01       	movw	r30, r24
     ad0:	20 83       	st	Z, r18
     ad2:	8e e4       	ldi	r24, 0x4E	; 78
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	2e e4       	ldi	r18, 0x4E	; 78
     ad8:	30 e0       	ldi	r19, 0x00	; 0
     ada:	f9 01       	movw	r30, r18
     adc:	20 81       	ld	r18, Z
     ade:	42 2f       	mov	r20, r18
     ae0:	2a 81       	ldd	r18, Y+2	; 0x02
     ae2:	3b 81       	ldd	r19, Y+3	; 0x03
     ae4:	f9 01       	movw	r30, r18
     ae6:	21 81       	ldd	r18, Z+1	; 0x01
     ae8:	28 71       	andi	r18, 0x18	; 24
     aea:	24 2b       	or	r18, r20
     aec:	fc 01       	movw	r30, r24
     aee:	20 83       	st	Z, r18
     af0:	89 e5       	ldi	r24, 0x59	; 89
     af2:	90 e0       	ldi	r25, 0x00	; 0
     af4:	29 e5       	ldi	r18, 0x59	; 89
     af6:	30 e0       	ldi	r19, 0x00	; 0
     af8:	f9 01       	movw	r30, r18
     afa:	20 81       	ld	r18, Z
     afc:	24 60       	ori	r18, 0x04	; 4
     afe:	fc 01       	movw	r30, r24
     b00:	20 83       	st	Z, r18
     b02:	0e 94 c3 04 	call	0x986	; 0x986 <Interrupts_On>
     b06:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <Gv_PrescallerTimer1_Mask>
     b0a:	88 2f       	mov	r24, r24
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	82 30       	cpi	r24, 0x02	; 2
     b10:	91 05       	cpc	r25, r1
     b12:	e9 f0       	breq	.+58     	; 0xb4e <Timers_Init+0x1a6>
     b14:	83 30       	cpi	r24, 0x03	; 3
     b16:	91 05       	cpc	r25, r1
     b18:	2c f4       	brge	.+10     	; 0xb24 <Timers_Init+0x17c>
     b1a:	00 97       	sbiw	r24, 0x00	; 0
     b1c:	61 f0       	breq	.+24     	; 0xb36 <Timers_Init+0x18e>
     b1e:	01 97       	sbiw	r24, 0x01	; 1
     b20:	79 f0       	breq	.+30     	; 0xb40 <Timers_Init+0x198>
     b22:	31 c0       	rjmp	.+98     	; 0xb86 <Timers_Init+0x1de>
     b24:	84 30       	cpi	r24, 0x04	; 4
     b26:	91 05       	cpc	r25, r1
     b28:	01 f1       	breq	.+64     	; 0xb6a <Timers_Init+0x1c2>
     b2a:	84 30       	cpi	r24, 0x04	; 4
     b2c:	91 05       	cpc	r25, r1
     b2e:	b4 f0       	brlt	.+44     	; 0xb5c <Timers_Init+0x1b4>
     b30:	05 97       	sbiw	r24, 0x05	; 5
     b32:	11 f1       	breq	.+68     	; 0xb78 <Timers_Init+0x1d0>
     b34:	28 c0       	rjmp	.+80     	; 0xb86 <Timers_Init+0x1de>
     b36:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b3a:	10 92 a3 00 	sts	0x00A3, r1	; 0x8000a3 <Gv_PrescallerTimer1_AbsoluteValue>
     b3e:	23 c0       	rjmp	.+70     	; 0xb86 <Timers_Init+0x1de>
     b40:	81 e0       	ldi	r24, 0x01	; 1
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b48:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <Gv_PrescallerTimer1_AbsoluteValue>
     b4c:	1c c0       	rjmp	.+56     	; 0xb86 <Timers_Init+0x1de>
     b4e:	88 e0       	ldi	r24, 0x08	; 8
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b56:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <Gv_PrescallerTimer1_AbsoluteValue>
     b5a:	15 c0       	rjmp	.+42     	; 0xb86 <Timers_Init+0x1de>
     b5c:	80 e4       	ldi	r24, 0x40	; 64
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b64:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <Gv_PrescallerTimer1_AbsoluteValue>
     b68:	0e c0       	rjmp	.+28     	; 0xb86 <Timers_Init+0x1de>
     b6a:	80 e0       	ldi	r24, 0x00	; 0
     b6c:	91 e0       	ldi	r25, 0x01	; 1
     b6e:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b72:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <Gv_PrescallerTimer1_AbsoluteValue>
     b76:	07 c0       	rjmp	.+14     	; 0xb86 <Timers_Init+0x1de>
     b78:	80 e0       	ldi	r24, 0x00	; 0
     b7a:	94 e0       	ldi	r25, 0x04	; 4
     b7c:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b80:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <Gv_PrescallerTimer1_AbsoluteValue>
     b84:	00 00       	nop
     b86:	81 e0       	ldi	r24, 0x01	; 1
     b88:	89 83       	std	Y+1, r24	; 0x01
     b8a:	5f c0       	rjmp	.+190    	; 0xc4a <Timers_Init+0x2a2>
     b8c:	85 e4       	ldi	r24, 0x45	; 69
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	25 e4       	ldi	r18, 0x45	; 69
     b92:	30 e0       	ldi	r19, 0x00	; 0
     b94:	f9 01       	movw	r30, r18
     b96:	40 81       	ld	r20, Z
     b98:	2a 81       	ldd	r18, Y+2	; 0x02
     b9a:	3b 81       	ldd	r19, Y+3	; 0x03
     b9c:	f9 01       	movw	r30, r18
     b9e:	21 81       	ldd	r18, Z+1	; 0x01
     ba0:	24 2b       	or	r18, r20
     ba2:	fc 01       	movw	r30, r24
     ba4:	20 83       	st	Z, r18
     ba6:	89 e5       	ldi	r24, 0x59	; 89
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	29 e5       	ldi	r18, 0x59	; 89
     bac:	30 e0       	ldi	r19, 0x00	; 0
     bae:	f9 01       	movw	r30, r18
     bb0:	40 81       	ld	r20, Z
     bb2:	2a 81       	ldd	r18, Y+2	; 0x02
     bb4:	3b 81       	ldd	r19, Y+3	; 0x03
     bb6:	f9 01       	movw	r30, r18
     bb8:	26 81       	ldd	r18, Z+6	; 0x06
     bba:	24 2b       	or	r18, r20
     bbc:	fc 01       	movw	r30, r24
     bbe:	20 83       	st	Z, r18
     bc0:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <Gv_PrescallerTimer2_Mask>
     bc4:	88 2f       	mov	r24, r24
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	82 30       	cpi	r24, 0x02	; 2
     bca:	91 05       	cpc	r25, r1
     bcc:	e9 f0       	breq	.+58     	; 0xc08 <Timers_Init+0x260>
     bce:	83 30       	cpi	r24, 0x03	; 3
     bd0:	91 05       	cpc	r25, r1
     bd2:	2c f4       	brge	.+10     	; 0xbde <Timers_Init+0x236>
     bd4:	00 97       	sbiw	r24, 0x00	; 0
     bd6:	61 f0       	breq	.+24     	; 0xbf0 <Timers_Init+0x248>
     bd8:	01 97       	sbiw	r24, 0x01	; 1
     bda:	79 f0       	breq	.+30     	; 0xbfa <Timers_Init+0x252>
     bdc:	31 c0       	rjmp	.+98     	; 0xc40 <Timers_Init+0x298>
     bde:	86 30       	cpi	r24, 0x06	; 6
     be0:	91 05       	cpc	r25, r1
     be2:	01 f1       	breq	.+64     	; 0xc24 <Timers_Init+0x27c>
     be4:	87 30       	cpi	r24, 0x07	; 7
     be6:	91 05       	cpc	r25, r1
     be8:	21 f1       	breq	.+72     	; 0xc32 <Timers_Init+0x28a>
     bea:	04 97       	sbiw	r24, 0x04	; 4
     bec:	a1 f0       	breq	.+40     	; 0xc16 <Timers_Init+0x26e>
     bee:	28 c0       	rjmp	.+80     	; 0xc40 <Timers_Init+0x298>
     bf0:	10 92 a0 00 	sts	0x00A0, r1	; 0x8000a0 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     bf4:	10 92 9f 00 	sts	0x009F, r1	; 0x80009f <Gv_PrescallerTimer2_AbsoluteValue>
     bf8:	23 c0       	rjmp	.+70     	; 0xc40 <Timers_Init+0x298>
     bfa:	81 e0       	ldi	r24, 0x01	; 1
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c02:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Gv_PrescallerTimer2_AbsoluteValue>
     c06:	1c c0       	rjmp	.+56     	; 0xc40 <Timers_Init+0x298>
     c08:	88 e0       	ldi	r24, 0x08	; 8
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c10:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Gv_PrescallerTimer2_AbsoluteValue>
     c14:	15 c0       	rjmp	.+42     	; 0xc40 <Timers_Init+0x298>
     c16:	80 e4       	ldi	r24, 0x40	; 64
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c1e:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Gv_PrescallerTimer2_AbsoluteValue>
     c22:	0e c0       	rjmp	.+28     	; 0xc40 <Timers_Init+0x298>
     c24:	80 e0       	ldi	r24, 0x00	; 0
     c26:	91 e0       	ldi	r25, 0x01	; 1
     c28:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c2c:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Gv_PrescallerTimer2_AbsoluteValue>
     c30:	07 c0       	rjmp	.+14     	; 0xc40 <Timers_Init+0x298>
     c32:	80 e0       	ldi	r24, 0x00	; 0
     c34:	94 e0       	ldi	r25, 0x04	; 4
     c36:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c3a:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Gv_PrescallerTimer2_AbsoluteValue>
     c3e:	00 00       	nop
     c40:	81 e0       	ldi	r24, 0x01	; 1
     c42:	89 83       	std	Y+1, r24	; 0x01
     c44:	02 c0       	rjmp	.+4      	; 0xc4a <Timers_Init+0x2a2>
     c46:	19 82       	std	Y+1, r1	; 0x01
     c48:	00 00       	nop
     c4a:	8a 81       	ldd	r24, Y+2	; 0x02
     c4c:	9b 81       	ldd	r25, Y+3	; 0x03
     c4e:	fc 01       	movw	r30, r24
     c50:	82 81       	ldd	r24, Z+2	; 0x02
     c52:	93 81       	ldd	r25, Z+3	; 0x03
     c54:	a4 81       	ldd	r26, Z+4	; 0x04
     c56:	b5 81       	ldd	r27, Z+5	; 0x05
     c58:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <Gv_Count>
     c5c:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <Gv_Count+0x1>
     c60:	a0 93 9a 00 	sts	0x009A, r26	; 0x80009a <Gv_Count+0x2>
     c64:	b0 93 9b 00 	sts	0x009B, r27	; 0x80009b <Gv_Count+0x3>
     c68:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <Gv_Count>
     c6c:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <Gv_Count+0x1>
     c70:	a0 91 9a 00 	lds	r26, 0x009A	; 0x80009a <Gv_Count+0x2>
     c74:	b0 91 9b 00 	lds	r27, 0x009B	; 0x80009b <Gv_Count+0x3>
     c78:	2a 81       	ldd	r18, Y+2	; 0x02
     c7a:	3b 81       	ldd	r19, Y+3	; 0x03
     c7c:	f9 01       	movw	r30, r18
     c7e:	20 81       	ld	r18, Z
     c80:	ac 01       	movw	r20, r24
     c82:	bd 01       	movw	r22, r26
     c84:	82 2f       	mov	r24, r18
     c86:	0e 94 4c 06 	call	0xc98	; 0xc98 <Timers_SetCounter>
     c8a:	89 81       	ldd	r24, Y+1	; 0x01
     c8c:	0f 90       	pop	r0
     c8e:	0f 90       	pop	r0
     c90:	0f 90       	pop	r0
     c92:	df 91       	pop	r29
     c94:	cf 91       	pop	r28
     c96:	08 95       	ret

00000c98 <Timers_SetCounter>:
     c98:	ef 92       	push	r14
     c9a:	ff 92       	push	r15
     c9c:	0f 93       	push	r16
     c9e:	1f 93       	push	r17
     ca0:	cf 93       	push	r28
     ca2:	df 93       	push	r29
     ca4:	cd b7       	in	r28, 0x3d	; 61
     ca6:	de b7       	in	r29, 0x3e	; 62
     ca8:	2d 97       	sbiw	r28, 0x0d	; 13
     caa:	0f b6       	in	r0, 0x3f	; 63
     cac:	f8 94       	cli
     cae:	de bf       	out	0x3e, r29	; 62
     cb0:	0f be       	out	0x3f, r0	; 63
     cb2:	cd bf       	out	0x3d, r28	; 61
     cb4:	89 87       	std	Y+9, r24	; 0x09
     cb6:	4a 87       	std	Y+10, r20	; 0x0a
     cb8:	5b 87       	std	Y+11, r21	; 0x0b
     cba:	6c 87       	std	Y+12, r22	; 0x0c
     cbc:	7d 87       	std	Y+13, r23	; 0x0d
     cbe:	19 82       	std	Y+1, r1	; 0x01
     cc0:	1a 82       	std	Y+2, r1	; 0x02
     cc2:	1b 82       	std	Y+3, r1	; 0x03
     cc4:	1c 82       	std	Y+4, r1	; 0x04
     cc6:	89 85       	ldd	r24, Y+9	; 0x09
     cc8:	88 2f       	mov	r24, r24
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	81 30       	cpi	r24, 0x01	; 1
     cce:	91 05       	cpc	r25, r1
     cd0:	09 f4       	brne	.+2      	; 0xcd4 <Timers_SetCounter+0x3c>
     cd2:	71 c0       	rjmp	.+226    	; 0xdb6 <Timers_SetCounter+0x11e>
     cd4:	82 30       	cpi	r24, 0x02	; 2
     cd6:	91 05       	cpc	r25, r1
     cd8:	09 f4       	brne	.+2      	; 0xcdc <Timers_SetCounter+0x44>
     cda:	e6 c0       	rjmp	.+460    	; 0xea8 <Timers_SetCounter+0x210>
     cdc:	89 2b       	or	r24, r25
     cde:	09 f0       	breq	.+2      	; 0xce2 <Timers_SetCounter+0x4a>
     ce0:	4d c1       	rjmp	.+666    	; 0xf7c <Timers_SetCounter+0x2e4>
     ce2:	80 91 a1 00 	lds	r24, 0x00A1	; 0x8000a1 <Gv_PrescallerTimer0_AbsoluteValue>
     ce6:	90 91 a2 00 	lds	r25, 0x00A2	; 0x8000a2 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     cea:	cc 01       	movw	r24, r24
     cec:	a0 e0       	ldi	r26, 0x00	; 0
     cee:	b0 e0       	ldi	r27, 0x00	; 0
     cf0:	9c 01       	movw	r18, r24
     cf2:	ad 01       	movw	r20, r26
     cf4:	60 e4       	ldi	r22, 0x40	; 64
     cf6:	72 e4       	ldi	r23, 0x42	; 66
     cf8:	8f e0       	ldi	r24, 0x0F	; 15
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	0e 94 72 08 	call	0x10e4	; 0x10e4 <__mulsi3>
     d00:	dc 01       	movw	r26, r24
     d02:	cb 01       	movw	r24, r22
     d04:	20 91 94 00 	lds	r18, 0x0094	; 0x800094 <Gv_F_CPU>
     d08:	30 91 95 00 	lds	r19, 0x0095	; 0x800095 <Gv_F_CPU+0x1>
     d0c:	40 91 96 00 	lds	r20, 0x0096	; 0x800096 <Gv_F_CPU+0x2>
     d10:	50 91 97 00 	lds	r21, 0x0097	; 0x800097 <Gv_F_CPU+0x3>
     d14:	bc 01       	movw	r22, r24
     d16:	cd 01       	movw	r24, r26
     d18:	0e 94 96 08 	call	0x112c	; 0x112c <__udivmodsi4>
     d1c:	da 01       	movw	r26, r20
     d1e:	c9 01       	movw	r24, r18
     d20:	9c 01       	movw	r18, r24
     d22:	ad 01       	movw	r20, r26
     d24:	8a 85       	ldd	r24, Y+10	; 0x0a
     d26:	9b 85       	ldd	r25, Y+11	; 0x0b
     d28:	ac 85       	ldd	r26, Y+12	; 0x0c
     d2a:	bd 85       	ldd	r27, Y+13	; 0x0d
     d2c:	bc 01       	movw	r22, r24
     d2e:	cd 01       	movw	r24, r26
     d30:	0e 94 96 08 	call	0x112c	; 0x112c <__udivmodsi4>
     d34:	da 01       	movw	r26, r20
     d36:	c9 01       	movw	r24, r18
     d38:	8d 83       	std	Y+5, r24	; 0x05
     d3a:	9e 83       	std	Y+6, r25	; 0x06
     d3c:	af 83       	std	Y+7, r26	; 0x07
     d3e:	b8 87       	std	Y+8, r27	; 0x08
     d40:	8d 81       	ldd	r24, Y+5	; 0x05
     d42:	9e 81       	ldd	r25, Y+6	; 0x06
     d44:	af 81       	ldd	r26, Y+7	; 0x07
     d46:	b8 85       	ldd	r27, Y+8	; 0x08
     d48:	81 30       	cpi	r24, 0x01	; 1
     d4a:	91 40       	sbci	r25, 0x01	; 1
     d4c:	a1 05       	cpc	r26, r1
     d4e:	b1 05       	cpc	r27, r1
     d50:	28 f0       	brcs	.+10     	; 0xd5c <Timers_SetCounter+0xc4>
     d52:	19 82       	std	Y+1, r1	; 0x01
     d54:	1a 82       	std	Y+2, r1	; 0x02
     d56:	1b 82       	std	Y+3, r1	; 0x03
     d58:	1c 82       	std	Y+4, r1	; 0x04
     d5a:	15 c1       	rjmp	.+554    	; 0xf86 <Timers_SetCounter+0x2ee>
     d5c:	20 e0       	ldi	r18, 0x00	; 0
     d5e:	31 e0       	ldi	r19, 0x01	; 1
     d60:	40 e0       	ldi	r20, 0x00	; 0
     d62:	50 e0       	ldi	r21, 0x00	; 0
     d64:	8d 81       	ldd	r24, Y+5	; 0x05
     d66:	9e 81       	ldd	r25, Y+6	; 0x06
     d68:	af 81       	ldd	r26, Y+7	; 0x07
     d6a:	b8 85       	ldd	r27, Y+8	; 0x08
     d6c:	79 01       	movw	r14, r18
     d6e:	8a 01       	movw	r16, r20
     d70:	e8 1a       	sub	r14, r24
     d72:	f9 0a       	sbc	r15, r25
     d74:	0a 0b       	sbc	r16, r26
     d76:	1b 0b       	sbc	r17, r27
     d78:	d8 01       	movw	r26, r16
     d7a:	c7 01       	movw	r24, r14
     d7c:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <Gv_Count>
     d80:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <Gv_Count+0x1>
     d84:	a0 93 9a 00 	sts	0x009A, r26	; 0x80009a <Gv_Count+0x2>
     d88:	b0 93 9b 00 	sts	0x009B, r27	; 0x80009b <Gv_Count+0x3>
     d8c:	22 e5       	ldi	r18, 0x52	; 82
     d8e:	30 e0       	ldi	r19, 0x00	; 0
     d90:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <Gv_Count>
     d94:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <Gv_Count+0x1>
     d98:	a0 91 9a 00 	lds	r26, 0x009A	; 0x80009a <Gv_Count+0x2>
     d9c:	b0 91 9b 00 	lds	r27, 0x009B	; 0x80009b <Gv_Count+0x3>
     da0:	f9 01       	movw	r30, r18
     da2:	80 83       	st	Z, r24
     da4:	81 e0       	ldi	r24, 0x01	; 1
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	a0 e0       	ldi	r26, 0x00	; 0
     daa:	b0 e0       	ldi	r27, 0x00	; 0
     dac:	89 83       	std	Y+1, r24	; 0x01
     dae:	9a 83       	std	Y+2, r25	; 0x02
     db0:	ab 83       	std	Y+3, r26	; 0x03
     db2:	bc 83       	std	Y+4, r27	; 0x04
     db4:	e8 c0       	rjmp	.+464    	; 0xf86 <Timers_SetCounter+0x2ee>
     db6:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <Gv_PrescallerTimer1_AbsoluteValue>
     dba:	90 91 a4 00 	lds	r25, 0x00A4	; 0x8000a4 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     dbe:	cc 01       	movw	r24, r24
     dc0:	a0 e0       	ldi	r26, 0x00	; 0
     dc2:	b0 e0       	ldi	r27, 0x00	; 0
     dc4:	9c 01       	movw	r18, r24
     dc6:	ad 01       	movw	r20, r26
     dc8:	60 e4       	ldi	r22, 0x40	; 64
     dca:	72 e4       	ldi	r23, 0x42	; 66
     dcc:	8f e0       	ldi	r24, 0x0F	; 15
     dce:	90 e0       	ldi	r25, 0x00	; 0
     dd0:	0e 94 72 08 	call	0x10e4	; 0x10e4 <__mulsi3>
     dd4:	dc 01       	movw	r26, r24
     dd6:	cb 01       	movw	r24, r22
     dd8:	20 91 94 00 	lds	r18, 0x0094	; 0x800094 <Gv_F_CPU>
     ddc:	30 91 95 00 	lds	r19, 0x0095	; 0x800095 <Gv_F_CPU+0x1>
     de0:	40 91 96 00 	lds	r20, 0x0096	; 0x800096 <Gv_F_CPU+0x2>
     de4:	50 91 97 00 	lds	r21, 0x0097	; 0x800097 <Gv_F_CPU+0x3>
     de8:	bc 01       	movw	r22, r24
     dea:	cd 01       	movw	r24, r26
     dec:	0e 94 96 08 	call	0x112c	; 0x112c <__udivmodsi4>
     df0:	da 01       	movw	r26, r20
     df2:	c9 01       	movw	r24, r18
     df4:	9c 01       	movw	r18, r24
     df6:	ad 01       	movw	r20, r26
     df8:	8a 85       	ldd	r24, Y+10	; 0x0a
     dfa:	9b 85       	ldd	r25, Y+11	; 0x0b
     dfc:	ac 85       	ldd	r26, Y+12	; 0x0c
     dfe:	bd 85       	ldd	r27, Y+13	; 0x0d
     e00:	bc 01       	movw	r22, r24
     e02:	cd 01       	movw	r24, r26
     e04:	0e 94 96 08 	call	0x112c	; 0x112c <__udivmodsi4>
     e08:	da 01       	movw	r26, r20
     e0a:	c9 01       	movw	r24, r18
     e0c:	8d 83       	std	Y+5, r24	; 0x05
     e0e:	9e 83       	std	Y+6, r25	; 0x06
     e10:	af 83       	std	Y+7, r26	; 0x07
     e12:	b8 87       	std	Y+8, r27	; 0x08
     e14:	8d 81       	ldd	r24, Y+5	; 0x05
     e16:	9e 81       	ldd	r25, Y+6	; 0x06
     e18:	af 81       	ldd	r26, Y+7	; 0x07
     e1a:	b8 85       	ldd	r27, Y+8	; 0x08
     e1c:	01 97       	sbiw	r24, 0x01	; 1
     e1e:	a1 40       	sbci	r26, 0x01	; 1
     e20:	b1 05       	cpc	r27, r1
     e22:	28 f0       	brcs	.+10     	; 0xe2e <Timers_SetCounter+0x196>
     e24:	19 82       	std	Y+1, r1	; 0x01
     e26:	1a 82       	std	Y+2, r1	; 0x02
     e28:	1b 82       	std	Y+3, r1	; 0x03
     e2a:	1c 82       	std	Y+4, r1	; 0x04
     e2c:	ac c0       	rjmp	.+344    	; 0xf86 <Timers_SetCounter+0x2ee>
     e2e:	20 e0       	ldi	r18, 0x00	; 0
     e30:	30 e0       	ldi	r19, 0x00	; 0
     e32:	41 e0       	ldi	r20, 0x01	; 1
     e34:	50 e0       	ldi	r21, 0x00	; 0
     e36:	8d 81       	ldd	r24, Y+5	; 0x05
     e38:	9e 81       	ldd	r25, Y+6	; 0x06
     e3a:	af 81       	ldd	r26, Y+7	; 0x07
     e3c:	b8 85       	ldd	r27, Y+8	; 0x08
     e3e:	79 01       	movw	r14, r18
     e40:	8a 01       	movw	r16, r20
     e42:	e8 1a       	sub	r14, r24
     e44:	f9 0a       	sbc	r15, r25
     e46:	0a 0b       	sbc	r16, r26
     e48:	1b 0b       	sbc	r17, r27
     e4a:	d8 01       	movw	r26, r16
     e4c:	c7 01       	movw	r24, r14
     e4e:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <Gv_Count>
     e52:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <Gv_Count+0x1>
     e56:	a0 93 9a 00 	sts	0x009A, r26	; 0x80009a <Gv_Count+0x2>
     e5a:	b0 93 9b 00 	sts	0x009B, r27	; 0x80009b <Gv_Count+0x3>
     e5e:	2d e4       	ldi	r18, 0x4D	; 77
     e60:	30 e0       	ldi	r19, 0x00	; 0
     e62:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <Gv_Count>
     e66:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <Gv_Count+0x1>
     e6a:	a0 91 9a 00 	lds	r26, 0x009A	; 0x80009a <Gv_Count+0x2>
     e6e:	b0 91 9b 00 	lds	r27, 0x009B	; 0x80009b <Gv_Count+0x3>
     e72:	89 2f       	mov	r24, r25
     e74:	9a 2f       	mov	r25, r26
     e76:	ab 2f       	mov	r26, r27
     e78:	bb 27       	eor	r27, r27
     e7a:	f9 01       	movw	r30, r18
     e7c:	80 83       	st	Z, r24
     e7e:	2c e4       	ldi	r18, 0x4C	; 76
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <Gv_Count>
     e86:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <Gv_Count+0x1>
     e8a:	a0 91 9a 00 	lds	r26, 0x009A	; 0x80009a <Gv_Count+0x2>
     e8e:	b0 91 9b 00 	lds	r27, 0x009B	; 0x80009b <Gv_Count+0x3>
     e92:	f9 01       	movw	r30, r18
     e94:	80 83       	st	Z, r24
     e96:	81 e0       	ldi	r24, 0x01	; 1
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	a0 e0       	ldi	r26, 0x00	; 0
     e9c:	b0 e0       	ldi	r27, 0x00	; 0
     e9e:	89 83       	std	Y+1, r24	; 0x01
     ea0:	9a 83       	std	Y+2, r25	; 0x02
     ea2:	ab 83       	std	Y+3, r26	; 0x03
     ea4:	bc 83       	std	Y+4, r27	; 0x04
     ea6:	6f c0       	rjmp	.+222    	; 0xf86 <Timers_SetCounter+0x2ee>
     ea8:	80 91 9f 00 	lds	r24, 0x009F	; 0x80009f <Gv_PrescallerTimer2_AbsoluteValue>
     eac:	90 91 a0 00 	lds	r25, 0x00A0	; 0x8000a0 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     eb0:	cc 01       	movw	r24, r24
     eb2:	a0 e0       	ldi	r26, 0x00	; 0
     eb4:	b0 e0       	ldi	r27, 0x00	; 0
     eb6:	9c 01       	movw	r18, r24
     eb8:	ad 01       	movw	r20, r26
     eba:	60 e4       	ldi	r22, 0x40	; 64
     ebc:	72 e4       	ldi	r23, 0x42	; 66
     ebe:	8f e0       	ldi	r24, 0x0F	; 15
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	0e 94 72 08 	call	0x10e4	; 0x10e4 <__mulsi3>
     ec6:	dc 01       	movw	r26, r24
     ec8:	cb 01       	movw	r24, r22
     eca:	20 91 94 00 	lds	r18, 0x0094	; 0x800094 <Gv_F_CPU>
     ece:	30 91 95 00 	lds	r19, 0x0095	; 0x800095 <Gv_F_CPU+0x1>
     ed2:	40 91 96 00 	lds	r20, 0x0096	; 0x800096 <Gv_F_CPU+0x2>
     ed6:	50 91 97 00 	lds	r21, 0x0097	; 0x800097 <Gv_F_CPU+0x3>
     eda:	bc 01       	movw	r22, r24
     edc:	cd 01       	movw	r24, r26
     ede:	0e 94 96 08 	call	0x112c	; 0x112c <__udivmodsi4>
     ee2:	da 01       	movw	r26, r20
     ee4:	c9 01       	movw	r24, r18
     ee6:	9c 01       	movw	r18, r24
     ee8:	ad 01       	movw	r20, r26
     eea:	8a 85       	ldd	r24, Y+10	; 0x0a
     eec:	9b 85       	ldd	r25, Y+11	; 0x0b
     eee:	ac 85       	ldd	r26, Y+12	; 0x0c
     ef0:	bd 85       	ldd	r27, Y+13	; 0x0d
     ef2:	bc 01       	movw	r22, r24
     ef4:	cd 01       	movw	r24, r26
     ef6:	0e 94 96 08 	call	0x112c	; 0x112c <__udivmodsi4>
     efa:	da 01       	movw	r26, r20
     efc:	c9 01       	movw	r24, r18
     efe:	8d 83       	std	Y+5, r24	; 0x05
     f00:	9e 83       	std	Y+6, r25	; 0x06
     f02:	af 83       	std	Y+7, r26	; 0x07
     f04:	b8 87       	std	Y+8, r27	; 0x08
     f06:	8d 81       	ldd	r24, Y+5	; 0x05
     f08:	9e 81       	ldd	r25, Y+6	; 0x06
     f0a:	af 81       	ldd	r26, Y+7	; 0x07
     f0c:	b8 85       	ldd	r27, Y+8	; 0x08
     f0e:	81 30       	cpi	r24, 0x01	; 1
     f10:	91 40       	sbci	r25, 0x01	; 1
     f12:	a1 05       	cpc	r26, r1
     f14:	b1 05       	cpc	r27, r1
     f16:	28 f0       	brcs	.+10     	; 0xf22 <Timers_SetCounter+0x28a>
     f18:	19 82       	std	Y+1, r1	; 0x01
     f1a:	1a 82       	std	Y+2, r1	; 0x02
     f1c:	1b 82       	std	Y+3, r1	; 0x03
     f1e:	1c 82       	std	Y+4, r1	; 0x04
     f20:	32 c0       	rjmp	.+100    	; 0xf86 <Timers_SetCounter+0x2ee>
     f22:	20 e0       	ldi	r18, 0x00	; 0
     f24:	31 e0       	ldi	r19, 0x01	; 1
     f26:	40 e0       	ldi	r20, 0x00	; 0
     f28:	50 e0       	ldi	r21, 0x00	; 0
     f2a:	8d 81       	ldd	r24, Y+5	; 0x05
     f2c:	9e 81       	ldd	r25, Y+6	; 0x06
     f2e:	af 81       	ldd	r26, Y+7	; 0x07
     f30:	b8 85       	ldd	r27, Y+8	; 0x08
     f32:	79 01       	movw	r14, r18
     f34:	8a 01       	movw	r16, r20
     f36:	e8 1a       	sub	r14, r24
     f38:	f9 0a       	sbc	r15, r25
     f3a:	0a 0b       	sbc	r16, r26
     f3c:	1b 0b       	sbc	r17, r27
     f3e:	d8 01       	movw	r26, r16
     f40:	c7 01       	movw	r24, r14
     f42:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <Gv_Count>
     f46:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <Gv_Count+0x1>
     f4a:	a0 93 9a 00 	sts	0x009A, r26	; 0x80009a <Gv_Count+0x2>
     f4e:	b0 93 9b 00 	sts	0x009B, r27	; 0x80009b <Gv_Count+0x3>
     f52:	24 e4       	ldi	r18, 0x44	; 68
     f54:	30 e0       	ldi	r19, 0x00	; 0
     f56:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <Gv_Count>
     f5a:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <Gv_Count+0x1>
     f5e:	a0 91 9a 00 	lds	r26, 0x009A	; 0x80009a <Gv_Count+0x2>
     f62:	b0 91 9b 00 	lds	r27, 0x009B	; 0x80009b <Gv_Count+0x3>
     f66:	f9 01       	movw	r30, r18
     f68:	80 83       	st	Z, r24
     f6a:	81 e0       	ldi	r24, 0x01	; 1
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	a0 e0       	ldi	r26, 0x00	; 0
     f70:	b0 e0       	ldi	r27, 0x00	; 0
     f72:	89 83       	std	Y+1, r24	; 0x01
     f74:	9a 83       	std	Y+2, r25	; 0x02
     f76:	ab 83       	std	Y+3, r26	; 0x03
     f78:	bc 83       	std	Y+4, r27	; 0x04
     f7a:	05 c0       	rjmp	.+10     	; 0xf86 <Timers_SetCounter+0x2ee>
     f7c:	19 82       	std	Y+1, r1	; 0x01
     f7e:	1a 82       	std	Y+2, r1	; 0x02
     f80:	1b 82       	std	Y+3, r1	; 0x03
     f82:	1c 82       	std	Y+4, r1	; 0x04
     f84:	00 00       	nop
     f86:	8a 85       	ldd	r24, Y+10	; 0x0a
     f88:	9b 85       	ldd	r25, Y+11	; 0x0b
     f8a:	ac 85       	ldd	r26, Y+12	; 0x0c
     f8c:	bd 85       	ldd	r27, Y+13	; 0x0d
     f8e:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <Gv_Count>
     f92:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <Gv_Count+0x1>
     f96:	a0 93 9a 00 	sts	0x009A, r26	; 0x80009a <Gv_Count+0x2>
     f9a:	b0 93 9b 00 	sts	0x009B, r27	; 0x80009b <Gv_Count+0x3>
     f9e:	89 81       	ldd	r24, Y+1	; 0x01
     fa0:	2d 96       	adiw	r28, 0x0d	; 13
     fa2:	0f b6       	in	r0, 0x3f	; 63
     fa4:	f8 94       	cli
     fa6:	de bf       	out	0x3e, r29	; 62
     fa8:	0f be       	out	0x3f, r0	; 63
     faa:	cd bf       	out	0x3d, r28	; 61
     fac:	df 91       	pop	r29
     fae:	cf 91       	pop	r28
     fb0:	1f 91       	pop	r17
     fb2:	0f 91       	pop	r16
     fb4:	ff 90       	pop	r15
     fb6:	ef 90       	pop	r14
     fb8:	08 95       	ret

00000fba <Timers_Start>:
     fba:	cf 93       	push	r28
     fbc:	df 93       	push	r29
     fbe:	1f 92       	push	r1
     fc0:	cd b7       	in	r28, 0x3d	; 61
     fc2:	de b7       	in	r29, 0x3e	; 62
     fc4:	89 83       	std	Y+1, r24	; 0x01
     fc6:	89 81       	ldd	r24, Y+1	; 0x01
     fc8:	88 2f       	mov	r24, r24
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	81 30       	cpi	r24, 0x01	; 1
     fce:	91 05       	cpc	r25, r1
     fd0:	99 f0       	breq	.+38     	; 0xff8 <Timers_Start+0x3e>
     fd2:	82 30       	cpi	r24, 0x02	; 2
     fd4:	91 05       	cpc	r25, r1
     fd6:	e9 f0       	breq	.+58     	; 0x1012 <Timers_Start+0x58>
     fd8:	89 2b       	or	r24, r25
     fda:	09 f0       	breq	.+2      	; 0xfde <Timers_Start+0x24>
     fdc:	27 c0       	rjmp	.+78     	; 0x102c <Timers_Start+0x72>
     fde:	83 e5       	ldi	r24, 0x53	; 83
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	23 e5       	ldi	r18, 0x53	; 83
     fe4:	30 e0       	ldi	r19, 0x00	; 0
     fe6:	f9 01       	movw	r30, r18
     fe8:	20 81       	ld	r18, Z
     fea:	28 7f       	andi	r18, 0xF8	; 248
     fec:	30 91 60 00 	lds	r19, 0x0060	; 0x800060 <Gv_PrescallerTimer0_Mask>
     ff0:	23 2b       	or	r18, r19
     ff2:	fc 01       	movw	r30, r24
     ff4:	20 83       	st	Z, r18
     ff6:	1a c0       	rjmp	.+52     	; 0x102c <Timers_Start+0x72>
     ff8:	8e e4       	ldi	r24, 0x4E	; 78
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	2e e4       	ldi	r18, 0x4E	; 78
     ffe:	30 e0       	ldi	r19, 0x00	; 0
    1000:	f9 01       	movw	r30, r18
    1002:	20 81       	ld	r18, Z
    1004:	28 7f       	andi	r18, 0xF8	; 248
    1006:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <Gv_PrescallerTimer1_Mask>
    100a:	23 2b       	or	r18, r19
    100c:	fc 01       	movw	r30, r24
    100e:	20 83       	st	Z, r18
    1010:	0d c0       	rjmp	.+26     	; 0x102c <Timers_Start+0x72>
    1012:	85 e4       	ldi	r24, 0x45	; 69
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	25 e4       	ldi	r18, 0x45	; 69
    1018:	30 e0       	ldi	r19, 0x00	; 0
    101a:	f9 01       	movw	r30, r18
    101c:	20 81       	ld	r18, Z
    101e:	28 7f       	andi	r18, 0xF8	; 248
    1020:	30 91 62 00 	lds	r19, 0x0062	; 0x800062 <Gv_PrescallerTimer2_Mask>
    1024:	23 2b       	or	r18, r19
    1026:	fc 01       	movw	r30, r24
    1028:	20 83       	st	Z, r18
    102a:	00 00       	nop
    102c:	81 e0       	ldi	r24, 0x01	; 1
    102e:	0f 90       	pop	r0
    1030:	df 91       	pop	r29
    1032:	cf 91       	pop	r28
    1034:	08 95       	ret

00001036 <Timers_SetCallBack>:
    1036:	cf 93       	push	r28
    1038:	df 93       	push	r29
    103a:	00 d0       	rcall	.+0      	; 0x103c <Timers_SetCallBack+0x6>
    103c:	cd b7       	in	r28, 0x3d	; 61
    103e:	de b7       	in	r29, 0x3e	; 62
    1040:	9a 83       	std	Y+2, r25	; 0x02
    1042:	89 83       	std	Y+1, r24	; 0x01
    1044:	89 81       	ldd	r24, Y+1	; 0x01
    1046:	9a 81       	ldd	r25, Y+2	; 0x02
    1048:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <gPtrCallBk+0x1>
    104c:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <gPtrCallBk>
    1050:	00 00       	nop
    1052:	0f 90       	pop	r0
    1054:	0f 90       	pop	r0
    1056:	df 91       	pop	r29
    1058:	cf 91       	pop	r28
    105a:	08 95       	ret

0000105c <__vector_9>:
    105c:	1f 92       	push	r1
    105e:	0f 92       	push	r0
    1060:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1064:	0f 92       	push	r0
    1066:	11 24       	eor	r1, r1
    1068:	2f 93       	push	r18
    106a:	3f 93       	push	r19
    106c:	4f 93       	push	r20
    106e:	5f 93       	push	r21
    1070:	6f 93       	push	r22
    1072:	7f 93       	push	r23
    1074:	8f 93       	push	r24
    1076:	9f 93       	push	r25
    1078:	af 93       	push	r26
    107a:	bf 93       	push	r27
    107c:	ef 93       	push	r30
    107e:	ff 93       	push	r31
    1080:	cf 93       	push	r28
    1082:	df 93       	push	r29
    1084:	cd b7       	in	r28, 0x3d	; 61
    1086:	de b7       	in	r29, 0x3e	; 62
    1088:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <gPtrCallBk>
    108c:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <gPtrCallBk+0x1>
    1090:	89 2b       	or	r24, r25
    1092:	31 f0       	breq	.+12     	; 0x10a0 <__vector_9+0x44>
    1094:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <gPtrCallBk>
    1098:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <gPtrCallBk+0x1>
    109c:	fc 01       	movw	r30, r24
    109e:	09 95       	icall
    10a0:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <Gv_Count>
    10a4:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <Gv_Count+0x1>
    10a8:	a0 91 9a 00 	lds	r26, 0x009A	; 0x80009a <Gv_Count+0x2>
    10ac:	b0 91 9b 00 	lds	r27, 0x009B	; 0x80009b <Gv_Count+0x3>
    10b0:	ac 01       	movw	r20, r24
    10b2:	bd 01       	movw	r22, r26
    10b4:	81 e0       	ldi	r24, 0x01	; 1
    10b6:	0e 94 4c 06 	call	0xc98	; 0xc98 <Timers_SetCounter>
    10ba:	00 00       	nop
    10bc:	df 91       	pop	r29
    10be:	cf 91       	pop	r28
    10c0:	ff 91       	pop	r31
    10c2:	ef 91       	pop	r30
    10c4:	bf 91       	pop	r27
    10c6:	af 91       	pop	r26
    10c8:	9f 91       	pop	r25
    10ca:	8f 91       	pop	r24
    10cc:	7f 91       	pop	r23
    10ce:	6f 91       	pop	r22
    10d0:	5f 91       	pop	r21
    10d2:	4f 91       	pop	r20
    10d4:	3f 91       	pop	r19
    10d6:	2f 91       	pop	r18
    10d8:	0f 90       	pop	r0
    10da:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    10de:	0f 90       	pop	r0
    10e0:	1f 90       	pop	r1
    10e2:	18 95       	reti

000010e4 <__mulsi3>:
    10e4:	db 01       	movw	r26, r22
    10e6:	8f 93       	push	r24
    10e8:	9f 93       	push	r25
    10ea:	0e 94 b8 08 	call	0x1170	; 0x1170 <__muluhisi3>
    10ee:	bf 91       	pop	r27
    10f0:	af 91       	pop	r26
    10f2:	a2 9f       	mul	r26, r18
    10f4:	80 0d       	add	r24, r0
    10f6:	91 1d       	adc	r25, r1
    10f8:	a3 9f       	mul	r26, r19
    10fa:	90 0d       	add	r25, r0
    10fc:	b2 9f       	mul	r27, r18
    10fe:	90 0d       	add	r25, r0
    1100:	11 24       	eor	r1, r1
    1102:	08 95       	ret

00001104 <__udivmodhi4>:
    1104:	aa 1b       	sub	r26, r26
    1106:	bb 1b       	sub	r27, r27
    1108:	51 e1       	ldi	r21, 0x11	; 17
    110a:	07 c0       	rjmp	.+14     	; 0x111a <__udivmodhi4_ep>

0000110c <__udivmodhi4_loop>:
    110c:	aa 1f       	adc	r26, r26
    110e:	bb 1f       	adc	r27, r27
    1110:	a6 17       	cp	r26, r22
    1112:	b7 07       	cpc	r27, r23
    1114:	10 f0       	brcs	.+4      	; 0x111a <__udivmodhi4_ep>
    1116:	a6 1b       	sub	r26, r22
    1118:	b7 0b       	sbc	r27, r23

0000111a <__udivmodhi4_ep>:
    111a:	88 1f       	adc	r24, r24
    111c:	99 1f       	adc	r25, r25
    111e:	5a 95       	dec	r21
    1120:	a9 f7       	brne	.-22     	; 0x110c <__udivmodhi4_loop>
    1122:	80 95       	com	r24
    1124:	90 95       	com	r25
    1126:	bc 01       	movw	r22, r24
    1128:	cd 01       	movw	r24, r26
    112a:	08 95       	ret

0000112c <__udivmodsi4>:
    112c:	a1 e2       	ldi	r26, 0x21	; 33
    112e:	1a 2e       	mov	r1, r26
    1130:	aa 1b       	sub	r26, r26
    1132:	bb 1b       	sub	r27, r27
    1134:	fd 01       	movw	r30, r26
    1136:	0d c0       	rjmp	.+26     	; 0x1152 <__udivmodsi4_ep>

00001138 <__udivmodsi4_loop>:
    1138:	aa 1f       	adc	r26, r26
    113a:	bb 1f       	adc	r27, r27
    113c:	ee 1f       	adc	r30, r30
    113e:	ff 1f       	adc	r31, r31
    1140:	a2 17       	cp	r26, r18
    1142:	b3 07       	cpc	r27, r19
    1144:	e4 07       	cpc	r30, r20
    1146:	f5 07       	cpc	r31, r21
    1148:	20 f0       	brcs	.+8      	; 0x1152 <__udivmodsi4_ep>
    114a:	a2 1b       	sub	r26, r18
    114c:	b3 0b       	sbc	r27, r19
    114e:	e4 0b       	sbc	r30, r20
    1150:	f5 0b       	sbc	r31, r21

00001152 <__udivmodsi4_ep>:
    1152:	66 1f       	adc	r22, r22
    1154:	77 1f       	adc	r23, r23
    1156:	88 1f       	adc	r24, r24
    1158:	99 1f       	adc	r25, r25
    115a:	1a 94       	dec	r1
    115c:	69 f7       	brne	.-38     	; 0x1138 <__udivmodsi4_loop>
    115e:	60 95       	com	r22
    1160:	70 95       	com	r23
    1162:	80 95       	com	r24
    1164:	90 95       	com	r25
    1166:	9b 01       	movw	r18, r22
    1168:	ac 01       	movw	r20, r24
    116a:	bd 01       	movw	r22, r26
    116c:	cf 01       	movw	r24, r30
    116e:	08 95       	ret

00001170 <__muluhisi3>:
    1170:	0e 94 c3 08 	call	0x1186	; 0x1186 <__umulhisi3>
    1174:	a5 9f       	mul	r26, r21
    1176:	90 0d       	add	r25, r0
    1178:	b4 9f       	mul	r27, r20
    117a:	90 0d       	add	r25, r0
    117c:	a4 9f       	mul	r26, r20
    117e:	80 0d       	add	r24, r0
    1180:	91 1d       	adc	r25, r1
    1182:	11 24       	eor	r1, r1
    1184:	08 95       	ret

00001186 <__umulhisi3>:
    1186:	a2 9f       	mul	r26, r18
    1188:	b0 01       	movw	r22, r0
    118a:	b3 9f       	mul	r27, r19
    118c:	c0 01       	movw	r24, r0
    118e:	a3 9f       	mul	r26, r19
    1190:	70 0d       	add	r23, r0
    1192:	81 1d       	adc	r24, r1
    1194:	11 24       	eor	r1, r1
    1196:	91 1d       	adc	r25, r1
    1198:	b2 9f       	mul	r27, r18
    119a:	70 0d       	add	r23, r0
    119c:	81 1d       	adc	r24, r1
    119e:	11 24       	eor	r1, r1
    11a0:	91 1d       	adc	r25, r1
    11a2:	08 95       	ret

000011a4 <_exit>:
    11a4:	f8 94       	cli

000011a6 <__stop_program>:
    11a6:	ff cf       	rjmp	.-2      	; 0x11a6 <__stop_program>
