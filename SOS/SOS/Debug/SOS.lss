
SOS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000011cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  000011cc  00001260  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000037  0080006e  0080006e  0000126e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000126e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000012a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b8  00000000  00000000  000012dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d3c  00000000  00000000  00001594  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b3e  00000000  00000000  000032d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001c8d  00000000  00000000  00003e0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b9c  00000000  00000000  00005a9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000112e  00000000  00000000  00006638  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001904  00000000  00000000  00007766  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000240  00000000  00000000  0000906a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec ec       	ldi	r30, 0xCC	; 204
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ae 36       	cpi	r26, 0x6E	; 110
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	ae e6       	ldi	r26, 0x6E	; 110
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a5 3a       	cpi	r26, 0xA5	; 165
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 75 00 	call	0xea	; 0xea <main>
      8a:	0c 94 e4 08 	jmp	0x11c8	; 0x11c8 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Task1>:
#include "SOS.h"
#include "Led.h"


void Task1(void)
{
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	cd b7       	in	r28, 0x3d	; 61
      98:	de b7       	in	r29, 0x3e	; 62
	Led_Tog(LED0);
      9a:	80 e1       	ldi	r24, 0x10	; 16
      9c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <Led_Tog>
}
      a0:	00 00       	nop
      a2:	df 91       	pop	r29
      a4:	cf 91       	pop	r28
      a6:	08 95       	ret

000000a8 <Task2>:

void Task2(void)
{
      a8:	cf 93       	push	r28
      aa:	df 93       	push	r29
      ac:	cd b7       	in	r28, 0x3d	; 61
      ae:	de b7       	in	r29, 0x3e	; 62
	Led_Tog(LED1);
      b0:	80 e2       	ldi	r24, 0x20	; 32
      b2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <Led_Tog>
}
      b6:	00 00       	nop
      b8:	df 91       	pop	r29
      ba:	cf 91       	pop	r28
      bc:	08 95       	ret

000000be <Task3>:

void Task3(void)
{
      be:	cf 93       	push	r28
      c0:	df 93       	push	r29
      c2:	cd b7       	in	r28, 0x3d	; 61
      c4:	de b7       	in	r29, 0x3e	; 62
	Led_Tog(LED2);
      c6:	80 e4       	ldi	r24, 0x40	; 64
      c8:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <Led_Tog>
}
      cc:	00 00       	nop
      ce:	df 91       	pop	r29
      d0:	cf 91       	pop	r28
      d2:	08 95       	ret

000000d4 <Task4>:

void Task4(void)
{
      d4:	cf 93       	push	r28
      d6:	df 93       	push	r29
      d8:	cd b7       	in	r28, 0x3d	; 61
      da:	de b7       	in	r29, 0x3e	; 62
	
	Led_Tog(LED3);
      dc:	80 e8       	ldi	r24, 0x80	; 128
      de:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <Led_Tog>
}
      e2:	00 00       	nop
      e4:	df 91       	pop	r29
      e6:	cf 91       	pop	r28
      e8:	08 95       	ret

000000ea <main>:


int main(void)
{
      ea:	cf 93       	push	r28
      ec:	df 93       	push	r29
      ee:	cd b7       	in	r28, 0x3d	; 61
      f0:	de b7       	in	r29, 0x3e	; 62
	/* Initializing the Led To indicate The Tasks */
	Led_Init(LED0);
      f2:	80 e1       	ldi	r24, 0x10	; 16
      f4:	0e 94 aa 00 	call	0x154	; 0x154 <Led_Init>
	Led_Init(LED1);
      f8:	80 e2       	ldi	r24, 0x20	; 32
      fa:	0e 94 aa 00 	call	0x154	; 0x154 <Led_Init>
	Led_Init(LED2);
      fe:	80 e4       	ldi	r24, 0x40	; 64
     100:	0e 94 aa 00 	call	0x154	; 0x154 <Led_Init>
	Led_Init(LED3);
     104:	80 e8       	ldi	r24, 0x80	; 128
     106:	0e 94 aa 00 	call	0x154	; 0x154 <Led_Init>
	
	Sos_Init();	
     10a:	0e 94 44 01 	call	0x288	; 0x288 <Sos_Init>
	
	Sos_Create_Task(Task1,5,300);
     10e:	4c e2       	ldi	r20, 0x2C	; 44
     110:	51 e0       	ldi	r21, 0x01	; 1
     112:	65 e0       	ldi	r22, 0x05	; 5
     114:	89 e4       	ldi	r24, 0x49	; 73
     116:	90 e0       	ldi	r25, 0x00	; 0
     118:	0e 94 c4 01 	call	0x388	; 0x388 <Sos_Create_Task>
	Sos_Create_Task(Task2,4,150);
     11c:	46 e9       	ldi	r20, 0x96	; 150
     11e:	50 e0       	ldi	r21, 0x00	; 0
     120:	64 e0       	ldi	r22, 0x04	; 4
     122:	84 e5       	ldi	r24, 0x54	; 84
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	0e 94 c4 01 	call	0x388	; 0x388 <Sos_Create_Task>
	Sos_Create_Task(Task3,3,75);
     12a:	4b e4       	ldi	r20, 0x4B	; 75
     12c:	50 e0       	ldi	r21, 0x00	; 0
     12e:	63 e0       	ldi	r22, 0x03	; 3
     130:	8f e5       	ldi	r24, 0x5F	; 95
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	0e 94 c4 01 	call	0x388	; 0x388 <Sos_Create_Task>
	Sos_Create_Task(Task4,2,30);
     138:	4e e1       	ldi	r20, 0x1E	; 30
     13a:	50 e0       	ldi	r21, 0x00	; 0
     13c:	62 e0       	ldi	r22, 0x02	; 2
     13e:	8a e6       	ldi	r24, 0x6A	; 106
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	0e 94 c4 01 	call	0x388	; 0x388 <Sos_Create_Task>
		
	Sos_Run();
     146:	0e 94 58 02 	call	0x4b0	; 0x4b0 <Sos_Run>
     14a:	80 e0       	ldi	r24, 0x00	; 0
     14c:	90 e0       	ldi	r25, 0x00	; 0
}
     14e:	df 91       	pop	r29
     150:	cf 91       	pop	r28
     152:	08 95       	ret

00000154 <Led_Init>:
     154:	cf 93       	push	r28
     156:	df 93       	push	r29
     158:	1f 92       	push	r1
     15a:	cd b7       	in	r28, 0x3d	; 61
     15c:	de b7       	in	r29, 0x3e	; 62
     15e:	89 83       	std	Y+1, r24	; 0x01
     160:	89 81       	ldd	r24, Y+1	; 0x01
     162:	88 2f       	mov	r24, r24
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	80 32       	cpi	r24, 0x20	; 32
     168:	91 05       	cpc	r25, r1
     16a:	c1 f0       	breq	.+48     	; 0x19c <Led_Init+0x48>
     16c:	81 32       	cpi	r24, 0x21	; 33
     16e:	91 05       	cpc	r25, r1
     170:	1c f4       	brge	.+6      	; 0x178 <Led_Init+0x24>
     172:	40 97       	sbiw	r24, 0x10	; 16
     174:	41 f0       	breq	.+16     	; 0x186 <Led_Init+0x32>
     176:	33 c0       	rjmp	.+102    	; 0x1de <Led_Init+0x8a>
     178:	80 34       	cpi	r24, 0x40	; 64
     17a:	91 05       	cpc	r25, r1
     17c:	d1 f0       	breq	.+52     	; 0x1b2 <Led_Init+0x5e>
     17e:	80 38       	cpi	r24, 0x80	; 128
     180:	91 05       	cpc	r25, r1
     182:	11 f1       	breq	.+68     	; 0x1c8 <Led_Init+0x74>
     184:	2c c0       	rjmp	.+88     	; 0x1de <Led_Init+0x8a>
     186:	4f ef       	ldi	r20, 0xFF	; 255
     188:	60 e1       	ldi	r22, 0x10	; 16
     18a:	81 e0       	ldi	r24, 0x01	; 1
     18c:	0e 94 3f 03 	call	0x67e	; 0x67e <Gpio_PinDirection>
     190:	40 e0       	ldi	r20, 0x00	; 0
     192:	60 e1       	ldi	r22, 0x10	; 16
     194:	81 e0       	ldi	r24, 0x01	; 1
     196:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <Gpio_PinWrite>
     19a:	21 c0       	rjmp	.+66     	; 0x1de <Led_Init+0x8a>
     19c:	4f ef       	ldi	r20, 0xFF	; 255
     19e:	60 e2       	ldi	r22, 0x20	; 32
     1a0:	81 e0       	ldi	r24, 0x01	; 1
     1a2:	0e 94 3f 03 	call	0x67e	; 0x67e <Gpio_PinDirection>
     1a6:	40 e0       	ldi	r20, 0x00	; 0
     1a8:	60 e2       	ldi	r22, 0x20	; 32
     1aa:	81 e0       	ldi	r24, 0x01	; 1
     1ac:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <Gpio_PinWrite>
     1b0:	16 c0       	rjmp	.+44     	; 0x1de <Led_Init+0x8a>
     1b2:	4f ef       	ldi	r20, 0xFF	; 255
     1b4:	60 e4       	ldi	r22, 0x40	; 64
     1b6:	81 e0       	ldi	r24, 0x01	; 1
     1b8:	0e 94 3f 03 	call	0x67e	; 0x67e <Gpio_PinDirection>
     1bc:	40 e0       	ldi	r20, 0x00	; 0
     1be:	60 e4       	ldi	r22, 0x40	; 64
     1c0:	81 e0       	ldi	r24, 0x01	; 1
     1c2:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <Gpio_PinWrite>
     1c6:	0b c0       	rjmp	.+22     	; 0x1de <Led_Init+0x8a>
     1c8:	4f ef       	ldi	r20, 0xFF	; 255
     1ca:	60 e8       	ldi	r22, 0x80	; 128
     1cc:	81 e0       	ldi	r24, 0x01	; 1
     1ce:	0e 94 3f 03 	call	0x67e	; 0x67e <Gpio_PinDirection>
     1d2:	40 e0       	ldi	r20, 0x00	; 0
     1d4:	60 e8       	ldi	r22, 0x80	; 128
     1d6:	81 e0       	ldi	r24, 0x01	; 1
     1d8:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <Gpio_PinWrite>
     1dc:	00 00       	nop
     1de:	00 00       	nop
     1e0:	0f 90       	pop	r0
     1e2:	df 91       	pop	r29
     1e4:	cf 91       	pop	r28
     1e6:	08 95       	ret

000001e8 <Led_Tog>:
     1e8:	cf 93       	push	r28
     1ea:	df 93       	push	r29
     1ec:	1f 92       	push	r1
     1ee:	cd b7       	in	r28, 0x3d	; 61
     1f0:	de b7       	in	r29, 0x3e	; 62
     1f2:	89 83       	std	Y+1, r24	; 0x01
     1f4:	89 81       	ldd	r24, Y+1	; 0x01
     1f6:	88 2f       	mov	r24, r24
     1f8:	90 e0       	ldi	r25, 0x00	; 0
     1fa:	80 32       	cpi	r24, 0x20	; 32
     1fc:	91 05       	cpc	r25, r1
     1fe:	91 f0       	breq	.+36     	; 0x224 <Led_Tog+0x3c>
     200:	81 32       	cpi	r24, 0x21	; 33
     202:	91 05       	cpc	r25, r1
     204:	1c f4       	brge	.+6      	; 0x20c <Led_Tog+0x24>
     206:	40 97       	sbiw	r24, 0x10	; 16
     208:	41 f0       	breq	.+16     	; 0x21a <Led_Tog+0x32>
     20a:	1b c0       	rjmp	.+54     	; 0x242 <Led_Tog+0x5a>
     20c:	80 34       	cpi	r24, 0x40	; 64
     20e:	91 05       	cpc	r25, r1
     210:	71 f0       	breq	.+28     	; 0x22e <Led_Tog+0x46>
     212:	80 38       	cpi	r24, 0x80	; 128
     214:	91 05       	cpc	r25, r1
     216:	81 f0       	breq	.+32     	; 0x238 <Led_Tog+0x50>
     218:	14 c0       	rjmp	.+40     	; 0x242 <Led_Tog+0x5a>
     21a:	60 e1       	ldi	r22, 0x10	; 16
     21c:	81 e0       	ldi	r24, 0x01	; 1
     21e:	0e 94 8a 04 	call	0x914	; 0x914 <Gpio_PinToggle>
     222:	0f c0       	rjmp	.+30     	; 0x242 <Led_Tog+0x5a>
     224:	60 e2       	ldi	r22, 0x20	; 32
     226:	81 e0       	ldi	r24, 0x01	; 1
     228:	0e 94 8a 04 	call	0x914	; 0x914 <Gpio_PinToggle>
     22c:	0a c0       	rjmp	.+20     	; 0x242 <Led_Tog+0x5a>
     22e:	60 e4       	ldi	r22, 0x40	; 64
     230:	81 e0       	ldi	r24, 0x01	; 1
     232:	0e 94 8a 04 	call	0x914	; 0x914 <Gpio_PinToggle>
     236:	05 c0       	rjmp	.+10     	; 0x242 <Led_Tog+0x5a>
     238:	60 e8       	ldi	r22, 0x80	; 128
     23a:	81 e0       	ldi	r24, 0x01	; 1
     23c:	0e 94 8a 04 	call	0x914	; 0x914 <Gpio_PinToggle>
     240:	00 00       	nop
     242:	00 00       	nop
     244:	0f 90       	pop	r0
     246:	df 91       	pop	r29
     248:	cf 91       	pop	r28
     24a:	08 95       	ret

0000024c <TimerSysticCallback>:
 * Function : TimerSysticCallback
 * Description: this function is Called by the ISR to Update the System Ticks
 * @return void 
 */
static void TimerSysticCallback(void)
{
     24c:	cf 93       	push	r28
     24e:	df 93       	push	r29
     250:	cd b7       	in	r28, 0x3d	; 61
     252:	de b7       	in	r29, 0x3e	; 62
	Systick++;
     254:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <Systick>
     258:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <Systick+0x1>
     25c:	01 96       	adiw	r24, 0x01	; 1
     25e:	90 93 93 00 	sts	0x0093, r25	; 0x800093 <Systick+0x1>
     262:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <Systick>
	if (Systick == MAX_SYSTICK_VALUS)
     266:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <Systick>
     26a:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <Systick+0x1>
     26e:	88 3e       	cpi	r24, 0xE8	; 232
     270:	9d 4f       	sbci	r25, 0xFD	; 253
     272:	31 f4       	brne	.+12     	; 0x280 <TimerSysticCallback+0x34>
	{
		Systick = INITIAL_ONE;
     274:	81 e0       	ldi	r24, 0x01	; 1
     276:	90 e0       	ldi	r25, 0x00	; 0
     278:	90 93 93 00 	sts	0x0093, r25	; 0x800093 <Systick+0x1>
     27c:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <Systick>
	}else
	{
		//Do Nothing
	}
}
     280:	00 00       	nop
     282:	df 91       	pop	r29
     284:	cf 91       	pop	r28
     286:	08 95       	ret

00000288 <Sos_Init>:
 * Function : Sos_Init
 * Description: this function is to initialize the SOS
 * @return Status: of the initialization according to the Error handling macros 
 */
EnumSOSError_type Sos_Init(void)
{
     288:	cf 93       	push	r28
     28a:	df 93       	push	r29
     28c:	00 d0       	rcall	.+0      	; 0x28e <Sos_Init+0x6>
     28e:	00 d0       	rcall	.+0      	; 0x290 <Sos_Init+0x8>
     290:	00 d0       	rcall	.+0      	; 0x292 <Sos_Init+0xa>
     292:	cd b7       	in	r28, 0x3d	; 61
     294:	de b7       	in	r29, 0x3e	; 62
	uint8 index;
	EnumSOSError_type API_State = OK_T;
     296:	1a 82       	std	Y+2, r1	; 0x02
	Systick = INITIAL_ONE;
     298:	81 e0       	ldi	r24, 0x01	; 1
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	90 93 93 00 	sts	0x0093, r25	; 0x800093 <Systick+0x1>
     2a0:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <Systick>
	uint32 TimerCount_Time;
	
	/* Enable the Global Interrupt */
	Interrupts_On();
     2a4:	0e 94 d5 04 	call	0x9aa	; 0x9aa <Interrupts_On>
	
	/* Set the Sleep Mode To Idle */
	set_sleep_mode(SLEEP_MODE_IDLE);
     2a8:	85 e5       	ldi	r24, 0x55	; 85
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	25 e5       	ldi	r18, 0x55	; 85
     2ae:	30 e0       	ldi	r19, 0x00	; 0
     2b0:	f9 01       	movw	r30, r18
     2b2:	20 81       	ld	r18, Z
     2b4:	2f 78       	andi	r18, 0x8F	; 143
     2b6:	fc 01       	movw	r30, r24
     2b8:	20 83       	st	Z, r18

	/* Set the Systick of the Timer ISR */
	TimerCount_Time = MILLISECONSD_TO_MICROSECONSD_FACTOR * SYSTEM_TICK_MS;
     2ba:	88 ee       	ldi	r24, 0xE8	; 232
     2bc:	93 e0       	ldi	r25, 0x03	; 3
     2be:	a0 e0       	ldi	r26, 0x00	; 0
     2c0:	b0 e0       	ldi	r27, 0x00	; 0
     2c2:	8b 83       	std	Y+3, r24	; 0x03
     2c4:	9c 83       	std	Y+4, r25	; 0x04
     2c6:	ad 83       	std	Y+5, r26	; 0x05
     2c8:	be 83       	std	Y+6, r27	; 0x06
	
	/* Set the timer Call Back Value */
	Timers_SetCallBack(TimerSysticCallback);
     2ca:	86 e2       	ldi	r24, 0x26	; 38
     2cc:	91 e0       	ldi	r25, 0x01	; 1
     2ce:	0e 94 2d 08 	call	0x105a	; 0x105a <Timers_SetCallBack>
	
	/* Initialize the Buffer used in the SOS */
	for(index = INITIAL_ZERO; index < SOS_MAX_NUMBER_OF_TASKS ; index++)
     2d2:	19 82       	std	Y+1, r1	; 0x01
     2d4:	3d c0       	rjmp	.+122    	; 0x350 <Sos_Init+0xc8>
	{
		StrArrOfTasks[index].Periodicity = INITIAL_ZERO;
     2d6:	89 81       	ldd	r24, Y+1	; 0x01
     2d8:	28 2f       	mov	r18, r24
     2da:	30 e0       	ldi	r19, 0x00	; 0
     2dc:	c9 01       	movw	r24, r18
     2de:	88 0f       	add	r24, r24
     2e0:	99 1f       	adc	r25, r25
     2e2:	82 0f       	add	r24, r18
     2e4:	93 1f       	adc	r25, r19
     2e6:	88 0f       	add	r24, r24
     2e8:	99 1f       	adc	r25, r25
     2ea:	8f 58       	subi	r24, 0x8F	; 143
     2ec:	9f 4f       	sbci	r25, 0xFF	; 255
     2ee:	fc 01       	movw	r30, r24
     2f0:	11 82       	std	Z+1, r1	; 0x01
     2f2:	10 82       	st	Z, r1
		StrArrOfTasks[index].Priority = INITIAL_ZERO;
     2f4:	89 81       	ldd	r24, Y+1	; 0x01
     2f6:	28 2f       	mov	r18, r24
     2f8:	30 e0       	ldi	r19, 0x00	; 0
     2fa:	c9 01       	movw	r24, r18
     2fc:	88 0f       	add	r24, r24
     2fe:	99 1f       	adc	r25, r25
     300:	82 0f       	add	r24, r18
     302:	93 1f       	adc	r25, r19
     304:	88 0f       	add	r24, r24
     306:	99 1f       	adc	r25, r25
     308:	80 59       	subi	r24, 0x90	; 144
     30a:	9f 4f       	sbci	r25, 0xFF	; 255
     30c:	fc 01       	movw	r30, r24
     30e:	10 82       	st	Z, r1
		StrArrOfTasks[index].TaskState = TaskDormant;
     310:	89 81       	ldd	r24, Y+1	; 0x01
     312:	28 2f       	mov	r18, r24
     314:	30 e0       	ldi	r19, 0x00	; 0
     316:	c9 01       	movw	r24, r18
     318:	88 0f       	add	r24, r24
     31a:	99 1f       	adc	r25, r25
     31c:	82 0f       	add	r24, r18
     31e:	93 1f       	adc	r25, r19
     320:	88 0f       	add	r24, r24
     322:	99 1f       	adc	r25, r25
     324:	8d 58       	subi	r24, 0x8D	; 141
     326:	9f 4f       	sbci	r25, 0xFF	; 255
     328:	fc 01       	movw	r30, r24
     32a:	10 82       	st	Z, r1
		StrArrOfTasks[index].PtrTask = NULL;
     32c:	89 81       	ldd	r24, Y+1	; 0x01
     32e:	28 2f       	mov	r18, r24
     330:	30 e0       	ldi	r19, 0x00	; 0
     332:	c9 01       	movw	r24, r18
     334:	88 0f       	add	r24, r24
     336:	99 1f       	adc	r25, r25
     338:	82 0f       	add	r24, r18
     33a:	93 1f       	adc	r25, r19
     33c:	88 0f       	add	r24, r24
     33e:	99 1f       	adc	r25, r25
     340:	82 59       	subi	r24, 0x92	; 146
     342:	9f 4f       	sbci	r25, 0xFF	; 255
     344:	fc 01       	movw	r30, r24
     346:	11 82       	std	Z+1, r1	; 0x01
     348:	10 82       	st	Z, r1
	
	/* Set the timer Call Back Value */
	Timers_SetCallBack(TimerSysticCallback);
	
	/* Initialize the Buffer used in the SOS */
	for(index = INITIAL_ZERO; index < SOS_MAX_NUMBER_OF_TASKS ; index++)
     34a:	89 81       	ldd	r24, Y+1	; 0x01
     34c:	8f 5f       	subi	r24, 0xFF	; 255
     34e:	89 83       	std	Y+1, r24	; 0x01
     350:	89 81       	ldd	r24, Y+1	; 0x01
     352:	86 30       	cpi	r24, 0x06	; 6
     354:	08 f4       	brcc	.+2      	; 0x358 <Sos_Init+0xd0>
     356:	bf cf       	rjmp	.-130    	; 0x2d6 <Sos_Init+0x4e>
		/* Set the default resolution  */
		Timers_SetCounter(TIMER_0,TimerCount_Time);
		break;
		case TIMER_1:
		/* Initialize the Timer Used  */
		Timers_Init(&timer1_cfg_s);
     358:	83 e6       	ldi	r24, 0x63	; 99
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	0e 94 e6 04 	call	0x9cc	; 0x9cc <Timers_Init>
		
		/* Set the default resolution  */
		Timers_SetCounter(TIMER_1,TimerCount_Time);
     360:	8b 81       	ldd	r24, Y+3	; 0x03
     362:	9c 81       	ldd	r25, Y+4	; 0x04
     364:	ad 81       	ldd	r26, Y+5	; 0x05
     366:	be 81       	ldd	r27, Y+6	; 0x06
     368:	ac 01       	movw	r20, r24
     36a:	bd 01       	movw	r22, r26
     36c:	81 e0       	ldi	r24, 0x01	; 1
     36e:	0e 94 5e 06 	call	0xcbc	; 0xcbc <Timers_SetCounter>
		break;
     372:	00 00       	nop
		break;
		default:
		API_State = ERROR_INVALID_INPUT;
		break;
	}
	return API_State;
     374:	8a 81       	ldd	r24, Y+2	; 0x02
}
     376:	26 96       	adiw	r28, 0x06	; 6
     378:	0f b6       	in	r0, 0x3f	; 63
     37a:	f8 94       	cli
     37c:	de bf       	out	0x3e, r29	; 62
     37e:	0f be       	out	0x3f, r0	; 63
     380:	cd bf       	out	0x3d, r28	; 61
     382:	df 91       	pop	r29
     384:	cf 91       	pop	r28
     386:	08 95       	ret

00000388 <Sos_Create_Task>:
 * @param PtrFunc: 
					i/p: Pointer to the Task
 * @return EnmTMUError_t: the status of the function according to the Error handling Enum 
 */
EnumSOSError_type Sos_Create_Task(v_PtrFunc_v_type PtrFunc,uint8 priority, uint16 periodicity)
{
     388:	cf 93       	push	r28
     38a:	df 93       	push	r29
     38c:	cd b7       	in	r28, 0x3d	; 61
     38e:	de b7       	in	r29, 0x3e	; 62
     390:	27 97       	sbiw	r28, 0x07	; 7
     392:	0f b6       	in	r0, 0x3f	; 63
     394:	f8 94       	cli
     396:	de bf       	out	0x3e, r29	; 62
     398:	0f be       	out	0x3f, r0	; 63
     39a:	cd bf       	out	0x3d, r28	; 61
     39c:	9c 83       	std	Y+4, r25	; 0x04
     39e:	8b 83       	std	Y+3, r24	; 0x03
     3a0:	6d 83       	std	Y+5, r22	; 0x05
     3a2:	5f 83       	std	Y+7, r21	; 0x07
     3a4:	4e 83       	std	Y+6, r20	; 0x06
	EnumSOSError_type API_State = OK_T;
     3a6:	19 82       	std	Y+1, r1	; 0x01
	uint8 index;
	/* Protect from NUll pointer */ 
	if ( NULL != PtrFunc)
     3a8:	8b 81       	ldd	r24, Y+3	; 0x03
     3aa:	9c 81       	ldd	r25, Y+4	; 0x04
     3ac:	89 2b       	or	r24, r25
     3ae:	09 f4       	brne	.+2      	; 0x3b2 <Sos_Create_Task+0x2a>
     3b0:	73 c0       	rjmp	.+230    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
	{   /* Loop Through the Array of Tasks */ 
		for (index = INITIAL_ZERO ; index < SOS_MAX_NUMBER_OF_TASKS ; index++)
     3b2:	1a 82       	std	Y+2, r1	; 0x02
     3b4:	6c c0       	rjmp	.+216    	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
		{	 /* Find a task place that hasn't been Reserved by another task */ 
			if (StrArrOfTasks[index].PtrTask == NULL)
     3b6:	8a 81       	ldd	r24, Y+2	; 0x02
     3b8:	28 2f       	mov	r18, r24
     3ba:	30 e0       	ldi	r19, 0x00	; 0
     3bc:	c9 01       	movw	r24, r18
     3be:	88 0f       	add	r24, r24
     3c0:	99 1f       	adc	r25, r25
     3c2:	82 0f       	add	r24, r18
     3c4:	93 1f       	adc	r25, r19
     3c6:	88 0f       	add	r24, r24
     3c8:	99 1f       	adc	r25, r25
     3ca:	82 59       	subi	r24, 0x92	; 146
     3cc:	9f 4f       	sbci	r25, 0xFF	; 255
     3ce:	fc 01       	movw	r30, r24
     3d0:	80 81       	ld	r24, Z
     3d2:	91 81       	ldd	r25, Z+1	; 0x01
     3d4:	89 2b       	or	r24, r25
     3d6:	09 f0       	breq	.+2      	; 0x3da <Sos_Create_Task+0x52>
     3d8:	55 c0       	rjmp	.+170    	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
			{
				/* Set the Entered Values to the Empty Space in the Task's Array*/
				StrArrOfTasks[index].PtrTask = PtrFunc;
     3da:	8a 81       	ldd	r24, Y+2	; 0x02
     3dc:	28 2f       	mov	r18, r24
     3de:	30 e0       	ldi	r19, 0x00	; 0
     3e0:	c9 01       	movw	r24, r18
     3e2:	88 0f       	add	r24, r24
     3e4:	99 1f       	adc	r25, r25
     3e6:	82 0f       	add	r24, r18
     3e8:	93 1f       	adc	r25, r19
     3ea:	88 0f       	add	r24, r24
     3ec:	99 1f       	adc	r25, r25
     3ee:	82 59       	subi	r24, 0x92	; 146
     3f0:	9f 4f       	sbci	r25, 0xFF	; 255
     3f2:	2b 81       	ldd	r18, Y+3	; 0x03
     3f4:	3c 81       	ldd	r19, Y+4	; 0x04
     3f6:	fc 01       	movw	r30, r24
     3f8:	31 83       	std	Z+1, r19	; 0x01
     3fa:	20 83       	st	Z, r18
				StrArrOfTasks[index].Periodicity = periodicity;
     3fc:	8a 81       	ldd	r24, Y+2	; 0x02
     3fe:	28 2f       	mov	r18, r24
     400:	30 e0       	ldi	r19, 0x00	; 0
     402:	c9 01       	movw	r24, r18
     404:	88 0f       	add	r24, r24
     406:	99 1f       	adc	r25, r25
     408:	82 0f       	add	r24, r18
     40a:	93 1f       	adc	r25, r19
     40c:	88 0f       	add	r24, r24
     40e:	99 1f       	adc	r25, r25
     410:	8f 58       	subi	r24, 0x8F	; 143
     412:	9f 4f       	sbci	r25, 0xFF	; 255
     414:	2e 81       	ldd	r18, Y+6	; 0x06
     416:	3f 81       	ldd	r19, Y+7	; 0x07
     418:	fc 01       	movw	r30, r24
     41a:	31 83       	std	Z+1, r19	; 0x01
     41c:	20 83       	st	Z, r18
				StrArrOfTasks[index].TaskState = TaskReady;
     41e:	8a 81       	ldd	r24, Y+2	; 0x02
     420:	28 2f       	mov	r18, r24
     422:	30 e0       	ldi	r19, 0x00	; 0
     424:	c9 01       	movw	r24, r18
     426:	88 0f       	add	r24, r24
     428:	99 1f       	adc	r25, r25
     42a:	82 0f       	add	r24, r18
     42c:	93 1f       	adc	r25, r19
     42e:	88 0f       	add	r24, r24
     430:	99 1f       	adc	r25, r25
     432:	8d 58       	subi	r24, 0x8D	; 141
     434:	9f 4f       	sbci	r25, 0xFF	; 255
     436:	21 e0       	ldi	r18, 0x01	; 1
     438:	fc 01       	movw	r30, r24
     43a:	20 83       	st	Z, r18
				
				/* Check If the entered priority is larger than the maximum one >> Set it to the Max */
				if ( priority <= SOS_MAX_PRIORITY)
     43c:	8d 81       	ldd	r24, Y+5	; 0x05
     43e:	87 30       	cpi	r24, 0x07	; 7
     440:	80 f4       	brcc	.+32     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
				{
					StrArrOfTasks[index].Priority = priority;
     442:	8a 81       	ldd	r24, Y+2	; 0x02
     444:	28 2f       	mov	r18, r24
     446:	30 e0       	ldi	r19, 0x00	; 0
     448:	c9 01       	movw	r24, r18
     44a:	88 0f       	add	r24, r24
     44c:	99 1f       	adc	r25, r25
     44e:	82 0f       	add	r24, r18
     450:	93 1f       	adc	r25, r19
     452:	88 0f       	add	r24, r24
     454:	99 1f       	adc	r25, r25
     456:	80 59       	subi	r24, 0x90	; 144
     458:	9f 4f       	sbci	r25, 0xFF	; 255
     45a:	2d 81       	ldd	r18, Y+5	; 0x05
     45c:	fc 01       	movw	r30, r24
     45e:	20 83       	st	Z, r18
     460:	0f c0       	rjmp	.+30     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
				}
				else
				{
					StrArrOfTasks[index].Priority = SOS_MAX_PRIORITY;
     462:	8a 81       	ldd	r24, Y+2	; 0x02
     464:	28 2f       	mov	r18, r24
     466:	30 e0       	ldi	r19, 0x00	; 0
     468:	c9 01       	movw	r24, r18
     46a:	88 0f       	add	r24, r24
     46c:	99 1f       	adc	r25, r25
     46e:	82 0f       	add	r24, r18
     470:	93 1f       	adc	r25, r19
     472:	88 0f       	add	r24, r24
     474:	99 1f       	adc	r25, r25
     476:	80 59       	subi	r24, 0x90	; 144
     478:	9f 4f       	sbci	r25, 0xFF	; 255
     47a:	26 e0       	ldi	r18, 0x06	; 6
     47c:	fc 01       	movw	r30, r24
     47e:	20 83       	st	Z, r18
				}
				API_State = OK_T;
     480:	19 82       	std	Y+1, r1	; 0x01
				break;
     482:	0c c0       	rjmp	.+24     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
			}
			else
			{
				API_State = ERROR_MAX_TASKS_NUMBER_REACHED;
     484:	83 e0       	ldi	r24, 0x03	; 3
     486:	89 83       	std	Y+1, r24	; 0x01
	EnumSOSError_type API_State = OK_T;
	uint8 index;
	/* Protect from NUll pointer */ 
	if ( NULL != PtrFunc)
	{   /* Loop Through the Array of Tasks */ 
		for (index = INITIAL_ZERO ; index < SOS_MAX_NUMBER_OF_TASKS ; index++)
     488:	8a 81       	ldd	r24, Y+2	; 0x02
     48a:	8f 5f       	subi	r24, 0xFF	; 255
     48c:	8a 83       	std	Y+2, r24	; 0x02
     48e:	8a 81       	ldd	r24, Y+2	; 0x02
     490:	86 30       	cpi	r24, 0x06	; 6
     492:	08 f4       	brcc	.+2      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
     494:	90 cf       	rjmp	.-224    	; 0x3b6 <Sos_Create_Task+0x2e>
     496:	02 c0       	rjmp	.+4      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
			}
		}
	}
	else
	{
		API_State = ERROR_NULL_POINTER;
     498:	81 e0       	ldi	r24, 0x01	; 1
     49a:	89 83       	std	Y+1, r24	; 0x01
	}
	return API_State;
     49c:	89 81       	ldd	r24, Y+1	; 0x01
}
     49e:	27 96       	adiw	r28, 0x07	; 7
     4a0:	0f b6       	in	r0, 0x3f	; 63
     4a2:	f8 94       	cli
     4a4:	de bf       	out	0x3e, r29	; 62
     4a6:	0f be       	out	0x3f, r0	; 63
     4a8:	cd bf       	out	0x3d, r28	; 61
     4aa:	df 91       	pop	r29
     4ac:	cf 91       	pop	r28
     4ae:	08 95       	ret

000004b0 <Sos_Run>:
 * Function : Sos_Run
 * Description: this function is to run the System Scheduler (Algorithm)
 * @return void
 */
void Sos_Run(void)
{
     4b0:	cf 93       	push	r28
     4b2:	df 93       	push	r29
     4b4:	00 d0       	rcall	.+0      	; 0x4b6 <Sos_Run+0x6>
     4b6:	1f 92       	push	r1
     4b8:	cd b7       	in	r28, 0x3d	; 61
     4ba:	de b7       	in	r29, 0x3e	; 62
	sint8 index = INITIAL_ZERO;
     4bc:	19 82       	std	Y+1, r1	; 0x01
	sint8 MaxPriorityIndex = INITIAL_MINUS_ONE;
     4be:	8f ef       	ldi	r24, 0xFF	; 255
     4c0:	8a 83       	std	Y+2, r24	; 0x02
	sint8 MaxPriority = INITIAL_ZERO;
     4c2:	1b 82       	std	Y+3, r1	; 0x03
	/* Start the Timer Used  */
	Timers_Start(SOS_TIMER);
     4c4:	81 e0       	ldi	r24, 0x01	; 1
     4c6:	0e 94 ef 07 	call	0xfde	; 0xfde <Timers_Start>
	while(TRUE)
	{	
		for (index = INITIAL_ZERO; index < SOS_MAX_NUMBER_OF_TASKS; index++)
     4ca:	19 82       	std	Y+1, r1	; 0x01
     4cc:	98 c0       	rjmp	.+304    	; 0x5fe <Sos_Run+0x14e>
		{
				switch( (StrArrOfTasks[index].TaskState) )
     4ce:	89 81       	ldd	r24, Y+1	; 0x01
     4d0:	28 2f       	mov	r18, r24
     4d2:	88 0f       	add	r24, r24
     4d4:	33 0b       	sbc	r19, r19
     4d6:	c9 01       	movw	r24, r18
     4d8:	88 0f       	add	r24, r24
     4da:	99 1f       	adc	r25, r25
     4dc:	82 0f       	add	r24, r18
     4de:	93 1f       	adc	r25, r19
     4e0:	88 0f       	add	r24, r24
     4e2:	99 1f       	adc	r25, r25
     4e4:	8d 58       	subi	r24, 0x8D	; 141
     4e6:	9f 4f       	sbci	r25, 0xFF	; 255
     4e8:	fc 01       	movw	r30, r24
     4ea:	80 81       	ld	r24, Z
     4ec:	88 2f       	mov	r24, r24
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	81 30       	cpi	r24, 0x01	; 1
     4f2:	91 05       	cpc	r25, r1
     4f4:	71 f0       	breq	.+28     	; 0x512 <Sos_Run+0x62>
     4f6:	82 30       	cpi	r24, 0x02	; 2
     4f8:	91 05       	cpc	r25, r1
     4fa:	24 f4       	brge	.+8      	; 0x504 <Sos_Run+0x54>
     4fc:	89 2b       	or	r24, r25
     4fe:	09 f4       	brne	.+2      	; 0x502 <Sos_Run+0x52>
     500:	76 c0       	rjmp	.+236    	; 0x5ee <Sos_Run+0x13e>
						{
							//Do nothing
						}
						break;
					default:
						break;
     502:	7a c0       	rjmp	.+244    	; 0x5f8 <Sos_Run+0x148>
	Timers_Start(SOS_TIMER);
	while(TRUE)
	{	
		for (index = INITIAL_ZERO; index < SOS_MAX_NUMBER_OF_TASKS; index++)
		{
				switch( (StrArrOfTasks[index].TaskState) )
     504:	82 30       	cpi	r24, 0x02	; 2
     506:	91 05       	cpc	r25, r1
     508:	81 f1       	breq	.+96     	; 0x56a <Sos_Run+0xba>
     50a:	03 97       	sbiw	r24, 0x03	; 3
     50c:	09 f4       	brne	.+2      	; 0x510 <Sos_Run+0x60>
     50e:	41 c0       	rjmp	.+130    	; 0x592 <Sos_Run+0xe2>
						{
							//Do nothing
						}
						break;
					default:
						break;
     510:	73 c0       	rjmp	.+230    	; 0x5f8 <Sos_Run+0x148>
				{
					case TaskDormant:
						//Do Nothing
						break;
					case TaskReady:
						if( MaxPriority < StrArrOfTasks[index].Priority )
     512:	8b 81       	ldd	r24, Y+3	; 0x03
     514:	48 2f       	mov	r20, r24
     516:	88 0f       	add	r24, r24
     518:	55 0b       	sbc	r21, r21
     51a:	89 81       	ldd	r24, Y+1	; 0x01
     51c:	28 2f       	mov	r18, r24
     51e:	88 0f       	add	r24, r24
     520:	33 0b       	sbc	r19, r19
     522:	c9 01       	movw	r24, r18
     524:	88 0f       	add	r24, r24
     526:	99 1f       	adc	r25, r25
     528:	82 0f       	add	r24, r18
     52a:	93 1f       	adc	r25, r19
     52c:	88 0f       	add	r24, r24
     52e:	99 1f       	adc	r25, r25
     530:	80 59       	subi	r24, 0x90	; 144
     532:	9f 4f       	sbci	r25, 0xFF	; 255
     534:	fc 01       	movw	r30, r24
     536:	80 81       	ld	r24, Z
     538:	88 2f       	mov	r24, r24
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	48 17       	cp	r20, r24
     53e:	59 07       	cpc	r21, r25
     540:	0c f0       	brlt	.+2      	; 0x544 <Sos_Run+0x94>
     542:	57 c0       	rjmp	.+174    	; 0x5f2 <Sos_Run+0x142>
						{
							MaxPriority = StrArrOfTasks[index].Priority;
     544:	89 81       	ldd	r24, Y+1	; 0x01
     546:	28 2f       	mov	r18, r24
     548:	88 0f       	add	r24, r24
     54a:	33 0b       	sbc	r19, r19
     54c:	c9 01       	movw	r24, r18
     54e:	88 0f       	add	r24, r24
     550:	99 1f       	adc	r25, r25
     552:	82 0f       	add	r24, r18
     554:	93 1f       	adc	r25, r19
     556:	88 0f       	add	r24, r24
     558:	99 1f       	adc	r25, r25
     55a:	80 59       	subi	r24, 0x90	; 144
     55c:	9f 4f       	sbci	r25, 0xFF	; 255
     55e:	fc 01       	movw	r30, r24
     560:	80 81       	ld	r24, Z
     562:	8b 83       	std	Y+3, r24	; 0x03
							MaxPriorityIndex = index;
     564:	89 81       	ldd	r24, Y+1	; 0x01
     566:	8a 83       	std	Y+2, r24	; 0x02
						}
						else
						{
							//Do Nothing
						}
						break;
     568:	44 c0       	rjmp	.+136    	; 0x5f2 <Sos_Run+0x142>
					case TaskRunning:
						/* Return the State of the Task to waiting */
						StrArrOfTasks[index].TaskState = TaskWaiting;
     56a:	89 81       	ldd	r24, Y+1	; 0x01
     56c:	28 2f       	mov	r18, r24
     56e:	88 0f       	add	r24, r24
     570:	33 0b       	sbc	r19, r19
     572:	c9 01       	movw	r24, r18
     574:	88 0f       	add	r24, r24
     576:	99 1f       	adc	r25, r25
     578:	82 0f       	add	r24, r18
     57a:	93 1f       	adc	r25, r19
     57c:	88 0f       	add	r24, r24
     57e:	99 1f       	adc	r25, r25
     580:	8d 58       	subi	r24, 0x8D	; 141
     582:	9f 4f       	sbci	r25, 0xFF	; 255
     584:	23 e0       	ldi	r18, 0x03	; 3
     586:	fc 01       	movw	r30, r24
     588:	20 83       	st	Z, r18
						index = index - INITIAL_ONE; 
     58a:	89 81       	ldd	r24, Y+1	; 0x01
     58c:	81 50       	subi	r24, 0x01	; 1
     58e:	89 83       	std	Y+1, r24	; 0x01
						break;
     590:	33 c0       	rjmp	.+102    	; 0x5f8 <Sos_Run+0x148>
					case TaskWaiting:
						if( (Systick % StrArrOfTasks[index].Periodicity) == FALSE)
     592:	40 91 92 00 	lds	r20, 0x0092	; 0x800092 <Systick>
     596:	50 91 93 00 	lds	r21, 0x0093	; 0x800093 <Systick+0x1>
     59a:	89 81       	ldd	r24, Y+1	; 0x01
     59c:	28 2f       	mov	r18, r24
     59e:	88 0f       	add	r24, r24
     5a0:	33 0b       	sbc	r19, r19
     5a2:	c9 01       	movw	r24, r18
     5a4:	88 0f       	add	r24, r24
     5a6:	99 1f       	adc	r25, r25
     5a8:	82 0f       	add	r24, r18
     5aa:	93 1f       	adc	r25, r19
     5ac:	88 0f       	add	r24, r24
     5ae:	99 1f       	adc	r25, r25
     5b0:	8f 58       	subi	r24, 0x8F	; 143
     5b2:	9f 4f       	sbci	r25, 0xFF	; 255
     5b4:	fc 01       	movw	r30, r24
     5b6:	20 81       	ld	r18, Z
     5b8:	31 81       	ldd	r19, Z+1	; 0x01
     5ba:	ca 01       	movw	r24, r20
     5bc:	b9 01       	movw	r22, r18
     5be:	0e 94 94 08 	call	0x1128	; 0x1128 <__udivmodhi4>
     5c2:	89 2b       	or	r24, r25
     5c4:	c1 f4       	brne	.+48     	; 0x5f6 <Sos_Run+0x146>
						{
							/* Return the State of the Task to Ready */
							StrArrOfTasks[index].TaskState = TaskReady;
     5c6:	89 81       	ldd	r24, Y+1	; 0x01
     5c8:	28 2f       	mov	r18, r24
     5ca:	88 0f       	add	r24, r24
     5cc:	33 0b       	sbc	r19, r19
     5ce:	c9 01       	movw	r24, r18
     5d0:	88 0f       	add	r24, r24
     5d2:	99 1f       	adc	r25, r25
     5d4:	82 0f       	add	r24, r18
     5d6:	93 1f       	adc	r25, r19
     5d8:	88 0f       	add	r24, r24
     5da:	99 1f       	adc	r25, r25
     5dc:	8d 58       	subi	r24, 0x8D	; 141
     5de:	9f 4f       	sbci	r25, 0xFF	; 255
     5e0:	21 e0       	ldi	r18, 0x01	; 1
     5e2:	fc 01       	movw	r30, r24
     5e4:	20 83       	st	Z, r18
							index = index - INITIAL_ONE;
     5e6:	89 81       	ldd	r24, Y+1	; 0x01
     5e8:	81 50       	subi	r24, 0x01	; 1
     5ea:	89 83       	std	Y+1, r24	; 0x01
						}
						else
						{
							//Do nothing
						}
						break;
     5ec:	04 c0       	rjmp	.+8      	; 0x5f6 <Sos_Run+0x146>
		{
				switch( (StrArrOfTasks[index].TaskState) )
				{
					case TaskDormant:
						//Do Nothing
						break;
     5ee:	00 00       	nop
     5f0:	03 c0       	rjmp	.+6      	; 0x5f8 <Sos_Run+0x148>
						}
						else
						{
							//Do Nothing
						}
						break;
     5f2:	00 00       	nop
     5f4:	01 c0       	rjmp	.+2      	; 0x5f8 <Sos_Run+0x148>
						}
						else
						{
							//Do nothing
						}
						break;
     5f6:	00 00       	nop
	sint8 MaxPriority = INITIAL_ZERO;
	/* Start the Timer Used  */
	Timers_Start(SOS_TIMER);
	while(TRUE)
	{	
		for (index = INITIAL_ZERO; index < SOS_MAX_NUMBER_OF_TASKS; index++)
     5f8:	89 81       	ldd	r24, Y+1	; 0x01
     5fa:	8f 5f       	subi	r24, 0xFF	; 255
     5fc:	89 83       	std	Y+1, r24	; 0x01
     5fe:	89 81       	ldd	r24, Y+1	; 0x01
     600:	86 30       	cpi	r24, 0x06	; 6
     602:	0c f4       	brge	.+2      	; 0x606 <Sos_Run+0x156>
     604:	64 cf       	rjmp	.-312    	; 0x4ce <Sos_Run+0x1e>
					default:
						break;
				}
		}
		
		if(MaxPriorityIndex >= INITIAL_ZERO)
     606:	8a 81       	ldd	r24, Y+2	; 0x02
     608:	88 23       	and	r24, r24
     60a:	2c f1       	brlt	.+74     	; 0x656 <Sos_Run+0x1a6>
		{
			StrArrOfTasks[MaxPriorityIndex].PtrTask();
     60c:	8a 81       	ldd	r24, Y+2	; 0x02
     60e:	28 2f       	mov	r18, r24
     610:	88 0f       	add	r24, r24
     612:	33 0b       	sbc	r19, r19
     614:	c9 01       	movw	r24, r18
     616:	88 0f       	add	r24, r24
     618:	99 1f       	adc	r25, r25
     61a:	82 0f       	add	r24, r18
     61c:	93 1f       	adc	r25, r19
     61e:	88 0f       	add	r24, r24
     620:	99 1f       	adc	r25, r25
     622:	82 59       	subi	r24, 0x92	; 146
     624:	9f 4f       	sbci	r25, 0xFF	; 255
     626:	fc 01       	movw	r30, r24
     628:	80 81       	ld	r24, Z
     62a:	91 81       	ldd	r25, Z+1	; 0x01
     62c:	fc 01       	movw	r30, r24
     62e:	09 95       	icall
			StrArrOfTasks[MaxPriorityIndex].TaskState = TaskRunning;		
     630:	8a 81       	ldd	r24, Y+2	; 0x02
     632:	28 2f       	mov	r18, r24
     634:	88 0f       	add	r24, r24
     636:	33 0b       	sbc	r19, r19
     638:	c9 01       	movw	r24, r18
     63a:	88 0f       	add	r24, r24
     63c:	99 1f       	adc	r25, r25
     63e:	82 0f       	add	r24, r18
     640:	93 1f       	adc	r25, r19
     642:	88 0f       	add	r24, r24
     644:	99 1f       	adc	r25, r25
     646:	8d 58       	subi	r24, 0x8D	; 141
     648:	9f 4f       	sbci	r25, 0xFF	; 255
     64a:	22 e0       	ldi	r18, 0x02	; 2
     64c:	fc 01       	movw	r30, r24
     64e:	20 83       	st	Z, r18
			MaxPriorityIndex = INITIAL_MINUS_ONE;
     650:	8f ef       	ldi	r24, 0xFF	; 255
     652:	8a 83       	std	Y+2, r24	; 0x02
			MaxPriority = INITIAL_ZERO;
     654:	1b 82       	std	Y+3, r1	; 0x03
		}
		else
		{
			//Do Nothing
		}
		sleep_mode();
     656:	85 e5       	ldi	r24, 0x55	; 85
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	25 e5       	ldi	r18, 0x55	; 85
     65c:	30 e0       	ldi	r19, 0x00	; 0
     65e:	f9 01       	movw	r30, r18
     660:	20 81       	ld	r18, Z
     662:	20 68       	ori	r18, 0x80	; 128
     664:	fc 01       	movw	r30, r24
     666:	20 83       	st	Z, r18
     668:	88 95       	sleep
     66a:	85 e5       	ldi	r24, 0x55	; 85
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	25 e5       	ldi	r18, 0x55	; 85
     670:	30 e0       	ldi	r19, 0x00	; 0
     672:	f9 01       	movw	r30, r18
     674:	20 81       	ld	r18, Z
     676:	2f 77       	andi	r18, 0x7F	; 127
     678:	fc 01       	movw	r30, r24
     67a:	20 83       	st	Z, r18
	}
     67c:	26 cf       	rjmp	.-436    	; 0x4ca <Sos_Run+0x1a>

0000067e <Gpio_PinDirection>:
     67e:	cf 93       	push	r28
     680:	df 93       	push	r29
     682:	00 d0       	rcall	.+0      	; 0x684 <Gpio_PinDirection+0x6>
     684:	1f 92       	push	r1
     686:	cd b7       	in	r28, 0x3d	; 61
     688:	de b7       	in	r29, 0x3e	; 62
     68a:	89 83       	std	Y+1, r24	; 0x01
     68c:	6a 83       	std	Y+2, r22	; 0x02
     68e:	4b 83       	std	Y+3, r20	; 0x03
     690:	89 81       	ldd	r24, Y+1	; 0x01
     692:	88 2f       	mov	r24, r24
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	81 30       	cpi	r24, 0x01	; 1
     698:	91 05       	cpc	r25, r1
     69a:	81 f1       	breq	.+96     	; 0x6fc <Gpio_PinDirection+0x7e>
     69c:	82 30       	cpi	r24, 0x02	; 2
     69e:	91 05       	cpc	r25, r1
     6a0:	1c f4       	brge	.+6      	; 0x6a8 <Gpio_PinDirection+0x2a>
     6a2:	89 2b       	or	r24, r25
     6a4:	49 f0       	breq	.+18     	; 0x6b8 <Gpio_PinDirection+0x3a>
     6a6:	90 c0       	rjmp	.+288    	; 0x7c8 <Gpio_PinDirection+0x14a>
     6a8:	82 30       	cpi	r24, 0x02	; 2
     6aa:	91 05       	cpc	r25, r1
     6ac:	09 f4       	brne	.+2      	; 0x6b0 <Gpio_PinDirection+0x32>
     6ae:	48 c0       	rjmp	.+144    	; 0x740 <Gpio_PinDirection+0xc2>
     6b0:	03 97       	sbiw	r24, 0x03	; 3
     6b2:	09 f4       	brne	.+2      	; 0x6b6 <Gpio_PinDirection+0x38>
     6b4:	67 c0       	rjmp	.+206    	; 0x784 <Gpio_PinDirection+0x106>
     6b6:	88 c0       	rjmp	.+272    	; 0x7c8 <Gpio_PinDirection+0x14a>
     6b8:	8b 81       	ldd	r24, Y+3	; 0x03
     6ba:	88 2f       	mov	r24, r24
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	00 97       	sbiw	r24, 0x00	; 0
     6c0:	21 f0       	breq	.+8      	; 0x6ca <Gpio_PinDirection+0x4c>
     6c2:	8f 3f       	cpi	r24, 0xFF	; 255
     6c4:	91 05       	cpc	r25, r1
     6c6:	71 f0       	breq	.+28     	; 0x6e4 <Gpio_PinDirection+0x66>
     6c8:	7f c0       	rjmp	.+254    	; 0x7c8 <Gpio_PinDirection+0x14a>
     6ca:	8a e3       	ldi	r24, 0x3A	; 58
     6cc:	90 e0       	ldi	r25, 0x00	; 0
     6ce:	2a e3       	ldi	r18, 0x3A	; 58
     6d0:	30 e0       	ldi	r19, 0x00	; 0
     6d2:	f9 01       	movw	r30, r18
     6d4:	20 81       	ld	r18, Z
     6d6:	32 2f       	mov	r19, r18
     6d8:	2a 81       	ldd	r18, Y+2	; 0x02
     6da:	20 95       	com	r18
     6dc:	23 23       	and	r18, r19
     6de:	fc 01       	movw	r30, r24
     6e0:	20 83       	st	Z, r18
     6e2:	0b c0       	rjmp	.+22     	; 0x6fa <Gpio_PinDirection+0x7c>
     6e4:	8a e3       	ldi	r24, 0x3A	; 58
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	2a e3       	ldi	r18, 0x3A	; 58
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	f9 01       	movw	r30, r18
     6ee:	30 81       	ld	r19, Z
     6f0:	2a 81       	ldd	r18, Y+2	; 0x02
     6f2:	23 2b       	or	r18, r19
     6f4:	fc 01       	movw	r30, r24
     6f6:	20 83       	st	Z, r18
     6f8:	00 00       	nop
     6fa:	66 c0       	rjmp	.+204    	; 0x7c8 <Gpio_PinDirection+0x14a>
     6fc:	8b 81       	ldd	r24, Y+3	; 0x03
     6fe:	88 2f       	mov	r24, r24
     700:	90 e0       	ldi	r25, 0x00	; 0
     702:	00 97       	sbiw	r24, 0x00	; 0
     704:	21 f0       	breq	.+8      	; 0x70e <Gpio_PinDirection+0x90>
     706:	8f 3f       	cpi	r24, 0xFF	; 255
     708:	91 05       	cpc	r25, r1
     70a:	71 f0       	breq	.+28     	; 0x728 <Gpio_PinDirection+0xaa>
     70c:	5d c0       	rjmp	.+186    	; 0x7c8 <Gpio_PinDirection+0x14a>
     70e:	87 e3       	ldi	r24, 0x37	; 55
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	27 e3       	ldi	r18, 0x37	; 55
     714:	30 e0       	ldi	r19, 0x00	; 0
     716:	f9 01       	movw	r30, r18
     718:	20 81       	ld	r18, Z
     71a:	32 2f       	mov	r19, r18
     71c:	2a 81       	ldd	r18, Y+2	; 0x02
     71e:	20 95       	com	r18
     720:	23 23       	and	r18, r19
     722:	fc 01       	movw	r30, r24
     724:	20 83       	st	Z, r18
     726:	0b c0       	rjmp	.+22     	; 0x73e <Gpio_PinDirection+0xc0>
     728:	87 e3       	ldi	r24, 0x37	; 55
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	27 e3       	ldi	r18, 0x37	; 55
     72e:	30 e0       	ldi	r19, 0x00	; 0
     730:	f9 01       	movw	r30, r18
     732:	30 81       	ld	r19, Z
     734:	2a 81       	ldd	r18, Y+2	; 0x02
     736:	23 2b       	or	r18, r19
     738:	fc 01       	movw	r30, r24
     73a:	20 83       	st	Z, r18
     73c:	00 00       	nop
     73e:	44 c0       	rjmp	.+136    	; 0x7c8 <Gpio_PinDirection+0x14a>
     740:	8b 81       	ldd	r24, Y+3	; 0x03
     742:	88 2f       	mov	r24, r24
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	00 97       	sbiw	r24, 0x00	; 0
     748:	21 f0       	breq	.+8      	; 0x752 <Gpio_PinDirection+0xd4>
     74a:	8f 3f       	cpi	r24, 0xFF	; 255
     74c:	91 05       	cpc	r25, r1
     74e:	71 f0       	breq	.+28     	; 0x76c <Gpio_PinDirection+0xee>
     750:	3b c0       	rjmp	.+118    	; 0x7c8 <Gpio_PinDirection+0x14a>
     752:	84 e3       	ldi	r24, 0x34	; 52
     754:	90 e0       	ldi	r25, 0x00	; 0
     756:	24 e3       	ldi	r18, 0x34	; 52
     758:	30 e0       	ldi	r19, 0x00	; 0
     75a:	f9 01       	movw	r30, r18
     75c:	20 81       	ld	r18, Z
     75e:	32 2f       	mov	r19, r18
     760:	2a 81       	ldd	r18, Y+2	; 0x02
     762:	20 95       	com	r18
     764:	23 23       	and	r18, r19
     766:	fc 01       	movw	r30, r24
     768:	20 83       	st	Z, r18
     76a:	0b c0       	rjmp	.+22     	; 0x782 <Gpio_PinDirection+0x104>
     76c:	84 e3       	ldi	r24, 0x34	; 52
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	24 e3       	ldi	r18, 0x34	; 52
     772:	30 e0       	ldi	r19, 0x00	; 0
     774:	f9 01       	movw	r30, r18
     776:	30 81       	ld	r19, Z
     778:	2a 81       	ldd	r18, Y+2	; 0x02
     77a:	23 2b       	or	r18, r19
     77c:	fc 01       	movw	r30, r24
     77e:	20 83       	st	Z, r18
     780:	00 00       	nop
     782:	22 c0       	rjmp	.+68     	; 0x7c8 <Gpio_PinDirection+0x14a>
     784:	8b 81       	ldd	r24, Y+3	; 0x03
     786:	88 2f       	mov	r24, r24
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	00 97       	sbiw	r24, 0x00	; 0
     78c:	21 f0       	breq	.+8      	; 0x796 <Gpio_PinDirection+0x118>
     78e:	8f 3f       	cpi	r24, 0xFF	; 255
     790:	91 05       	cpc	r25, r1
     792:	71 f0       	breq	.+28     	; 0x7b0 <Gpio_PinDirection+0x132>
     794:	18 c0       	rjmp	.+48     	; 0x7c6 <Gpio_PinDirection+0x148>
     796:	81 e3       	ldi	r24, 0x31	; 49
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	21 e3       	ldi	r18, 0x31	; 49
     79c:	30 e0       	ldi	r19, 0x00	; 0
     79e:	f9 01       	movw	r30, r18
     7a0:	20 81       	ld	r18, Z
     7a2:	32 2f       	mov	r19, r18
     7a4:	2a 81       	ldd	r18, Y+2	; 0x02
     7a6:	20 95       	com	r18
     7a8:	23 23       	and	r18, r19
     7aa:	fc 01       	movw	r30, r24
     7ac:	20 83       	st	Z, r18
     7ae:	0b c0       	rjmp	.+22     	; 0x7c6 <Gpio_PinDirection+0x148>
     7b0:	81 e3       	ldi	r24, 0x31	; 49
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	21 e3       	ldi	r18, 0x31	; 49
     7b6:	30 e0       	ldi	r19, 0x00	; 0
     7b8:	f9 01       	movw	r30, r18
     7ba:	30 81       	ld	r19, Z
     7bc:	2a 81       	ldd	r18, Y+2	; 0x02
     7be:	23 2b       	or	r18, r19
     7c0:	fc 01       	movw	r30, r24
     7c2:	20 83       	st	Z, r18
     7c4:	00 00       	nop
     7c6:	00 00       	nop
     7c8:	00 00       	nop
     7ca:	0f 90       	pop	r0
     7cc:	0f 90       	pop	r0
     7ce:	0f 90       	pop	r0
     7d0:	df 91       	pop	r29
     7d2:	cf 91       	pop	r28
     7d4:	08 95       	ret

000007d6 <Gpio_PinWrite>:
     7d6:	cf 93       	push	r28
     7d8:	df 93       	push	r29
     7da:	00 d0       	rcall	.+0      	; 0x7dc <Gpio_PinWrite+0x6>
     7dc:	1f 92       	push	r1
     7de:	cd b7       	in	r28, 0x3d	; 61
     7e0:	de b7       	in	r29, 0x3e	; 62
     7e2:	89 83       	std	Y+1, r24	; 0x01
     7e4:	6a 83       	std	Y+2, r22	; 0x02
     7e6:	4b 83       	std	Y+3, r20	; 0x03
     7e8:	8b 81       	ldd	r24, Y+3	; 0x03
     7ea:	88 2f       	mov	r24, r24
     7ec:	90 e0       	ldi	r25, 0x00	; 0
     7ee:	00 97       	sbiw	r24, 0x00	; 0
     7f0:	09 f4       	brne	.+2      	; 0x7f4 <Gpio_PinWrite+0x1e>
     7f2:	42 c0       	rjmp	.+132    	; 0x878 <__stack+0x19>
     7f4:	01 97       	sbiw	r24, 0x01	; 1
     7f6:	09 f0       	breq	.+2      	; 0x7fa <Gpio_PinWrite+0x24>
     7f8:	86 c0       	rjmp	.+268    	; 0x906 <__stack+0xa7>
     7fa:	89 81       	ldd	r24, Y+1	; 0x01
     7fc:	88 2f       	mov	r24, r24
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	81 30       	cpi	r24, 0x01	; 1
     802:	91 05       	cpc	r25, r1
     804:	b9 f0       	breq	.+46     	; 0x834 <Gpio_PinWrite+0x5e>
     806:	82 30       	cpi	r24, 0x02	; 2
     808:	91 05       	cpc	r25, r1
     80a:	1c f4       	brge	.+6      	; 0x812 <Gpio_PinWrite+0x3c>
     80c:	89 2b       	or	r24, r25
     80e:	39 f0       	breq	.+14     	; 0x81e <Gpio_PinWrite+0x48>
     810:	7a c0       	rjmp	.+244    	; 0x906 <__stack+0xa7>
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	91 05       	cpc	r25, r1
     816:	c9 f0       	breq	.+50     	; 0x84a <Gpio_PinWrite+0x74>
     818:	03 97       	sbiw	r24, 0x03	; 3
     81a:	11 f1       	breq	.+68     	; 0x860 <__stack+0x1>
     81c:	74 c0       	rjmp	.+232    	; 0x906 <__stack+0xa7>
     81e:	8b e3       	ldi	r24, 0x3B	; 59
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	2b e3       	ldi	r18, 0x3B	; 59
     824:	30 e0       	ldi	r19, 0x00	; 0
     826:	f9 01       	movw	r30, r18
     828:	30 81       	ld	r19, Z
     82a:	2a 81       	ldd	r18, Y+2	; 0x02
     82c:	23 2b       	or	r18, r19
     82e:	fc 01       	movw	r30, r24
     830:	20 83       	st	Z, r18
     832:	21 c0       	rjmp	.+66     	; 0x876 <__stack+0x17>
     834:	88 e3       	ldi	r24, 0x38	; 56
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	28 e3       	ldi	r18, 0x38	; 56
     83a:	30 e0       	ldi	r19, 0x00	; 0
     83c:	f9 01       	movw	r30, r18
     83e:	30 81       	ld	r19, Z
     840:	2a 81       	ldd	r18, Y+2	; 0x02
     842:	23 2b       	or	r18, r19
     844:	fc 01       	movw	r30, r24
     846:	20 83       	st	Z, r18
     848:	16 c0       	rjmp	.+44     	; 0x876 <__stack+0x17>
     84a:	85 e3       	ldi	r24, 0x35	; 53
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	25 e3       	ldi	r18, 0x35	; 53
     850:	30 e0       	ldi	r19, 0x00	; 0
     852:	f9 01       	movw	r30, r18
     854:	30 81       	ld	r19, Z
     856:	2a 81       	ldd	r18, Y+2	; 0x02
     858:	23 2b       	or	r18, r19
     85a:	fc 01       	movw	r30, r24
     85c:	20 83       	st	Z, r18
     85e:	0b c0       	rjmp	.+22     	; 0x876 <__stack+0x17>
     860:	82 e3       	ldi	r24, 0x32	; 50
     862:	90 e0       	ldi	r25, 0x00	; 0
     864:	22 e3       	ldi	r18, 0x32	; 50
     866:	30 e0       	ldi	r19, 0x00	; 0
     868:	f9 01       	movw	r30, r18
     86a:	30 81       	ld	r19, Z
     86c:	2a 81       	ldd	r18, Y+2	; 0x02
     86e:	23 2b       	or	r18, r19
     870:	fc 01       	movw	r30, r24
     872:	20 83       	st	Z, r18
     874:	00 00       	nop
     876:	47 c0       	rjmp	.+142    	; 0x906 <__stack+0xa7>
     878:	89 81       	ldd	r24, Y+1	; 0x01
     87a:	88 2f       	mov	r24, r24
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	81 30       	cpi	r24, 0x01	; 1
     880:	91 05       	cpc	r25, r1
     882:	c9 f0       	breq	.+50     	; 0x8b6 <__stack+0x57>
     884:	82 30       	cpi	r24, 0x02	; 2
     886:	91 05       	cpc	r25, r1
     888:	1c f4       	brge	.+6      	; 0x890 <__stack+0x31>
     88a:	89 2b       	or	r24, r25
     88c:	39 f0       	breq	.+14     	; 0x89c <__stack+0x3d>
     88e:	3a c0       	rjmp	.+116    	; 0x904 <__stack+0xa5>
     890:	82 30       	cpi	r24, 0x02	; 2
     892:	91 05       	cpc	r25, r1
     894:	e9 f0       	breq	.+58     	; 0x8d0 <__stack+0x71>
     896:	03 97       	sbiw	r24, 0x03	; 3
     898:	41 f1       	breq	.+80     	; 0x8ea <__stack+0x8b>
     89a:	34 c0       	rjmp	.+104    	; 0x904 <__stack+0xa5>
     89c:	8b e3       	ldi	r24, 0x3B	; 59
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	2b e3       	ldi	r18, 0x3B	; 59
     8a2:	30 e0       	ldi	r19, 0x00	; 0
     8a4:	f9 01       	movw	r30, r18
     8a6:	20 81       	ld	r18, Z
     8a8:	32 2f       	mov	r19, r18
     8aa:	2a 81       	ldd	r18, Y+2	; 0x02
     8ac:	20 95       	com	r18
     8ae:	23 23       	and	r18, r19
     8b0:	fc 01       	movw	r30, r24
     8b2:	20 83       	st	Z, r18
     8b4:	27 c0       	rjmp	.+78     	; 0x904 <__stack+0xa5>
     8b6:	88 e3       	ldi	r24, 0x38	; 56
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	28 e3       	ldi	r18, 0x38	; 56
     8bc:	30 e0       	ldi	r19, 0x00	; 0
     8be:	f9 01       	movw	r30, r18
     8c0:	20 81       	ld	r18, Z
     8c2:	32 2f       	mov	r19, r18
     8c4:	2a 81       	ldd	r18, Y+2	; 0x02
     8c6:	20 95       	com	r18
     8c8:	23 23       	and	r18, r19
     8ca:	fc 01       	movw	r30, r24
     8cc:	20 83       	st	Z, r18
     8ce:	1a c0       	rjmp	.+52     	; 0x904 <__stack+0xa5>
     8d0:	85 e3       	ldi	r24, 0x35	; 53
     8d2:	90 e0       	ldi	r25, 0x00	; 0
     8d4:	25 e3       	ldi	r18, 0x35	; 53
     8d6:	30 e0       	ldi	r19, 0x00	; 0
     8d8:	f9 01       	movw	r30, r18
     8da:	20 81       	ld	r18, Z
     8dc:	32 2f       	mov	r19, r18
     8de:	2a 81       	ldd	r18, Y+2	; 0x02
     8e0:	20 95       	com	r18
     8e2:	23 23       	and	r18, r19
     8e4:	fc 01       	movw	r30, r24
     8e6:	20 83       	st	Z, r18
     8e8:	0d c0       	rjmp	.+26     	; 0x904 <__stack+0xa5>
     8ea:	82 e3       	ldi	r24, 0x32	; 50
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	22 e3       	ldi	r18, 0x32	; 50
     8f0:	30 e0       	ldi	r19, 0x00	; 0
     8f2:	f9 01       	movw	r30, r18
     8f4:	20 81       	ld	r18, Z
     8f6:	32 2f       	mov	r19, r18
     8f8:	2a 81       	ldd	r18, Y+2	; 0x02
     8fa:	20 95       	com	r18
     8fc:	23 23       	and	r18, r19
     8fe:	fc 01       	movw	r30, r24
     900:	20 83       	st	Z, r18
     902:	00 00       	nop
     904:	00 00       	nop
     906:	00 00       	nop
     908:	0f 90       	pop	r0
     90a:	0f 90       	pop	r0
     90c:	0f 90       	pop	r0
     90e:	df 91       	pop	r29
     910:	cf 91       	pop	r28
     912:	08 95       	ret

00000914 <Gpio_PinToggle>:
     914:	cf 93       	push	r28
     916:	df 93       	push	r29
     918:	00 d0       	rcall	.+0      	; 0x91a <Gpio_PinToggle+0x6>
     91a:	cd b7       	in	r28, 0x3d	; 61
     91c:	de b7       	in	r29, 0x3e	; 62
     91e:	89 83       	std	Y+1, r24	; 0x01
     920:	6a 83       	std	Y+2, r22	; 0x02
     922:	89 81       	ldd	r24, Y+1	; 0x01
     924:	88 2f       	mov	r24, r24
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	81 30       	cpi	r24, 0x01	; 1
     92a:	91 05       	cpc	r25, r1
     92c:	b9 f0       	breq	.+46     	; 0x95c <Gpio_PinToggle+0x48>
     92e:	82 30       	cpi	r24, 0x02	; 2
     930:	91 05       	cpc	r25, r1
     932:	1c f4       	brge	.+6      	; 0x93a <Gpio_PinToggle+0x26>
     934:	89 2b       	or	r24, r25
     936:	39 f0       	breq	.+14     	; 0x946 <Gpio_PinToggle+0x32>
     938:	32 c0       	rjmp	.+100    	; 0x99e <Gpio_PinToggle+0x8a>
     93a:	82 30       	cpi	r24, 0x02	; 2
     93c:	91 05       	cpc	r25, r1
     93e:	c9 f0       	breq	.+50     	; 0x972 <Gpio_PinToggle+0x5e>
     940:	03 97       	sbiw	r24, 0x03	; 3
     942:	11 f1       	breq	.+68     	; 0x988 <Gpio_PinToggle+0x74>
     944:	2c c0       	rjmp	.+88     	; 0x99e <Gpio_PinToggle+0x8a>
     946:	8b e3       	ldi	r24, 0x3B	; 59
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	2b e3       	ldi	r18, 0x3B	; 59
     94c:	30 e0       	ldi	r19, 0x00	; 0
     94e:	f9 01       	movw	r30, r18
     950:	30 81       	ld	r19, Z
     952:	2a 81       	ldd	r18, Y+2	; 0x02
     954:	23 27       	eor	r18, r19
     956:	fc 01       	movw	r30, r24
     958:	20 83       	st	Z, r18
     95a:	21 c0       	rjmp	.+66     	; 0x99e <Gpio_PinToggle+0x8a>
     95c:	88 e3       	ldi	r24, 0x38	; 56
     95e:	90 e0       	ldi	r25, 0x00	; 0
     960:	28 e3       	ldi	r18, 0x38	; 56
     962:	30 e0       	ldi	r19, 0x00	; 0
     964:	f9 01       	movw	r30, r18
     966:	30 81       	ld	r19, Z
     968:	2a 81       	ldd	r18, Y+2	; 0x02
     96a:	23 27       	eor	r18, r19
     96c:	fc 01       	movw	r30, r24
     96e:	20 83       	st	Z, r18
     970:	16 c0       	rjmp	.+44     	; 0x99e <Gpio_PinToggle+0x8a>
     972:	85 e3       	ldi	r24, 0x35	; 53
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	25 e3       	ldi	r18, 0x35	; 53
     978:	30 e0       	ldi	r19, 0x00	; 0
     97a:	f9 01       	movw	r30, r18
     97c:	30 81       	ld	r19, Z
     97e:	2a 81       	ldd	r18, Y+2	; 0x02
     980:	23 27       	eor	r18, r19
     982:	fc 01       	movw	r30, r24
     984:	20 83       	st	Z, r18
     986:	0b c0       	rjmp	.+22     	; 0x99e <Gpio_PinToggle+0x8a>
     988:	82 e3       	ldi	r24, 0x32	; 50
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	22 e3       	ldi	r18, 0x32	; 50
     98e:	30 e0       	ldi	r19, 0x00	; 0
     990:	f9 01       	movw	r30, r18
     992:	30 81       	ld	r19, Z
     994:	2a 81       	ldd	r18, Y+2	; 0x02
     996:	23 27       	eor	r18, r19
     998:	fc 01       	movw	r30, r24
     99a:	20 83       	st	Z, r18
     99c:	00 00       	nop
     99e:	00 00       	nop
     9a0:	0f 90       	pop	r0
     9a2:	0f 90       	pop	r0
     9a4:	df 91       	pop	r29
     9a6:	cf 91       	pop	r28
     9a8:	08 95       	ret

000009aa <Interrupts_On>:
     9aa:	cf 93       	push	r28
     9ac:	df 93       	push	r29
     9ae:	cd b7       	in	r28, 0x3d	; 61
     9b0:	de b7       	in	r29, 0x3e	; 62
     9b2:	8f e5       	ldi	r24, 0x5F	; 95
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	2f e5       	ldi	r18, 0x5F	; 95
     9b8:	30 e0       	ldi	r19, 0x00	; 0
     9ba:	f9 01       	movw	r30, r18
     9bc:	20 81       	ld	r18, Z
     9be:	20 68       	ori	r18, 0x80	; 128
     9c0:	fc 01       	movw	r30, r24
     9c2:	20 83       	st	Z, r18
     9c4:	00 00       	nop
     9c6:	df 91       	pop	r29
     9c8:	cf 91       	pop	r28
     9ca:	08 95       	ret

000009cc <Timers_Init>:
	{
		Gpio_PinWrite(SWPWM_2_PORT,SWPWM_2_PIN,TRUE);
		Timers_timer2_Delay_ns(time_On_ns);
		Gpio_PinWrite(SWPWM_2_PORT,SWPWM_2_PIN,FALSE);
		Timers_timer2_Delay_ns(time_Off_ns);
	}
     9cc:	cf 93       	push	r28
     9ce:	df 93       	push	r29
     9d0:	00 d0       	rcall	.+0      	; 0x9d2 <Timers_Init+0x6>
     9d2:	1f 92       	push	r1
     9d4:	cd b7       	in	r28, 0x3d	; 61
     9d6:	de b7       	in	r29, 0x3e	; 62
     9d8:	9b 83       	std	Y+3, r25	; 0x03
     9da:	8a 83       	std	Y+2, r24	; 0x02
     9dc:	19 82       	std	Y+1, r1	; 0x01
     9de:	8a 81       	ldd	r24, Y+2	; 0x02
     9e0:	9b 81       	ldd	r25, Y+3	; 0x03
     9e2:	fc 01       	movw	r30, r24
     9e4:	87 81       	ldd	r24, Z+7	; 0x07
     9e6:	90 85       	ldd	r25, Z+8	; 0x08
     9e8:	a1 85       	ldd	r26, Z+9	; 0x09
     9ea:	b2 85       	ldd	r27, Z+10	; 0x0a
     9ec:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <Gv_F_CPU>
     9f0:	90 93 95 00 	sts	0x0095, r25	; 0x800095 <Gv_F_CPU+0x1>
     9f4:	a0 93 96 00 	sts	0x0096, r26	; 0x800096 <Gv_F_CPU+0x2>
     9f8:	b0 93 97 00 	sts	0x0097, r27	; 0x800097 <Gv_F_CPU+0x3>
     9fc:	8a 81       	ldd	r24, Y+2	; 0x02
     9fe:	9b 81       	ldd	r25, Y+3	; 0x03
     a00:	fc 01       	movw	r30, r24
     a02:	80 81       	ld	r24, Z
     a04:	88 2f       	mov	r24, r24
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	81 30       	cpi	r24, 0x01	; 1
     a0a:	91 05       	cpc	r25, r1
     a0c:	09 f4       	brne	.+2      	; 0xa10 <Timers_Init+0x44>
     a0e:	64 c0       	rjmp	.+200    	; 0xad8 <Timers_Init+0x10c>
     a10:	82 30       	cpi	r24, 0x02	; 2
     a12:	91 05       	cpc	r25, r1
     a14:	09 f4       	brne	.+2      	; 0xa18 <Timers_Init+0x4c>
     a16:	cc c0       	rjmp	.+408    	; 0xbb0 <Timers_Init+0x1e4>
     a18:	89 2b       	or	r24, r25
     a1a:	09 f0       	breq	.+2      	; 0xa1e <Timers_Init+0x52>
     a1c:	26 c1       	rjmp	.+588    	; 0xc6a <Timers_Init+0x29e>
     a1e:	83 e5       	ldi	r24, 0x53	; 83
     a20:	90 e0       	ldi	r25, 0x00	; 0
     a22:	23 e5       	ldi	r18, 0x53	; 83
     a24:	30 e0       	ldi	r19, 0x00	; 0
     a26:	f9 01       	movw	r30, r18
     a28:	40 81       	ld	r20, Z
     a2a:	2a 81       	ldd	r18, Y+2	; 0x02
     a2c:	3b 81       	ldd	r19, Y+3	; 0x03
     a2e:	f9 01       	movw	r30, r18
     a30:	21 81       	ldd	r18, Z+1	; 0x01
     a32:	24 2b       	or	r18, r20
     a34:	fc 01       	movw	r30, r24
     a36:	20 83       	st	Z, r18
     a38:	89 e5       	ldi	r24, 0x59	; 89
     a3a:	90 e0       	ldi	r25, 0x00	; 0
     a3c:	29 e5       	ldi	r18, 0x59	; 89
     a3e:	30 e0       	ldi	r19, 0x00	; 0
     a40:	f9 01       	movw	r30, r18
     a42:	40 81       	ld	r20, Z
     a44:	2a 81       	ldd	r18, Y+2	; 0x02
     a46:	3b 81       	ldd	r19, Y+3	; 0x03
     a48:	f9 01       	movw	r30, r18
     a4a:	26 81       	ldd	r18, Z+6	; 0x06
     a4c:	24 2b       	or	r18, r20
     a4e:	fc 01       	movw	r30, r24
     a50:	20 83       	st	Z, r18
     a52:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <Gv_PrescallerTimer0_Mask>
     a56:	88 2f       	mov	r24, r24
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	82 30       	cpi	r24, 0x02	; 2
     a5c:	91 05       	cpc	r25, r1
     a5e:	e9 f0       	breq	.+58     	; 0xa9a <Timers_Init+0xce>
     a60:	83 30       	cpi	r24, 0x03	; 3
     a62:	91 05       	cpc	r25, r1
     a64:	2c f4       	brge	.+10     	; 0xa70 <Timers_Init+0xa4>
     a66:	00 97       	sbiw	r24, 0x00	; 0
     a68:	61 f0       	breq	.+24     	; 0xa82 <Timers_Init+0xb6>
     a6a:	01 97       	sbiw	r24, 0x01	; 1
     a6c:	79 f0       	breq	.+30     	; 0xa8c <Timers_Init+0xc0>
     a6e:	31 c0       	rjmp	.+98     	; 0xad2 <Timers_Init+0x106>
     a70:	84 30       	cpi	r24, 0x04	; 4
     a72:	91 05       	cpc	r25, r1
     a74:	01 f1       	breq	.+64     	; 0xab6 <Timers_Init+0xea>
     a76:	84 30       	cpi	r24, 0x04	; 4
     a78:	91 05       	cpc	r25, r1
     a7a:	b4 f0       	brlt	.+44     	; 0xaa8 <Timers_Init+0xdc>
     a7c:	05 97       	sbiw	r24, 0x05	; 5
     a7e:	11 f1       	breq	.+68     	; 0xac4 <Timers_Init+0xf8>
     a80:	28 c0       	rjmp	.+80     	; 0xad2 <Timers_Init+0x106>
     a82:	10 92 a2 00 	sts	0x00A2, r1	; 0x8000a2 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     a86:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <Gv_PrescallerTimer0_AbsoluteValue>
     a8a:	23 c0       	rjmp	.+70     	; 0xad2 <Timers_Init+0x106>
     a8c:	81 e0       	ldi	r24, 0x01	; 1
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     a94:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <Gv_PrescallerTimer0_AbsoluteValue>
     a98:	1c c0       	rjmp	.+56     	; 0xad2 <Timers_Init+0x106>
     a9a:	88 e0       	ldi	r24, 0x08	; 8
     a9c:	90 e0       	ldi	r25, 0x00	; 0
     a9e:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     aa2:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <Gv_PrescallerTimer0_AbsoluteValue>
     aa6:	15 c0       	rjmp	.+42     	; 0xad2 <Timers_Init+0x106>
     aa8:	80 e4       	ldi	r24, 0x40	; 64
     aaa:	90 e0       	ldi	r25, 0x00	; 0
     aac:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     ab0:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <Gv_PrescallerTimer0_AbsoluteValue>
     ab4:	0e c0       	rjmp	.+28     	; 0xad2 <Timers_Init+0x106>
     ab6:	80 e0       	ldi	r24, 0x00	; 0
     ab8:	91 e0       	ldi	r25, 0x01	; 1
     aba:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     abe:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <Gv_PrescallerTimer0_AbsoluteValue>
     ac2:	07 c0       	rjmp	.+14     	; 0xad2 <Timers_Init+0x106>
     ac4:	80 e0       	ldi	r24, 0x00	; 0
     ac6:	94 e0       	ldi	r25, 0x04	; 4
     ac8:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     acc:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <Gv_PrescallerTimer0_AbsoluteValue>
     ad0:	00 00       	nop
     ad2:	81 e0       	ldi	r24, 0x01	; 1
     ad4:	89 83       	std	Y+1, r24	; 0x01
     ad6:	cb c0       	rjmp	.+406    	; 0xc6e <Timers_Init+0x2a2>
     ad8:	8f e4       	ldi	r24, 0x4F	; 79
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	2f e4       	ldi	r18, 0x4F	; 79
     ade:	30 e0       	ldi	r19, 0x00	; 0
     ae0:	f9 01       	movw	r30, r18
     ae2:	20 81       	ld	r18, Z
     ae4:	42 2f       	mov	r20, r18
     ae6:	2a 81       	ldd	r18, Y+2	; 0x02
     ae8:	3b 81       	ldd	r19, Y+3	; 0x03
     aea:	f9 01       	movw	r30, r18
     aec:	21 81       	ldd	r18, Z+1	; 0x01
     aee:	23 70       	andi	r18, 0x03	; 3
     af0:	24 2b       	or	r18, r20
     af2:	fc 01       	movw	r30, r24
     af4:	20 83       	st	Z, r18
     af6:	8e e4       	ldi	r24, 0x4E	; 78
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	2e e4       	ldi	r18, 0x4E	; 78
     afc:	30 e0       	ldi	r19, 0x00	; 0
     afe:	f9 01       	movw	r30, r18
     b00:	20 81       	ld	r18, Z
     b02:	42 2f       	mov	r20, r18
     b04:	2a 81       	ldd	r18, Y+2	; 0x02
     b06:	3b 81       	ldd	r19, Y+3	; 0x03
     b08:	f9 01       	movw	r30, r18
     b0a:	21 81       	ldd	r18, Z+1	; 0x01
     b0c:	28 71       	andi	r18, 0x18	; 24
     b0e:	24 2b       	or	r18, r20
     b10:	fc 01       	movw	r30, r24
     b12:	20 83       	st	Z, r18
     b14:	89 e5       	ldi	r24, 0x59	; 89
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	29 e5       	ldi	r18, 0x59	; 89
     b1a:	30 e0       	ldi	r19, 0x00	; 0
     b1c:	f9 01       	movw	r30, r18
     b1e:	20 81       	ld	r18, Z
     b20:	24 60       	ori	r18, 0x04	; 4
     b22:	fc 01       	movw	r30, r24
     b24:	20 83       	st	Z, r18
     b26:	0e 94 d5 04 	call	0x9aa	; 0x9aa <Interrupts_On>
     b2a:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <Gv_PrescallerTimer1_Mask>
     b2e:	88 2f       	mov	r24, r24
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	82 30       	cpi	r24, 0x02	; 2
     b34:	91 05       	cpc	r25, r1
     b36:	e9 f0       	breq	.+58     	; 0xb72 <Timers_Init+0x1a6>
     b38:	83 30       	cpi	r24, 0x03	; 3
     b3a:	91 05       	cpc	r25, r1
     b3c:	2c f4       	brge	.+10     	; 0xb48 <Timers_Init+0x17c>
     b3e:	00 97       	sbiw	r24, 0x00	; 0
     b40:	61 f0       	breq	.+24     	; 0xb5a <Timers_Init+0x18e>
     b42:	01 97       	sbiw	r24, 0x01	; 1
     b44:	79 f0       	breq	.+30     	; 0xb64 <Timers_Init+0x198>
     b46:	31 c0       	rjmp	.+98     	; 0xbaa <Timers_Init+0x1de>
     b48:	84 30       	cpi	r24, 0x04	; 4
     b4a:	91 05       	cpc	r25, r1
     b4c:	01 f1       	breq	.+64     	; 0xb8e <Timers_Init+0x1c2>
     b4e:	84 30       	cpi	r24, 0x04	; 4
     b50:	91 05       	cpc	r25, r1
     b52:	b4 f0       	brlt	.+44     	; 0xb80 <Timers_Init+0x1b4>
     b54:	05 97       	sbiw	r24, 0x05	; 5
     b56:	11 f1       	breq	.+68     	; 0xb9c <Timers_Init+0x1d0>
     b58:	28 c0       	rjmp	.+80     	; 0xbaa <Timers_Init+0x1de>
     b5a:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b5e:	10 92 a3 00 	sts	0x00A3, r1	; 0x8000a3 <Gv_PrescallerTimer1_AbsoluteValue>
     b62:	23 c0       	rjmp	.+70     	; 0xbaa <Timers_Init+0x1de>
     b64:	81 e0       	ldi	r24, 0x01	; 1
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b6c:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <Gv_PrescallerTimer1_AbsoluteValue>
     b70:	1c c0       	rjmp	.+56     	; 0xbaa <Timers_Init+0x1de>
     b72:	88 e0       	ldi	r24, 0x08	; 8
     b74:	90 e0       	ldi	r25, 0x00	; 0
     b76:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b7a:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <Gv_PrescallerTimer1_AbsoluteValue>
     b7e:	15 c0       	rjmp	.+42     	; 0xbaa <Timers_Init+0x1de>
     b80:	80 e4       	ldi	r24, 0x40	; 64
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b88:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <Gv_PrescallerTimer1_AbsoluteValue>
     b8c:	0e c0       	rjmp	.+28     	; 0xbaa <Timers_Init+0x1de>
     b8e:	80 e0       	ldi	r24, 0x00	; 0
     b90:	91 e0       	ldi	r25, 0x01	; 1
     b92:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b96:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <Gv_PrescallerTimer1_AbsoluteValue>
     b9a:	07 c0       	rjmp	.+14     	; 0xbaa <Timers_Init+0x1de>
     b9c:	80 e0       	ldi	r24, 0x00	; 0
     b9e:	94 e0       	ldi	r25, 0x04	; 4
     ba0:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     ba4:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <Gv_PrescallerTimer1_AbsoluteValue>
     ba8:	00 00       	nop
     baa:	81 e0       	ldi	r24, 0x01	; 1
     bac:	89 83       	std	Y+1, r24	; 0x01
     bae:	5f c0       	rjmp	.+190    	; 0xc6e <Timers_Init+0x2a2>
     bb0:	85 e4       	ldi	r24, 0x45	; 69
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	25 e4       	ldi	r18, 0x45	; 69
     bb6:	30 e0       	ldi	r19, 0x00	; 0
     bb8:	f9 01       	movw	r30, r18
     bba:	40 81       	ld	r20, Z
     bbc:	2a 81       	ldd	r18, Y+2	; 0x02
     bbe:	3b 81       	ldd	r19, Y+3	; 0x03
     bc0:	f9 01       	movw	r30, r18
     bc2:	21 81       	ldd	r18, Z+1	; 0x01
     bc4:	24 2b       	or	r18, r20
     bc6:	fc 01       	movw	r30, r24
     bc8:	20 83       	st	Z, r18
     bca:	89 e5       	ldi	r24, 0x59	; 89
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	29 e5       	ldi	r18, 0x59	; 89
     bd0:	30 e0       	ldi	r19, 0x00	; 0
     bd2:	f9 01       	movw	r30, r18
     bd4:	40 81       	ld	r20, Z
     bd6:	2a 81       	ldd	r18, Y+2	; 0x02
     bd8:	3b 81       	ldd	r19, Y+3	; 0x03
     bda:	f9 01       	movw	r30, r18
     bdc:	26 81       	ldd	r18, Z+6	; 0x06
     bde:	24 2b       	or	r18, r20
     be0:	fc 01       	movw	r30, r24
     be2:	20 83       	st	Z, r18
     be4:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <Gv_PrescallerTimer2_Mask>
     be8:	88 2f       	mov	r24, r24
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	82 30       	cpi	r24, 0x02	; 2
     bee:	91 05       	cpc	r25, r1
     bf0:	e9 f0       	breq	.+58     	; 0xc2c <Timers_Init+0x260>
     bf2:	83 30       	cpi	r24, 0x03	; 3
     bf4:	91 05       	cpc	r25, r1
     bf6:	2c f4       	brge	.+10     	; 0xc02 <Timers_Init+0x236>
     bf8:	00 97       	sbiw	r24, 0x00	; 0
     bfa:	61 f0       	breq	.+24     	; 0xc14 <Timers_Init+0x248>
     bfc:	01 97       	sbiw	r24, 0x01	; 1
     bfe:	79 f0       	breq	.+30     	; 0xc1e <Timers_Init+0x252>
     c00:	31 c0       	rjmp	.+98     	; 0xc64 <Timers_Init+0x298>
     c02:	86 30       	cpi	r24, 0x06	; 6
     c04:	91 05       	cpc	r25, r1
     c06:	01 f1       	breq	.+64     	; 0xc48 <Timers_Init+0x27c>
     c08:	87 30       	cpi	r24, 0x07	; 7
     c0a:	91 05       	cpc	r25, r1
     c0c:	21 f1       	breq	.+72     	; 0xc56 <Timers_Init+0x28a>
     c0e:	04 97       	sbiw	r24, 0x04	; 4
     c10:	a1 f0       	breq	.+40     	; 0xc3a <Timers_Init+0x26e>
     c12:	28 c0       	rjmp	.+80     	; 0xc64 <Timers_Init+0x298>
     c14:	10 92 a0 00 	sts	0x00A0, r1	; 0x8000a0 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c18:	10 92 9f 00 	sts	0x009F, r1	; 0x80009f <Gv_PrescallerTimer2_AbsoluteValue>
     c1c:	23 c0       	rjmp	.+70     	; 0xc64 <Timers_Init+0x298>
     c1e:	81 e0       	ldi	r24, 0x01	; 1
     c20:	90 e0       	ldi	r25, 0x00	; 0
     c22:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c26:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Gv_PrescallerTimer2_AbsoluteValue>
     c2a:	1c c0       	rjmp	.+56     	; 0xc64 <Timers_Init+0x298>
     c2c:	88 e0       	ldi	r24, 0x08	; 8
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c34:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Gv_PrescallerTimer2_AbsoluteValue>
     c38:	15 c0       	rjmp	.+42     	; 0xc64 <Timers_Init+0x298>
     c3a:	80 e4       	ldi	r24, 0x40	; 64
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c42:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Gv_PrescallerTimer2_AbsoluteValue>
     c46:	0e c0       	rjmp	.+28     	; 0xc64 <Timers_Init+0x298>
     c48:	80 e0       	ldi	r24, 0x00	; 0
     c4a:	91 e0       	ldi	r25, 0x01	; 1
     c4c:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c50:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Gv_PrescallerTimer2_AbsoluteValue>
     c54:	07 c0       	rjmp	.+14     	; 0xc64 <Timers_Init+0x298>
     c56:	80 e0       	ldi	r24, 0x00	; 0
     c58:	94 e0       	ldi	r25, 0x04	; 4
     c5a:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c5e:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Gv_PrescallerTimer2_AbsoluteValue>
     c62:	00 00       	nop
     c64:	81 e0       	ldi	r24, 0x01	; 1
     c66:	89 83       	std	Y+1, r24	; 0x01
     c68:	02 c0       	rjmp	.+4      	; 0xc6e <Timers_Init+0x2a2>
     c6a:	19 82       	std	Y+1, r1	; 0x01
     c6c:	00 00       	nop
     c6e:	8a 81       	ldd	r24, Y+2	; 0x02
     c70:	9b 81       	ldd	r25, Y+3	; 0x03
     c72:	fc 01       	movw	r30, r24
     c74:	82 81       	ldd	r24, Z+2	; 0x02
     c76:	93 81       	ldd	r25, Z+3	; 0x03
     c78:	a4 81       	ldd	r26, Z+4	; 0x04
     c7a:	b5 81       	ldd	r27, Z+5	; 0x05
     c7c:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <Gv_Count>
     c80:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <Gv_Count+0x1>
     c84:	a0 93 9a 00 	sts	0x009A, r26	; 0x80009a <Gv_Count+0x2>
     c88:	b0 93 9b 00 	sts	0x009B, r27	; 0x80009b <Gv_Count+0x3>
     c8c:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <Gv_Count>
     c90:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <Gv_Count+0x1>
     c94:	a0 91 9a 00 	lds	r26, 0x009A	; 0x80009a <Gv_Count+0x2>
     c98:	b0 91 9b 00 	lds	r27, 0x009B	; 0x80009b <Gv_Count+0x3>
     c9c:	2a 81       	ldd	r18, Y+2	; 0x02
     c9e:	3b 81       	ldd	r19, Y+3	; 0x03
     ca0:	f9 01       	movw	r30, r18
     ca2:	20 81       	ld	r18, Z
     ca4:	ac 01       	movw	r20, r24
     ca6:	bd 01       	movw	r22, r26
     ca8:	82 2f       	mov	r24, r18
     caa:	0e 94 5e 06 	call	0xcbc	; 0xcbc <Timers_SetCounter>
     cae:	89 81       	ldd	r24, Y+1	; 0x01
     cb0:	0f 90       	pop	r0
     cb2:	0f 90       	pop	r0
     cb4:	0f 90       	pop	r0
     cb6:	df 91       	pop	r29
     cb8:	cf 91       	pop	r28
     cba:	08 95       	ret

00000cbc <Timers_SetCounter>:
     cbc:	ef 92       	push	r14
     cbe:	ff 92       	push	r15
     cc0:	0f 93       	push	r16
     cc2:	1f 93       	push	r17
     cc4:	cf 93       	push	r28
     cc6:	df 93       	push	r29
     cc8:	cd b7       	in	r28, 0x3d	; 61
     cca:	de b7       	in	r29, 0x3e	; 62
     ccc:	2d 97       	sbiw	r28, 0x0d	; 13
     cce:	0f b6       	in	r0, 0x3f	; 63
     cd0:	f8 94       	cli
     cd2:	de bf       	out	0x3e, r29	; 62
     cd4:	0f be       	out	0x3f, r0	; 63
     cd6:	cd bf       	out	0x3d, r28	; 61
     cd8:	89 87       	std	Y+9, r24	; 0x09
     cda:	4a 87       	std	Y+10, r20	; 0x0a
     cdc:	5b 87       	std	Y+11, r21	; 0x0b
     cde:	6c 87       	std	Y+12, r22	; 0x0c
     ce0:	7d 87       	std	Y+13, r23	; 0x0d
     ce2:	19 82       	std	Y+1, r1	; 0x01
     ce4:	1a 82       	std	Y+2, r1	; 0x02
     ce6:	1b 82       	std	Y+3, r1	; 0x03
     ce8:	1c 82       	std	Y+4, r1	; 0x04
     cea:	89 85       	ldd	r24, Y+9	; 0x09
     cec:	88 2f       	mov	r24, r24
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	81 30       	cpi	r24, 0x01	; 1
     cf2:	91 05       	cpc	r25, r1
     cf4:	09 f4       	brne	.+2      	; 0xcf8 <Timers_SetCounter+0x3c>
     cf6:	71 c0       	rjmp	.+226    	; 0xdda <Timers_SetCounter+0x11e>
     cf8:	82 30       	cpi	r24, 0x02	; 2
     cfa:	91 05       	cpc	r25, r1
     cfc:	09 f4       	brne	.+2      	; 0xd00 <Timers_SetCounter+0x44>
     cfe:	e6 c0       	rjmp	.+460    	; 0xecc <Timers_SetCounter+0x210>
     d00:	89 2b       	or	r24, r25
     d02:	09 f0       	breq	.+2      	; 0xd06 <Timers_SetCounter+0x4a>
     d04:	4d c1       	rjmp	.+666    	; 0xfa0 <Timers_SetCounter+0x2e4>
     d06:	80 91 a1 00 	lds	r24, 0x00A1	; 0x8000a1 <Gv_PrescallerTimer0_AbsoluteValue>
     d0a:	90 91 a2 00 	lds	r25, 0x00A2	; 0x8000a2 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     d0e:	cc 01       	movw	r24, r24
     d10:	a0 e0       	ldi	r26, 0x00	; 0
     d12:	b0 e0       	ldi	r27, 0x00	; 0
     d14:	9c 01       	movw	r18, r24
     d16:	ad 01       	movw	r20, r26
     d18:	60 e4       	ldi	r22, 0x40	; 64
     d1a:	72 e4       	ldi	r23, 0x42	; 66
     d1c:	8f e0       	ldi	r24, 0x0F	; 15
     d1e:	90 e0       	ldi	r25, 0x00	; 0
     d20:	0e 94 84 08 	call	0x1108	; 0x1108 <__mulsi3>
     d24:	dc 01       	movw	r26, r24
     d26:	cb 01       	movw	r24, r22
     d28:	20 91 94 00 	lds	r18, 0x0094	; 0x800094 <Gv_F_CPU>
     d2c:	30 91 95 00 	lds	r19, 0x0095	; 0x800095 <Gv_F_CPU+0x1>
     d30:	40 91 96 00 	lds	r20, 0x0096	; 0x800096 <Gv_F_CPU+0x2>
     d34:	50 91 97 00 	lds	r21, 0x0097	; 0x800097 <Gv_F_CPU+0x3>
     d38:	bc 01       	movw	r22, r24
     d3a:	cd 01       	movw	r24, r26
     d3c:	0e 94 a8 08 	call	0x1150	; 0x1150 <__udivmodsi4>
     d40:	da 01       	movw	r26, r20
     d42:	c9 01       	movw	r24, r18
     d44:	9c 01       	movw	r18, r24
     d46:	ad 01       	movw	r20, r26
     d48:	8a 85       	ldd	r24, Y+10	; 0x0a
     d4a:	9b 85       	ldd	r25, Y+11	; 0x0b
     d4c:	ac 85       	ldd	r26, Y+12	; 0x0c
     d4e:	bd 85       	ldd	r27, Y+13	; 0x0d
     d50:	bc 01       	movw	r22, r24
     d52:	cd 01       	movw	r24, r26
     d54:	0e 94 a8 08 	call	0x1150	; 0x1150 <__udivmodsi4>
     d58:	da 01       	movw	r26, r20
     d5a:	c9 01       	movw	r24, r18
     d5c:	8d 83       	std	Y+5, r24	; 0x05
     d5e:	9e 83       	std	Y+6, r25	; 0x06
     d60:	af 83       	std	Y+7, r26	; 0x07
     d62:	b8 87       	std	Y+8, r27	; 0x08
     d64:	8d 81       	ldd	r24, Y+5	; 0x05
     d66:	9e 81       	ldd	r25, Y+6	; 0x06
     d68:	af 81       	ldd	r26, Y+7	; 0x07
     d6a:	b8 85       	ldd	r27, Y+8	; 0x08
     d6c:	81 30       	cpi	r24, 0x01	; 1
     d6e:	91 40       	sbci	r25, 0x01	; 1
     d70:	a1 05       	cpc	r26, r1
     d72:	b1 05       	cpc	r27, r1
     d74:	28 f0       	brcs	.+10     	; 0xd80 <Timers_SetCounter+0xc4>
     d76:	19 82       	std	Y+1, r1	; 0x01
     d78:	1a 82       	std	Y+2, r1	; 0x02
     d7a:	1b 82       	std	Y+3, r1	; 0x03
     d7c:	1c 82       	std	Y+4, r1	; 0x04
     d7e:	15 c1       	rjmp	.+554    	; 0xfaa <Timers_SetCounter+0x2ee>
     d80:	20 e0       	ldi	r18, 0x00	; 0
     d82:	31 e0       	ldi	r19, 0x01	; 1
     d84:	40 e0       	ldi	r20, 0x00	; 0
     d86:	50 e0       	ldi	r21, 0x00	; 0
     d88:	8d 81       	ldd	r24, Y+5	; 0x05
     d8a:	9e 81       	ldd	r25, Y+6	; 0x06
     d8c:	af 81       	ldd	r26, Y+7	; 0x07
     d8e:	b8 85       	ldd	r27, Y+8	; 0x08
     d90:	79 01       	movw	r14, r18
     d92:	8a 01       	movw	r16, r20
     d94:	e8 1a       	sub	r14, r24
     d96:	f9 0a       	sbc	r15, r25
     d98:	0a 0b       	sbc	r16, r26
     d9a:	1b 0b       	sbc	r17, r27
     d9c:	d8 01       	movw	r26, r16
     d9e:	c7 01       	movw	r24, r14
     da0:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <Gv_Count>
     da4:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <Gv_Count+0x1>
     da8:	a0 93 9a 00 	sts	0x009A, r26	; 0x80009a <Gv_Count+0x2>
     dac:	b0 93 9b 00 	sts	0x009B, r27	; 0x80009b <Gv_Count+0x3>
     db0:	22 e5       	ldi	r18, 0x52	; 82
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <Gv_Count>
     db8:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <Gv_Count+0x1>
     dbc:	a0 91 9a 00 	lds	r26, 0x009A	; 0x80009a <Gv_Count+0x2>
     dc0:	b0 91 9b 00 	lds	r27, 0x009B	; 0x80009b <Gv_Count+0x3>
     dc4:	f9 01       	movw	r30, r18
     dc6:	80 83       	st	Z, r24
     dc8:	81 e0       	ldi	r24, 0x01	; 1
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	a0 e0       	ldi	r26, 0x00	; 0
     dce:	b0 e0       	ldi	r27, 0x00	; 0
     dd0:	89 83       	std	Y+1, r24	; 0x01
     dd2:	9a 83       	std	Y+2, r25	; 0x02
     dd4:	ab 83       	std	Y+3, r26	; 0x03
     dd6:	bc 83       	std	Y+4, r27	; 0x04
     dd8:	e8 c0       	rjmp	.+464    	; 0xfaa <Timers_SetCounter+0x2ee>
     dda:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <Gv_PrescallerTimer1_AbsoluteValue>
     dde:	90 91 a4 00 	lds	r25, 0x00A4	; 0x8000a4 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     de2:	cc 01       	movw	r24, r24
     de4:	a0 e0       	ldi	r26, 0x00	; 0
     de6:	b0 e0       	ldi	r27, 0x00	; 0
     de8:	9c 01       	movw	r18, r24
     dea:	ad 01       	movw	r20, r26
     dec:	60 e4       	ldi	r22, 0x40	; 64
     dee:	72 e4       	ldi	r23, 0x42	; 66
     df0:	8f e0       	ldi	r24, 0x0F	; 15
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	0e 94 84 08 	call	0x1108	; 0x1108 <__mulsi3>
     df8:	dc 01       	movw	r26, r24
     dfa:	cb 01       	movw	r24, r22
     dfc:	20 91 94 00 	lds	r18, 0x0094	; 0x800094 <Gv_F_CPU>
     e00:	30 91 95 00 	lds	r19, 0x0095	; 0x800095 <Gv_F_CPU+0x1>
     e04:	40 91 96 00 	lds	r20, 0x0096	; 0x800096 <Gv_F_CPU+0x2>
     e08:	50 91 97 00 	lds	r21, 0x0097	; 0x800097 <Gv_F_CPU+0x3>
     e0c:	bc 01       	movw	r22, r24
     e0e:	cd 01       	movw	r24, r26
     e10:	0e 94 a8 08 	call	0x1150	; 0x1150 <__udivmodsi4>
     e14:	da 01       	movw	r26, r20
     e16:	c9 01       	movw	r24, r18
     e18:	9c 01       	movw	r18, r24
     e1a:	ad 01       	movw	r20, r26
     e1c:	8a 85       	ldd	r24, Y+10	; 0x0a
     e1e:	9b 85       	ldd	r25, Y+11	; 0x0b
     e20:	ac 85       	ldd	r26, Y+12	; 0x0c
     e22:	bd 85       	ldd	r27, Y+13	; 0x0d
     e24:	bc 01       	movw	r22, r24
     e26:	cd 01       	movw	r24, r26
     e28:	0e 94 a8 08 	call	0x1150	; 0x1150 <__udivmodsi4>
     e2c:	da 01       	movw	r26, r20
     e2e:	c9 01       	movw	r24, r18
     e30:	8d 83       	std	Y+5, r24	; 0x05
     e32:	9e 83       	std	Y+6, r25	; 0x06
     e34:	af 83       	std	Y+7, r26	; 0x07
     e36:	b8 87       	std	Y+8, r27	; 0x08
     e38:	8d 81       	ldd	r24, Y+5	; 0x05
     e3a:	9e 81       	ldd	r25, Y+6	; 0x06
     e3c:	af 81       	ldd	r26, Y+7	; 0x07
     e3e:	b8 85       	ldd	r27, Y+8	; 0x08
     e40:	01 97       	sbiw	r24, 0x01	; 1
     e42:	a1 40       	sbci	r26, 0x01	; 1
     e44:	b1 05       	cpc	r27, r1
     e46:	28 f0       	brcs	.+10     	; 0xe52 <Timers_SetCounter+0x196>
     e48:	19 82       	std	Y+1, r1	; 0x01
     e4a:	1a 82       	std	Y+2, r1	; 0x02
     e4c:	1b 82       	std	Y+3, r1	; 0x03
     e4e:	1c 82       	std	Y+4, r1	; 0x04
     e50:	ac c0       	rjmp	.+344    	; 0xfaa <Timers_SetCounter+0x2ee>
     e52:	20 e0       	ldi	r18, 0x00	; 0
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	41 e0       	ldi	r20, 0x01	; 1
     e58:	50 e0       	ldi	r21, 0x00	; 0
     e5a:	8d 81       	ldd	r24, Y+5	; 0x05
     e5c:	9e 81       	ldd	r25, Y+6	; 0x06
     e5e:	af 81       	ldd	r26, Y+7	; 0x07
     e60:	b8 85       	ldd	r27, Y+8	; 0x08
     e62:	79 01       	movw	r14, r18
     e64:	8a 01       	movw	r16, r20
     e66:	e8 1a       	sub	r14, r24
     e68:	f9 0a       	sbc	r15, r25
     e6a:	0a 0b       	sbc	r16, r26
     e6c:	1b 0b       	sbc	r17, r27
     e6e:	d8 01       	movw	r26, r16
     e70:	c7 01       	movw	r24, r14
     e72:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <Gv_Count>
     e76:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <Gv_Count+0x1>
     e7a:	a0 93 9a 00 	sts	0x009A, r26	; 0x80009a <Gv_Count+0x2>
     e7e:	b0 93 9b 00 	sts	0x009B, r27	; 0x80009b <Gv_Count+0x3>
     e82:	2d e4       	ldi	r18, 0x4D	; 77
     e84:	30 e0       	ldi	r19, 0x00	; 0
     e86:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <Gv_Count>
     e8a:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <Gv_Count+0x1>
     e8e:	a0 91 9a 00 	lds	r26, 0x009A	; 0x80009a <Gv_Count+0x2>
     e92:	b0 91 9b 00 	lds	r27, 0x009B	; 0x80009b <Gv_Count+0x3>
     e96:	89 2f       	mov	r24, r25
     e98:	9a 2f       	mov	r25, r26
     e9a:	ab 2f       	mov	r26, r27
     e9c:	bb 27       	eor	r27, r27
     e9e:	f9 01       	movw	r30, r18
     ea0:	80 83       	st	Z, r24
     ea2:	2c e4       	ldi	r18, 0x4C	; 76
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <Gv_Count>
     eaa:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <Gv_Count+0x1>
     eae:	a0 91 9a 00 	lds	r26, 0x009A	; 0x80009a <Gv_Count+0x2>
     eb2:	b0 91 9b 00 	lds	r27, 0x009B	; 0x80009b <Gv_Count+0x3>
     eb6:	f9 01       	movw	r30, r18
     eb8:	80 83       	st	Z, r24
     eba:	81 e0       	ldi	r24, 0x01	; 1
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	a0 e0       	ldi	r26, 0x00	; 0
     ec0:	b0 e0       	ldi	r27, 0x00	; 0
     ec2:	89 83       	std	Y+1, r24	; 0x01
     ec4:	9a 83       	std	Y+2, r25	; 0x02
     ec6:	ab 83       	std	Y+3, r26	; 0x03
     ec8:	bc 83       	std	Y+4, r27	; 0x04
     eca:	6f c0       	rjmp	.+222    	; 0xfaa <Timers_SetCounter+0x2ee>
     ecc:	80 91 9f 00 	lds	r24, 0x009F	; 0x80009f <Gv_PrescallerTimer2_AbsoluteValue>
     ed0:	90 91 a0 00 	lds	r25, 0x00A0	; 0x8000a0 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     ed4:	cc 01       	movw	r24, r24
     ed6:	a0 e0       	ldi	r26, 0x00	; 0
     ed8:	b0 e0       	ldi	r27, 0x00	; 0
     eda:	9c 01       	movw	r18, r24
     edc:	ad 01       	movw	r20, r26
     ede:	60 e4       	ldi	r22, 0x40	; 64
     ee0:	72 e4       	ldi	r23, 0x42	; 66
     ee2:	8f e0       	ldi	r24, 0x0F	; 15
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	0e 94 84 08 	call	0x1108	; 0x1108 <__mulsi3>
     eea:	dc 01       	movw	r26, r24
     eec:	cb 01       	movw	r24, r22
     eee:	20 91 94 00 	lds	r18, 0x0094	; 0x800094 <Gv_F_CPU>
     ef2:	30 91 95 00 	lds	r19, 0x0095	; 0x800095 <Gv_F_CPU+0x1>
     ef6:	40 91 96 00 	lds	r20, 0x0096	; 0x800096 <Gv_F_CPU+0x2>
     efa:	50 91 97 00 	lds	r21, 0x0097	; 0x800097 <Gv_F_CPU+0x3>
     efe:	bc 01       	movw	r22, r24
     f00:	cd 01       	movw	r24, r26
     f02:	0e 94 a8 08 	call	0x1150	; 0x1150 <__udivmodsi4>
     f06:	da 01       	movw	r26, r20
     f08:	c9 01       	movw	r24, r18
     f0a:	9c 01       	movw	r18, r24
     f0c:	ad 01       	movw	r20, r26
     f0e:	8a 85       	ldd	r24, Y+10	; 0x0a
     f10:	9b 85       	ldd	r25, Y+11	; 0x0b
     f12:	ac 85       	ldd	r26, Y+12	; 0x0c
     f14:	bd 85       	ldd	r27, Y+13	; 0x0d
     f16:	bc 01       	movw	r22, r24
     f18:	cd 01       	movw	r24, r26
     f1a:	0e 94 a8 08 	call	0x1150	; 0x1150 <__udivmodsi4>
     f1e:	da 01       	movw	r26, r20
     f20:	c9 01       	movw	r24, r18
     f22:	8d 83       	std	Y+5, r24	; 0x05
     f24:	9e 83       	std	Y+6, r25	; 0x06
     f26:	af 83       	std	Y+7, r26	; 0x07
     f28:	b8 87       	std	Y+8, r27	; 0x08
     f2a:	8d 81       	ldd	r24, Y+5	; 0x05
     f2c:	9e 81       	ldd	r25, Y+6	; 0x06
     f2e:	af 81       	ldd	r26, Y+7	; 0x07
     f30:	b8 85       	ldd	r27, Y+8	; 0x08
     f32:	81 30       	cpi	r24, 0x01	; 1
     f34:	91 40       	sbci	r25, 0x01	; 1
     f36:	a1 05       	cpc	r26, r1
     f38:	b1 05       	cpc	r27, r1
     f3a:	28 f0       	brcs	.+10     	; 0xf46 <Timers_SetCounter+0x28a>
     f3c:	19 82       	std	Y+1, r1	; 0x01
     f3e:	1a 82       	std	Y+2, r1	; 0x02
     f40:	1b 82       	std	Y+3, r1	; 0x03
     f42:	1c 82       	std	Y+4, r1	; 0x04
     f44:	32 c0       	rjmp	.+100    	; 0xfaa <Timers_SetCounter+0x2ee>
     f46:	20 e0       	ldi	r18, 0x00	; 0
     f48:	31 e0       	ldi	r19, 0x01	; 1
     f4a:	40 e0       	ldi	r20, 0x00	; 0
     f4c:	50 e0       	ldi	r21, 0x00	; 0
     f4e:	8d 81       	ldd	r24, Y+5	; 0x05
     f50:	9e 81       	ldd	r25, Y+6	; 0x06
     f52:	af 81       	ldd	r26, Y+7	; 0x07
     f54:	b8 85       	ldd	r27, Y+8	; 0x08
     f56:	79 01       	movw	r14, r18
     f58:	8a 01       	movw	r16, r20
     f5a:	e8 1a       	sub	r14, r24
     f5c:	f9 0a       	sbc	r15, r25
     f5e:	0a 0b       	sbc	r16, r26
     f60:	1b 0b       	sbc	r17, r27
     f62:	d8 01       	movw	r26, r16
     f64:	c7 01       	movw	r24, r14
     f66:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <Gv_Count>
     f6a:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <Gv_Count+0x1>
     f6e:	a0 93 9a 00 	sts	0x009A, r26	; 0x80009a <Gv_Count+0x2>
     f72:	b0 93 9b 00 	sts	0x009B, r27	; 0x80009b <Gv_Count+0x3>
     f76:	24 e4       	ldi	r18, 0x44	; 68
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <Gv_Count>
     f7e:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <Gv_Count+0x1>
     f82:	a0 91 9a 00 	lds	r26, 0x009A	; 0x80009a <Gv_Count+0x2>
     f86:	b0 91 9b 00 	lds	r27, 0x009B	; 0x80009b <Gv_Count+0x3>
     f8a:	f9 01       	movw	r30, r18
     f8c:	80 83       	st	Z, r24
     f8e:	81 e0       	ldi	r24, 0x01	; 1
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	a0 e0       	ldi	r26, 0x00	; 0
     f94:	b0 e0       	ldi	r27, 0x00	; 0
     f96:	89 83       	std	Y+1, r24	; 0x01
     f98:	9a 83       	std	Y+2, r25	; 0x02
     f9a:	ab 83       	std	Y+3, r26	; 0x03
     f9c:	bc 83       	std	Y+4, r27	; 0x04
     f9e:	05 c0       	rjmp	.+10     	; 0xfaa <Timers_SetCounter+0x2ee>
     fa0:	19 82       	std	Y+1, r1	; 0x01
     fa2:	1a 82       	std	Y+2, r1	; 0x02
     fa4:	1b 82       	std	Y+3, r1	; 0x03
     fa6:	1c 82       	std	Y+4, r1	; 0x04
     fa8:	00 00       	nop
     faa:	8a 85       	ldd	r24, Y+10	; 0x0a
     fac:	9b 85       	ldd	r25, Y+11	; 0x0b
     fae:	ac 85       	ldd	r26, Y+12	; 0x0c
     fb0:	bd 85       	ldd	r27, Y+13	; 0x0d
     fb2:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <Gv_Count>
     fb6:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <Gv_Count+0x1>
     fba:	a0 93 9a 00 	sts	0x009A, r26	; 0x80009a <Gv_Count+0x2>
     fbe:	b0 93 9b 00 	sts	0x009B, r27	; 0x80009b <Gv_Count+0x3>
     fc2:	89 81       	ldd	r24, Y+1	; 0x01
     fc4:	2d 96       	adiw	r28, 0x0d	; 13
     fc6:	0f b6       	in	r0, 0x3f	; 63
     fc8:	f8 94       	cli
     fca:	de bf       	out	0x3e, r29	; 62
     fcc:	0f be       	out	0x3f, r0	; 63
     fce:	cd bf       	out	0x3d, r28	; 61
     fd0:	df 91       	pop	r29
     fd2:	cf 91       	pop	r28
     fd4:	1f 91       	pop	r17
     fd6:	0f 91       	pop	r16
     fd8:	ff 90       	pop	r15
     fda:	ef 90       	pop	r14
     fdc:	08 95       	ret

00000fde <Timers_Start>:
     fde:	cf 93       	push	r28
     fe0:	df 93       	push	r29
     fe2:	1f 92       	push	r1
     fe4:	cd b7       	in	r28, 0x3d	; 61
     fe6:	de b7       	in	r29, 0x3e	; 62
     fe8:	89 83       	std	Y+1, r24	; 0x01
     fea:	89 81       	ldd	r24, Y+1	; 0x01
     fec:	88 2f       	mov	r24, r24
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	81 30       	cpi	r24, 0x01	; 1
     ff2:	91 05       	cpc	r25, r1
     ff4:	99 f0       	breq	.+38     	; 0x101c <Timers_Start+0x3e>
     ff6:	82 30       	cpi	r24, 0x02	; 2
     ff8:	91 05       	cpc	r25, r1
     ffa:	e9 f0       	breq	.+58     	; 0x1036 <Timers_Start+0x58>
     ffc:	89 2b       	or	r24, r25
     ffe:	09 f0       	breq	.+2      	; 0x1002 <Timers_Start+0x24>
    1000:	27 c0       	rjmp	.+78     	; 0x1050 <Timers_Start+0x72>
    1002:	83 e5       	ldi	r24, 0x53	; 83
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	23 e5       	ldi	r18, 0x53	; 83
    1008:	30 e0       	ldi	r19, 0x00	; 0
    100a:	f9 01       	movw	r30, r18
    100c:	20 81       	ld	r18, Z
    100e:	28 7f       	andi	r18, 0xF8	; 248
    1010:	30 91 60 00 	lds	r19, 0x0060	; 0x800060 <Gv_PrescallerTimer0_Mask>
    1014:	23 2b       	or	r18, r19
    1016:	fc 01       	movw	r30, r24
    1018:	20 83       	st	Z, r18
    101a:	1a c0       	rjmp	.+52     	; 0x1050 <Timers_Start+0x72>
    101c:	8e e4       	ldi	r24, 0x4E	; 78
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	2e e4       	ldi	r18, 0x4E	; 78
    1022:	30 e0       	ldi	r19, 0x00	; 0
    1024:	f9 01       	movw	r30, r18
    1026:	20 81       	ld	r18, Z
    1028:	28 7f       	andi	r18, 0xF8	; 248
    102a:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <Gv_PrescallerTimer1_Mask>
    102e:	23 2b       	or	r18, r19
    1030:	fc 01       	movw	r30, r24
    1032:	20 83       	st	Z, r18
    1034:	0d c0       	rjmp	.+26     	; 0x1050 <Timers_Start+0x72>
    1036:	85 e4       	ldi	r24, 0x45	; 69
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	25 e4       	ldi	r18, 0x45	; 69
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	f9 01       	movw	r30, r18
    1040:	20 81       	ld	r18, Z
    1042:	28 7f       	andi	r18, 0xF8	; 248
    1044:	30 91 62 00 	lds	r19, 0x0062	; 0x800062 <Gv_PrescallerTimer2_Mask>
    1048:	23 2b       	or	r18, r19
    104a:	fc 01       	movw	r30, r24
    104c:	20 83       	st	Z, r18
    104e:	00 00       	nop
    1050:	81 e0       	ldi	r24, 0x01	; 1
    1052:	0f 90       	pop	r0
    1054:	df 91       	pop	r29
    1056:	cf 91       	pop	r28
    1058:	08 95       	ret

0000105a <Timers_SetCallBack>:
 * Function : Timers_SetCallBack
 * Description: This function is used to set the Call Back Function in the Timer
 * @return void
 */
void Timers_SetCallBack(v_PtrFunc_v_type FuncName)
{
    105a:	cf 93       	push	r28
    105c:	df 93       	push	r29
    105e:	00 d0       	rcall	.+0      	; 0x1060 <Timers_SetCallBack+0x6>
    1060:	cd b7       	in	r28, 0x3d	; 61
    1062:	de b7       	in	r29, 0x3e	; 62
    1064:	9a 83       	std	Y+2, r25	; 0x02
    1066:	89 83       	std	Y+1, r24	; 0x01
	gPtrCallBk = FuncName;
    1068:	89 81       	ldd	r24, Y+1	; 0x01
    106a:	9a 81       	ldd	r25, Y+2	; 0x02
    106c:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <gPtrCallBk+0x1>
    1070:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <gPtrCallBk>
}
    1074:	00 00       	nop
    1076:	0f 90       	pop	r0
    1078:	0f 90       	pop	r0
    107a:	df 91       	pop	r29
    107c:	cf 91       	pop	r28
    107e:	08 95       	ret

00001080 <__vector_9>:


ISR_T(TIMER1_OVF_vect)
{
    1080:	1f 92       	push	r1
    1082:	0f 92       	push	r0
    1084:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1088:	0f 92       	push	r0
    108a:	11 24       	eor	r1, r1
    108c:	2f 93       	push	r18
    108e:	3f 93       	push	r19
    1090:	4f 93       	push	r20
    1092:	5f 93       	push	r21
    1094:	6f 93       	push	r22
    1096:	7f 93       	push	r23
    1098:	8f 93       	push	r24
    109a:	9f 93       	push	r25
    109c:	af 93       	push	r26
    109e:	bf 93       	push	r27
    10a0:	ef 93       	push	r30
    10a2:	ff 93       	push	r31
    10a4:	cf 93       	push	r28
    10a6:	df 93       	push	r29
    10a8:	cd b7       	in	r28, 0x3d	; 61
    10aa:	de b7       	in	r29, 0x3e	; 62
	if(gPtrCallBk != NULL)
    10ac:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <gPtrCallBk>
    10b0:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <gPtrCallBk+0x1>
    10b4:	89 2b       	or	r24, r25
    10b6:	31 f0       	breq	.+12     	; 0x10c4 <__vector_9+0x44>
	{
		gPtrCallBk();
    10b8:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <gPtrCallBk>
    10bc:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <gPtrCallBk+0x1>
    10c0:	fc 01       	movw	r30, r24
    10c2:	09 95       	icall
	}
	else
	{
		// Do Nothing	
	}
	Timers_SetCounter(TIMER1,Gv_Count);
    10c4:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <Gv_Count>
    10c8:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <Gv_Count+0x1>
    10cc:	a0 91 9a 00 	lds	r26, 0x009A	; 0x80009a <Gv_Count+0x2>
    10d0:	b0 91 9b 00 	lds	r27, 0x009B	; 0x80009b <Gv_Count+0x3>
    10d4:	ac 01       	movw	r20, r24
    10d6:	bd 01       	movw	r22, r26
    10d8:	81 e0       	ldi	r24, 0x01	; 1
    10da:	0e 94 5e 06 	call	0xcbc	; 0xcbc <Timers_SetCounter>
    10de:	00 00       	nop
    10e0:	df 91       	pop	r29
    10e2:	cf 91       	pop	r28
    10e4:	ff 91       	pop	r31
    10e6:	ef 91       	pop	r30
    10e8:	bf 91       	pop	r27
    10ea:	af 91       	pop	r26
    10ec:	9f 91       	pop	r25
    10ee:	8f 91       	pop	r24
    10f0:	7f 91       	pop	r23
    10f2:	6f 91       	pop	r22
    10f4:	5f 91       	pop	r21
    10f6:	4f 91       	pop	r20
    10f8:	3f 91       	pop	r19
    10fa:	2f 91       	pop	r18
    10fc:	0f 90       	pop	r0
    10fe:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1102:	0f 90       	pop	r0
    1104:	1f 90       	pop	r1
    1106:	18 95       	reti

00001108 <__mulsi3>:
    1108:	db 01       	movw	r26, r22
    110a:	8f 93       	push	r24
    110c:	9f 93       	push	r25
    110e:	0e 94 ca 08 	call	0x1194	; 0x1194 <__muluhisi3>
    1112:	bf 91       	pop	r27
    1114:	af 91       	pop	r26
    1116:	a2 9f       	mul	r26, r18
    1118:	80 0d       	add	r24, r0
    111a:	91 1d       	adc	r25, r1
    111c:	a3 9f       	mul	r26, r19
    111e:	90 0d       	add	r25, r0
    1120:	b2 9f       	mul	r27, r18
    1122:	90 0d       	add	r25, r0
    1124:	11 24       	eor	r1, r1
    1126:	08 95       	ret

00001128 <__udivmodhi4>:
    1128:	aa 1b       	sub	r26, r26
    112a:	bb 1b       	sub	r27, r27
    112c:	51 e1       	ldi	r21, 0x11	; 17
    112e:	07 c0       	rjmp	.+14     	; 0x113e <__udivmodhi4_ep>

00001130 <__udivmodhi4_loop>:
    1130:	aa 1f       	adc	r26, r26
    1132:	bb 1f       	adc	r27, r27
    1134:	a6 17       	cp	r26, r22
    1136:	b7 07       	cpc	r27, r23
    1138:	10 f0       	brcs	.+4      	; 0x113e <__udivmodhi4_ep>
    113a:	a6 1b       	sub	r26, r22
    113c:	b7 0b       	sbc	r27, r23

0000113e <__udivmodhi4_ep>:
    113e:	88 1f       	adc	r24, r24
    1140:	99 1f       	adc	r25, r25
    1142:	5a 95       	dec	r21
    1144:	a9 f7       	brne	.-22     	; 0x1130 <__udivmodhi4_loop>
    1146:	80 95       	com	r24
    1148:	90 95       	com	r25
    114a:	bc 01       	movw	r22, r24
    114c:	cd 01       	movw	r24, r26
    114e:	08 95       	ret

00001150 <__udivmodsi4>:
    1150:	a1 e2       	ldi	r26, 0x21	; 33
    1152:	1a 2e       	mov	r1, r26
    1154:	aa 1b       	sub	r26, r26
    1156:	bb 1b       	sub	r27, r27
    1158:	fd 01       	movw	r30, r26
    115a:	0d c0       	rjmp	.+26     	; 0x1176 <__udivmodsi4_ep>

0000115c <__udivmodsi4_loop>:
    115c:	aa 1f       	adc	r26, r26
    115e:	bb 1f       	adc	r27, r27
    1160:	ee 1f       	adc	r30, r30
    1162:	ff 1f       	adc	r31, r31
    1164:	a2 17       	cp	r26, r18
    1166:	b3 07       	cpc	r27, r19
    1168:	e4 07       	cpc	r30, r20
    116a:	f5 07       	cpc	r31, r21
    116c:	20 f0       	brcs	.+8      	; 0x1176 <__udivmodsi4_ep>
    116e:	a2 1b       	sub	r26, r18
    1170:	b3 0b       	sbc	r27, r19
    1172:	e4 0b       	sbc	r30, r20
    1174:	f5 0b       	sbc	r31, r21

00001176 <__udivmodsi4_ep>:
    1176:	66 1f       	adc	r22, r22
    1178:	77 1f       	adc	r23, r23
    117a:	88 1f       	adc	r24, r24
    117c:	99 1f       	adc	r25, r25
    117e:	1a 94       	dec	r1
    1180:	69 f7       	brne	.-38     	; 0x115c <__udivmodsi4_loop>
    1182:	60 95       	com	r22
    1184:	70 95       	com	r23
    1186:	80 95       	com	r24
    1188:	90 95       	com	r25
    118a:	9b 01       	movw	r18, r22
    118c:	ac 01       	movw	r20, r24
    118e:	bd 01       	movw	r22, r26
    1190:	cf 01       	movw	r24, r30
    1192:	08 95       	ret

00001194 <__muluhisi3>:
    1194:	0e 94 d5 08 	call	0x11aa	; 0x11aa <__umulhisi3>
    1198:	a5 9f       	mul	r26, r21
    119a:	90 0d       	add	r25, r0
    119c:	b4 9f       	mul	r27, r20
    119e:	90 0d       	add	r25, r0
    11a0:	a4 9f       	mul	r26, r20
    11a2:	80 0d       	add	r24, r0
    11a4:	91 1d       	adc	r25, r1
    11a6:	11 24       	eor	r1, r1
    11a8:	08 95       	ret

000011aa <__umulhisi3>:
    11aa:	a2 9f       	mul	r26, r18
    11ac:	b0 01       	movw	r22, r0
    11ae:	b3 9f       	mul	r27, r19
    11b0:	c0 01       	movw	r24, r0
    11b2:	a3 9f       	mul	r26, r19
    11b4:	70 0d       	add	r23, r0
    11b6:	81 1d       	adc	r24, r1
    11b8:	11 24       	eor	r1, r1
    11ba:	91 1d       	adc	r25, r1
    11bc:	b2 9f       	mul	r27, r18
    11be:	70 0d       	add	r23, r0
    11c0:	81 1d       	adc	r24, r1
    11c2:	11 24       	eor	r1, r1
    11c4:	91 1d       	adc	r25, r1
    11c6:	08 95       	ret

000011c8 <_exit>:
    11c8:	f8 94       	cli

000011ca <__stop_program>:
    11ca:	ff cf       	rjmp	.-2      	; 0x11ca <__stop_program>
